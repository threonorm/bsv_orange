// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : gsd_orangecrab.v
// Device     : LFE5U-25F-8MG285C
// LiteX sha1 : 309f012d
// Date       : 2023-05-03 00:10:22
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module gsd_orangecrab (
    input  wire          clk48,
    input  wire   [29:0] wb_adr,
    input  wire   [31:0] wb_dat_w,
    output wire   [31:0] wb_dat_r,
    input  wire    [3:0] wb_sel,
    input  wire          wb_cyc,
    input  wire          wb_stb,
    output wire          wb_ack,
    input  wire          wb_we,
    input  wire    [2:0] wb_cti,
    input  wire    [1:0] wb_bte,
    output wire          wb_err,
    output wire   [15:0] ddram_a,
    output wire    [2:0] ddram_ba,
    output wire          ddram_ras_n,
    output wire          ddram_cas_n,
    output wire          ddram_we_n,
    output wire          ddram_cs_n,
    output wire    [1:0] ddram_dm,
    input  wire   [15:0] ddram_dq,
    input  wire    [1:0] ddram_dqs_p,
    output wire          ddram_clk_p,
    output wire          ddram_cke,
    output wire          ddram_odt,
    output wire          ddram_reset_n,
    output wire    [5:0] ddram_vccio,
    output wire    [1:0] ddram_gnd,
    output wire          rst_n
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire          init_clk;
reg           init_rst = 1'd0;
wire          por_clk;
wire          sys_clk;
reg           sys_rst = 1'd0;
wire          sys2x_clk;
wire          sys2x_i_clk;
wire          sys2x_i_rst;
wire          crg_stop;
wire          crg_reset0;
wire          crg_osc_g;
wire          crg_por_done;
reg    [23:0] crg_por_count = 24'd2400000;
wire          crg_sys2x_clk_ecsout;
wire          crg_reset1;
wire          crg_locked;
reg           crg_stdby = 1'd0;
wire          crg_clkin;
wire          crg_clkout;
reg           soc_rst = 1'd0;
wire          cpu_rst;
reg     [1:0] reset_storage = 2'd0;
reg           reset_re = 1'd0;
reg    [31:0] scratch_storage = 32'd305419896;
reg           scratch_re = 1'd0;
wire   [31:0] bus_errors_status;
wire          bus_errors_we;
reg           bus_errors_re = 1'd0;
wire          bus_error;
reg    [31:0] bus_errors = 32'd0;
wire   [29:0] ram_bus_adr;
wire   [31:0] ram_bus_dat_w;
wire   [31:0] ram_bus_dat_r;
wire    [3:0] ram_bus_sel;
wire          ram_bus_cyc;
wire          ram_bus_stb;
reg           ram_bus_ack = 1'd0;
wire          ram_bus_we;
wire    [2:0] ram_bus_cti;
wire    [1:0] ram_bus_bte;
reg           ram_bus_err = 1'd0;
reg           adr_burst = 1'd0;
wire   [10:0] adr;
wire   [31:0] dat_r;
reg     [3:0] we = 4'd0;
wire   [31:0] dat_w;
reg           uart_rxtx_re = 1'd0;
wire    [7:0] uart_rxtx_r;
reg           uart_rxtx_we = 1'd0;
wire    [7:0] uart_rxtx_w;
wire          uart_txfull_status;
wire          uart_txfull_we;
reg           uart_txfull_re = 1'd0;
wire          uart_rxempty_status;
wire          uart_rxempty_we;
reg           uart_rxempty_re = 1'd0;
wire          uart_irq;
wire          uart_tx_status;
reg           uart_tx_pending = 1'd0;
wire          uart_tx_trigger;
reg           uart_tx_clear = 1'd0;
reg           uart_tx_trigger_d = 1'd0;
wire          uart_rx_status;
reg           uart_rx_pending = 1'd0;
wire          uart_rx_trigger;
reg           uart_rx_clear = 1'd0;
reg           uart_rx_trigger_d = 1'd0;
wire          uart_tx0;
wire          uart_rx0;
reg     [1:0] uart_status_status = 2'd0;
wire          uart_status_we;
reg           uart_status_re = 1'd0;
wire          uart_tx1;
wire          uart_rx1;
reg     [1:0] uart_pending_status = 2'd0;
wire          uart_pending_we;
reg           uart_pending_re = 1'd0;
reg     [1:0] uart_pending_r = 2'd0;
wire          uart_tx2;
wire          uart_rx2;
reg     [1:0] uart_enable_storage = 2'd0;
reg           uart_enable_re = 1'd0;
wire          uart_txempty_status;
wire          uart_txempty_we;
reg           uart_txempty_re = 1'd0;
wire          uart_rxfull_status;
wire          uart_rxfull_we;
reg           uart_rxfull_re = 1'd0;
reg           uart_uart_sink_valid = 1'd0;
reg           uart_uart_sink_ready = 1'd0;
reg           uart_uart_sink_first = 1'd0;
reg           uart_uart_sink_last = 1'd0;
reg     [7:0] uart_uart_sink_payload_data = 8'd0;
wire          uart_uart_source_valid;
reg           uart_uart_source_ready = 1'd0;
wire          uart_uart_source_first;
wire          uart_uart_source_last;
wire    [7:0] uart_uart_source_payload_data;
wire          uart_tx_fifo_sink_valid;
wire          uart_tx_fifo_sink_ready;
reg           uart_tx_fifo_sink_first = 1'd0;
reg           uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] uart_tx_fifo_sink_payload_data;
wire          uart_tx_fifo_source_valid;
wire          uart_tx_fifo_source_ready;
wire          uart_tx_fifo_source_first;
wire          uart_tx_fifo_source_last;
wire    [7:0] uart_tx_fifo_source_payload_data;
wire          uart_rx_fifo_sink_valid;
wire          uart_rx_fifo_sink_ready;
wire          uart_rx_fifo_sink_first;
wire          uart_rx_fifo_sink_last;
wire    [7:0] uart_rx_fifo_sink_payload_data;
wire          uart_rx_fifo_source_valid;
wire          uart_rx_fifo_source_ready;
wire          uart_rx_fifo_source_first;
wire          uart_rx_fifo_source_last;
wire    [7:0] uart_rx_fifo_source_payload_data;
reg    [31:0] timer_load_storage = 32'd0;
reg           timer_load_re = 1'd0;
reg    [31:0] timer_reload_storage = 32'd0;
reg           timer_reload_re = 1'd0;
reg           timer_en_storage = 1'd0;
reg           timer_en_re = 1'd0;
reg           timer_update_value_storage = 1'd0;
reg           timer_update_value_re = 1'd0;
reg    [31:0] timer_value_status = 32'd0;
wire          timer_value_we;
reg           timer_value_re = 1'd0;
wire          timer_irq;
wire          timer_zero_status;
reg           timer_zero_pending = 1'd0;
wire          timer_zero_trigger;
reg           timer_zero_clear = 1'd0;
reg           timer_zero_trigger_d = 1'd0;
wire          timer_zero0;
wire          timer_status_status;
wire          timer_status_we;
reg           timer_status_re = 1'd0;
wire          timer_zero1;
wire          timer_pending_status;
wire          timer_pending_we;
reg           timer_pending_re = 1'd0;
reg           timer_pending_r = 1'd0;
wire          timer_zero2;
reg           timer_enable_storage = 1'd0;
reg           timer_enable_re = 1'd0;
reg    [31:0] timer_value = 32'd0;
wire   [29:0] wb_bus_adr;
wire   [31:0] wb_bus_dat_w;
wire   [31:0] wb_bus_dat_r;
wire    [3:0] wb_bus_sel;
wire          wb_bus_cyc;
wire          wb_bus_stb;
wire          wb_bus_ack;
wire          wb_bus_we;
wire    [2:0] wb_bus_cti;
wire    [1:0] wb_bus_bte;
wire          wb_bus_err;
wire          ddrphy_pause0;
wire          ddrphy_stop0;
wire          ddrphy_delay0;
wire          ddrphy_reset0;
wire          ddrphy_new_lock;
reg           ddrphy_update = 1'd0;
reg           ddrphy_stop1 = 1'd0;
reg           ddrphy_freeze = 1'd0;
reg           ddrphy_pause1 = 1'd0;
reg           ddrphy_reset1 = 1'd0;
wire          ddrphy_lock0;
wire          ddrphy_delay1;
wire          ddrphy_lock1;
reg           ddrphy_lock_d = 1'd0;
reg     [6:0] ddrphy_counter = 7'd0;
reg     [1:0] ddrphy_dly_sel_storage = 2'd0;
reg           ddrphy_dly_sel_re = 1'd0;
reg           ddrphy_rdly_dq_rst_re = 1'd0;
wire          ddrphy_rdly_dq_rst_r;
reg           ddrphy_rdly_dq_rst_we = 1'd0;
reg           ddrphy_rdly_dq_rst_w = 1'd0;
reg           ddrphy_rdly_dq_inc_re = 1'd0;
wire          ddrphy_rdly_dq_inc_r;
reg           ddrphy_rdly_dq_inc_we = 1'd0;
reg           ddrphy_rdly_dq_inc_w = 1'd0;
reg           ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
wire          ddrphy_rdly_dq_bitslip_rst_r;
reg           ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg           ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg           ddrphy_rdly_dq_bitslip_re = 1'd0;
wire          ddrphy_rdly_dq_bitslip_r;
reg           ddrphy_rdly_dq_bitslip_we = 1'd0;
reg           ddrphy_rdly_dq_bitslip_w = 1'd0;
reg           ddrphy_burstdet_clr_re = 1'd0;
wire          ddrphy_burstdet_clr_r;
reg           ddrphy_burstdet_clr_we = 1'd0;
reg           ddrphy_burstdet_clr_w = 1'd0;
reg     [1:0] ddrphy_burstdet_seen_status = 2'd0;
wire          ddrphy_burstdet_seen_we;
reg           ddrphy_burstdet_seen_re = 1'd0;
wire    [1:0] ddrphy_datavalid;
wire   [15:0] ddrphy_dfi_p0_address;
wire    [2:0] ddrphy_dfi_p0_bank;
wire          ddrphy_dfi_p0_cas_n;
wire          ddrphy_dfi_p0_cs_n;
wire          ddrphy_dfi_p0_ras_n;
wire          ddrphy_dfi_p0_we_n;
wire          ddrphy_dfi_p0_cke;
wire          ddrphy_dfi_p0_odt;
wire          ddrphy_dfi_p0_reset_n;
wire          ddrphy_dfi_p0_act_n;
wire   [63:0] ddrphy_dfi_p0_wrdata;
wire          ddrphy_dfi_p0_wrdata_en;
wire    [7:0] ddrphy_dfi_p0_wrdata_mask;
wire          ddrphy_dfi_p0_rddata_en;
reg    [63:0] ddrphy_dfi_p0_rddata = 64'd0;
wire          ddrphy_dfi_p0_rddata_valid;
wire   [15:0] ddrphy_dfi_p1_address;
wire    [2:0] ddrphy_dfi_p1_bank;
wire          ddrphy_dfi_p1_cas_n;
wire          ddrphy_dfi_p1_cs_n;
wire          ddrphy_dfi_p1_ras_n;
wire          ddrphy_dfi_p1_we_n;
wire          ddrphy_dfi_p1_cke;
wire          ddrphy_dfi_p1_odt;
wire          ddrphy_dfi_p1_reset_n;
wire          ddrphy_dfi_p1_act_n;
wire   [63:0] ddrphy_dfi_p1_wrdata;
wire          ddrphy_dfi_p1_wrdata_en;
wire    [7:0] ddrphy_dfi_p1_wrdata_mask;
wire          ddrphy_dfi_p1_rddata_en;
reg    [63:0] ddrphy_dfi_p1_rddata = 64'd0;
wire          ddrphy_dfi_p1_rddata_valid;
wire          ddrphy_bl8_chunk;
wire          ddrphy_pad_oddrx2f0;
wire          ddrphy_pad_oddrx2f1;
wire          ddrphy_pad_oddrx2f2;
wire          ddrphy_pad_oddrx2f3;
wire          ddrphy_pad_oddrx2f4;
wire          ddrphy_pad_oddrx2f5;
wire          ddrphy_pad_oddrx2f6;
wire          ddrphy_pad_oddrx2f7;
wire          ddrphy_pad_oddrx2f8;
wire          ddrphy_pad_oddrx2f9;
wire          ddrphy_pad_oddrx2f10;
wire          ddrphy_pad_oddrx2f11;
wire          ddrphy_pad_oddrx2f12;
wire          ddrphy_pad_oddrx2f13;
wire          ddrphy_pad_oddrx2f14;
wire          ddrphy_pad_oddrx2f15;
wire          ddrphy_pad_oddrx2f16;
wire          ddrphy_pad_oddrx2f17;
wire          ddrphy_pad_oddrx2f18;
wire          ddrphy_pad_oddrx2f19;
wire          ddrphy_pad_oddrx2f20;
wire          ddrphy_pad_oddrx2f21;
wire          ddrphy_pad_oddrx2f22;
wire          ddrphy_pad_oddrx2f23;
wire          ddrphy_pad_oddrx2f24;
wire          ddrphy_pad_oddrx2f25;
wire          ddrphy_pad_oddrx2f26;
wire          ddrphy_dq_oe;
wire          ddrphy_dqs_re;
wire          ddrphy_dqs_oe;
wire          ddrphy_dqs_postamble;
wire          ddrphy_dqs_preamble;
wire          ddrphy_dqs_i0;
wire          ddrphy_dqsr900;
wire          ddrphy_dqsw2700;
wire          ddrphy_dqsw0;
wire    [2:0] ddrphy_rdpntr0;
wire    [2:0] ddrphy_wrpntr0;
reg     [2:0] ddrphy_rdly0 = 3'd0;
wire          ddrphy_burstdet0;
reg           ddrphy_burstdet_d0 = 1'd0;
wire          ddrphy_dqs0;
wire          ddrphy_dqs_oe_n0;
reg     [7:0] ddrphy_dm_o_data0 = 8'd0;
reg     [7:0] ddrphy_dm_o_data_d0 = 8'd0;
reg     [3:0] ddrphy_dm_o_data_muxed0 = 4'd0;
wire          ddrphy_dq_o0;
wire          ddrphy_dq_i0;
wire          ddrphy_dq_oe_n0;
wire          ddrphy_dq_i_delayed0;
wire    [7:0] ddrphy_dq_i_data0;
reg     [7:0] ddrphy_dq_o_data0 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d0 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed0 = 4'd0;
wire    [3:0] ddrphy_bitslip0_i;
reg     [3:0] ddrphy_bitslip0_o = 4'd0;
reg     [1:0] ddrphy_bitslip0_value = 2'd0;
reg     [7:0] ddrphy_bitslip0_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d0 = 4'd0;
wire          ddrphy_dq_o1;
wire          ddrphy_dq_i1;
wire          ddrphy_dq_oe_n1;
wire          ddrphy_dq_i_delayed1;
wire    [7:0] ddrphy_dq_i_data1;
reg     [7:0] ddrphy_dq_o_data1 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d1 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed1 = 4'd0;
wire    [3:0] ddrphy_bitslip1_i;
reg     [3:0] ddrphy_bitslip1_o = 4'd0;
reg     [1:0] ddrphy_bitslip1_value = 2'd0;
reg     [7:0] ddrphy_bitslip1_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d1 = 4'd0;
wire          ddrphy_dq_o2;
wire          ddrphy_dq_i2;
wire          ddrphy_dq_oe_n2;
wire          ddrphy_dq_i_delayed2;
wire    [7:0] ddrphy_dq_i_data2;
reg     [7:0] ddrphy_dq_o_data2 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d2 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed2 = 4'd0;
wire    [3:0] ddrphy_bitslip2_i;
reg     [3:0] ddrphy_bitslip2_o = 4'd0;
reg     [1:0] ddrphy_bitslip2_value = 2'd0;
reg     [7:0] ddrphy_bitslip2_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d2 = 4'd0;
wire          ddrphy_dq_o3;
wire          ddrphy_dq_i3;
wire          ddrphy_dq_oe_n3;
wire          ddrphy_dq_i_delayed3;
wire    [7:0] ddrphy_dq_i_data3;
reg     [7:0] ddrphy_dq_o_data3 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d3 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed3 = 4'd0;
wire    [3:0] ddrphy_bitslip3_i;
reg     [3:0] ddrphy_bitslip3_o = 4'd0;
reg     [1:0] ddrphy_bitslip3_value = 2'd0;
reg     [7:0] ddrphy_bitslip3_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d3 = 4'd0;
wire          ddrphy_dq_o4;
wire          ddrphy_dq_i4;
wire          ddrphy_dq_oe_n4;
wire          ddrphy_dq_i_delayed4;
wire    [7:0] ddrphy_dq_i_data4;
reg     [7:0] ddrphy_dq_o_data4 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d4 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed4 = 4'd0;
wire    [3:0] ddrphy_bitslip4_i;
reg     [3:0] ddrphy_bitslip4_o = 4'd0;
reg     [1:0] ddrphy_bitslip4_value = 2'd0;
reg     [7:0] ddrphy_bitslip4_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d4 = 4'd0;
wire          ddrphy_dq_o5;
wire          ddrphy_dq_i5;
wire          ddrphy_dq_oe_n5;
wire          ddrphy_dq_i_delayed5;
wire    [7:0] ddrphy_dq_i_data5;
reg     [7:0] ddrphy_dq_o_data5 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d5 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed5 = 4'd0;
wire    [3:0] ddrphy_bitslip5_i;
reg     [3:0] ddrphy_bitslip5_o = 4'd0;
reg     [1:0] ddrphy_bitslip5_value = 2'd0;
reg     [7:0] ddrphy_bitslip5_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d5 = 4'd0;
wire          ddrphy_dq_o6;
wire          ddrphy_dq_i6;
wire          ddrphy_dq_oe_n6;
wire          ddrphy_dq_i_delayed6;
wire    [7:0] ddrphy_dq_i_data6;
reg     [7:0] ddrphy_dq_o_data6 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d6 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed6 = 4'd0;
wire    [3:0] ddrphy_bitslip6_i;
reg     [3:0] ddrphy_bitslip6_o = 4'd0;
reg     [1:0] ddrphy_bitslip6_value = 2'd0;
reg     [7:0] ddrphy_bitslip6_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d6 = 4'd0;
wire          ddrphy_dq_o7;
wire          ddrphy_dq_i7;
wire          ddrphy_dq_oe_n7;
wire          ddrphy_dq_i_delayed7;
wire    [7:0] ddrphy_dq_i_data7;
reg     [7:0] ddrphy_dq_o_data7 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d7 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed7 = 4'd0;
wire    [3:0] ddrphy_bitslip7_i;
reg     [3:0] ddrphy_bitslip7_o = 4'd0;
reg     [1:0] ddrphy_bitslip7_value = 2'd0;
reg     [7:0] ddrphy_bitslip7_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d7 = 4'd0;
wire          ddrphy_dqs_i1;
wire          ddrphy_dqsr901;
wire          ddrphy_dqsw2701;
wire          ddrphy_dqsw1;
wire    [2:0] ddrphy_rdpntr1;
wire    [2:0] ddrphy_wrpntr1;
reg     [2:0] ddrphy_rdly1 = 3'd0;
wire          ddrphy_burstdet1;
reg           ddrphy_burstdet_d1 = 1'd0;
wire          ddrphy_dqs1;
wire          ddrphy_dqs_oe_n1;
reg     [7:0] ddrphy_dm_o_data1 = 8'd0;
reg     [7:0] ddrphy_dm_o_data_d1 = 8'd0;
reg     [3:0] ddrphy_dm_o_data_muxed1 = 4'd0;
wire          ddrphy_dq_o8;
wire          ddrphy_dq_i8;
wire          ddrphy_dq_oe_n8;
wire          ddrphy_dq_i_delayed8;
wire    [7:0] ddrphy_dq_i_data8;
reg     [7:0] ddrphy_dq_o_data8 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d8 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed8 = 4'd0;
wire    [3:0] ddrphy_bitslip8_i;
reg     [3:0] ddrphy_bitslip8_o = 4'd0;
reg     [1:0] ddrphy_bitslip8_value = 2'd0;
reg     [7:0] ddrphy_bitslip8_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d8 = 4'd0;
wire          ddrphy_dq_o9;
wire          ddrphy_dq_i9;
wire          ddrphy_dq_oe_n9;
wire          ddrphy_dq_i_delayed9;
wire    [7:0] ddrphy_dq_i_data9;
reg     [7:0] ddrphy_dq_o_data9 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d9 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed9 = 4'd0;
wire    [3:0] ddrphy_bitslip9_i;
reg     [3:0] ddrphy_bitslip9_o = 4'd0;
reg     [1:0] ddrphy_bitslip9_value = 2'd0;
reg     [7:0] ddrphy_bitslip9_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d9 = 4'd0;
wire          ddrphy_dq_o10;
wire          ddrphy_dq_i10;
wire          ddrphy_dq_oe_n10;
wire          ddrphy_dq_i_delayed10;
wire    [7:0] ddrphy_dq_i_data10;
reg     [7:0] ddrphy_dq_o_data10 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d10 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed10 = 4'd0;
wire    [3:0] ddrphy_bitslip10_i;
reg     [3:0] ddrphy_bitslip10_o = 4'd0;
reg     [1:0] ddrphy_bitslip10_value = 2'd0;
reg     [7:0] ddrphy_bitslip10_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d10 = 4'd0;
wire          ddrphy_dq_o11;
wire          ddrphy_dq_i11;
wire          ddrphy_dq_oe_n11;
wire          ddrphy_dq_i_delayed11;
wire    [7:0] ddrphy_dq_i_data11;
reg     [7:0] ddrphy_dq_o_data11 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d11 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed11 = 4'd0;
wire    [3:0] ddrphy_bitslip11_i;
reg     [3:0] ddrphy_bitslip11_o = 4'd0;
reg     [1:0] ddrphy_bitslip11_value = 2'd0;
reg     [7:0] ddrphy_bitslip11_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d11 = 4'd0;
wire          ddrphy_dq_o12;
wire          ddrphy_dq_i12;
wire          ddrphy_dq_oe_n12;
wire          ddrphy_dq_i_delayed12;
wire    [7:0] ddrphy_dq_i_data12;
reg     [7:0] ddrphy_dq_o_data12 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d12 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed12 = 4'd0;
wire    [3:0] ddrphy_bitslip12_i;
reg     [3:0] ddrphy_bitslip12_o = 4'd0;
reg     [1:0] ddrphy_bitslip12_value = 2'd0;
reg     [7:0] ddrphy_bitslip12_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d12 = 4'd0;
wire          ddrphy_dq_o13;
wire          ddrphy_dq_i13;
wire          ddrphy_dq_oe_n13;
wire          ddrphy_dq_i_delayed13;
wire    [7:0] ddrphy_dq_i_data13;
reg     [7:0] ddrphy_dq_o_data13 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d13 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed13 = 4'd0;
wire    [3:0] ddrphy_bitslip13_i;
reg     [3:0] ddrphy_bitslip13_o = 4'd0;
reg     [1:0] ddrphy_bitslip13_value = 2'd0;
reg     [7:0] ddrphy_bitslip13_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d13 = 4'd0;
wire          ddrphy_dq_o14;
wire          ddrphy_dq_i14;
wire          ddrphy_dq_oe_n14;
wire          ddrphy_dq_i_delayed14;
wire    [7:0] ddrphy_dq_i_data14;
reg     [7:0] ddrphy_dq_o_data14 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d14 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed14 = 4'd0;
wire    [3:0] ddrphy_bitslip14_i;
reg     [3:0] ddrphy_bitslip14_o = 4'd0;
reg     [1:0] ddrphy_bitslip14_value = 2'd0;
reg     [7:0] ddrphy_bitslip14_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d14 = 4'd0;
wire          ddrphy_dq_o15;
wire          ddrphy_dq_i15;
wire          ddrphy_dq_oe_n15;
wire          ddrphy_dq_i_delayed15;
wire    [7:0] ddrphy_dq_i_data15;
reg     [7:0] ddrphy_dq_o_data15 = 8'd0;
reg     [7:0] ddrphy_dq_o_data_d15 = 8'd0;
reg     [3:0] ddrphy_dq_o_data_muxed15 = 4'd0;
wire    [3:0] ddrphy_bitslip15_i;
reg     [3:0] ddrphy_bitslip15_o = 4'd0;
reg     [1:0] ddrphy_bitslip15_value = 2'd0;
reg     [7:0] ddrphy_bitslip15_r = 8'd0;
reg     [3:0] ddrphy_dq_i_bitslip_o_d15 = 4'd0;
reg           ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline8 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline9 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline10 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline11 = 1'd0;
reg           ddrphy_rddata_en_tappeddelayline12 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline3 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline4 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline5 = 1'd0;
reg           ddrphy_wrdata_en_tappeddelayline6 = 1'd0;
wire   [12:0] sdram_slave_p0_address;
wire    [2:0] sdram_slave_p0_bank;
wire          sdram_slave_p0_cas_n;
wire          sdram_slave_p0_cs_n;
wire          sdram_slave_p0_ras_n;
wire          sdram_slave_p0_we_n;
wire          sdram_slave_p0_cke;
wire          sdram_slave_p0_odt;
wire          sdram_slave_p0_reset_n;
wire          sdram_slave_p0_act_n;
wire   [63:0] sdram_slave_p0_wrdata;
wire          sdram_slave_p0_wrdata_en;
wire    [7:0] sdram_slave_p0_wrdata_mask;
wire          sdram_slave_p0_rddata_en;
reg    [63:0] sdram_slave_p0_rddata = 64'd0;
reg           sdram_slave_p0_rddata_valid = 1'd0;
wire   [12:0] sdram_slave_p1_address;
wire    [2:0] sdram_slave_p1_bank;
wire          sdram_slave_p1_cas_n;
wire          sdram_slave_p1_cs_n;
wire          sdram_slave_p1_ras_n;
wire          sdram_slave_p1_we_n;
wire          sdram_slave_p1_cke;
wire          sdram_slave_p1_odt;
wire          sdram_slave_p1_reset_n;
wire          sdram_slave_p1_act_n;
wire   [63:0] sdram_slave_p1_wrdata;
wire          sdram_slave_p1_wrdata_en;
wire    [7:0] sdram_slave_p1_wrdata_mask;
wire          sdram_slave_p1_rddata_en;
reg    [63:0] sdram_slave_p1_rddata = 64'd0;
reg           sdram_slave_p1_rddata_valid = 1'd0;
reg    [12:0] sdram_master_p0_address = 13'd0;
reg     [2:0] sdram_master_p0_bank = 3'd0;
reg           sdram_master_p0_cas_n = 1'd1;
reg           sdram_master_p0_cs_n = 1'd1;
reg           sdram_master_p0_ras_n = 1'd1;
reg           sdram_master_p0_we_n = 1'd1;
reg           sdram_master_p0_cke = 1'd0;
reg           sdram_master_p0_odt = 1'd0;
reg           sdram_master_p0_reset_n = 1'd0;
reg           sdram_master_p0_act_n = 1'd1;
reg    [63:0] sdram_master_p0_wrdata = 64'd0;
reg           sdram_master_p0_wrdata_en = 1'd0;
reg     [7:0] sdram_master_p0_wrdata_mask = 8'd0;
reg           sdram_master_p0_rddata_en = 1'd0;
wire   [63:0] sdram_master_p0_rddata;
wire          sdram_master_p0_rddata_valid;
reg    [12:0] sdram_master_p1_address = 13'd0;
reg     [2:0] sdram_master_p1_bank = 3'd0;
reg           sdram_master_p1_cas_n = 1'd1;
reg           sdram_master_p1_cs_n = 1'd1;
reg           sdram_master_p1_ras_n = 1'd1;
reg           sdram_master_p1_we_n = 1'd1;
reg           sdram_master_p1_cke = 1'd0;
reg           sdram_master_p1_odt = 1'd0;
reg           sdram_master_p1_reset_n = 1'd0;
reg           sdram_master_p1_act_n = 1'd1;
reg    [63:0] sdram_master_p1_wrdata = 64'd0;
reg           sdram_master_p1_wrdata_en = 1'd0;
reg     [7:0] sdram_master_p1_wrdata_mask = 8'd0;
reg           sdram_master_p1_rddata_en = 1'd0;
wire   [63:0] sdram_master_p1_rddata;
wire          sdram_master_p1_rddata_valid;
wire   [12:0] sdram_csr_dfi_p0_address;
wire    [2:0] sdram_csr_dfi_p0_bank;
reg           sdram_csr_dfi_p0_cas_n = 1'd1;
reg           sdram_csr_dfi_p0_cs_n = 1'd1;
reg           sdram_csr_dfi_p0_ras_n = 1'd1;
reg           sdram_csr_dfi_p0_we_n = 1'd1;
wire          sdram_csr_dfi_p0_cke;
wire          sdram_csr_dfi_p0_odt;
wire          sdram_csr_dfi_p0_reset_n;
reg           sdram_csr_dfi_p0_act_n = 1'd1;
wire   [63:0] sdram_csr_dfi_p0_wrdata;
wire          sdram_csr_dfi_p0_wrdata_en;
wire    [7:0] sdram_csr_dfi_p0_wrdata_mask;
wire          sdram_csr_dfi_p0_rddata_en;
reg    [63:0] sdram_csr_dfi_p0_rddata = 64'd0;
reg           sdram_csr_dfi_p0_rddata_valid = 1'd0;
wire   [12:0] sdram_csr_dfi_p1_address;
wire    [2:0] sdram_csr_dfi_p1_bank;
reg           sdram_csr_dfi_p1_cas_n = 1'd1;
reg           sdram_csr_dfi_p1_cs_n = 1'd1;
reg           sdram_csr_dfi_p1_ras_n = 1'd1;
reg           sdram_csr_dfi_p1_we_n = 1'd1;
wire          sdram_csr_dfi_p1_cke;
wire          sdram_csr_dfi_p1_odt;
wire          sdram_csr_dfi_p1_reset_n;
reg           sdram_csr_dfi_p1_act_n = 1'd1;
wire   [63:0] sdram_csr_dfi_p1_wrdata;
wire          sdram_csr_dfi_p1_wrdata_en;
wire    [7:0] sdram_csr_dfi_p1_wrdata_mask;
wire          sdram_csr_dfi_p1_rddata_en;
reg    [63:0] sdram_csr_dfi_p1_rddata = 64'd0;
reg           sdram_csr_dfi_p1_rddata_valid = 1'd0;
reg    [12:0] sdram_ext_dfi_p0_address = 13'd0;
reg     [2:0] sdram_ext_dfi_p0_bank = 3'd0;
reg           sdram_ext_dfi_p0_cas_n = 1'd1;
reg           sdram_ext_dfi_p0_cs_n = 1'd1;
reg           sdram_ext_dfi_p0_ras_n = 1'd1;
reg           sdram_ext_dfi_p0_we_n = 1'd1;
reg           sdram_ext_dfi_p0_cke = 1'd0;
reg           sdram_ext_dfi_p0_odt = 1'd0;
reg           sdram_ext_dfi_p0_reset_n = 1'd0;
reg           sdram_ext_dfi_p0_act_n = 1'd1;
reg    [63:0] sdram_ext_dfi_p0_wrdata = 64'd0;
reg           sdram_ext_dfi_p0_wrdata_en = 1'd0;
reg     [7:0] sdram_ext_dfi_p0_wrdata_mask = 8'd0;
reg           sdram_ext_dfi_p0_rddata_en = 1'd0;
reg    [63:0] sdram_ext_dfi_p0_rddata = 64'd0;
reg           sdram_ext_dfi_p0_rddata_valid = 1'd0;
reg    [12:0] sdram_ext_dfi_p1_address = 13'd0;
reg     [2:0] sdram_ext_dfi_p1_bank = 3'd0;
reg           sdram_ext_dfi_p1_cas_n = 1'd1;
reg           sdram_ext_dfi_p1_cs_n = 1'd1;
reg           sdram_ext_dfi_p1_ras_n = 1'd1;
reg           sdram_ext_dfi_p1_we_n = 1'd1;
reg           sdram_ext_dfi_p1_cke = 1'd0;
reg           sdram_ext_dfi_p1_odt = 1'd0;
reg           sdram_ext_dfi_p1_reset_n = 1'd0;
reg           sdram_ext_dfi_p1_act_n = 1'd1;
reg    [63:0] sdram_ext_dfi_p1_wrdata = 64'd0;
reg           sdram_ext_dfi_p1_wrdata_en = 1'd0;
reg     [7:0] sdram_ext_dfi_p1_wrdata_mask = 8'd0;
reg           sdram_ext_dfi_p1_rddata_en = 1'd0;
reg    [63:0] sdram_ext_dfi_p1_rddata = 64'd0;
reg           sdram_ext_dfi_p1_rddata_valid = 1'd0;
reg           sdram_ext_dfi_sel = 1'd0;
wire          sdram_sel;
wire          sdram_cke;
wire          sdram_odt;
wire          sdram_reset_n;
reg     [3:0] sdram_storage = 4'd1;
reg           sdram_re = 1'd0;
wire          sdram_phaseinjector0_csrfield_cs;
wire          sdram_phaseinjector0_csrfield_we;
wire          sdram_phaseinjector0_csrfield_cas;
wire          sdram_phaseinjector0_csrfield_ras;
wire          sdram_phaseinjector0_csrfield_wren;
wire          sdram_phaseinjector0_csrfield_rden;
reg     [5:0] sdram_phaseinjector0_command_storage = 6'd0;
reg           sdram_phaseinjector0_command_re = 1'd0;
reg           sdram_phaseinjector0_command_issue_re = 1'd0;
wire          sdram_phaseinjector0_command_issue_r;
reg           sdram_phaseinjector0_command_issue_we = 1'd0;
reg           sdram_phaseinjector0_command_issue_w = 1'd0;
reg    [12:0] sdram_phaseinjector0_address_storage = 13'd0;
reg           sdram_phaseinjector0_address_re = 1'd0;
reg     [2:0] sdram_phaseinjector0_baddress_storage = 3'd0;
reg           sdram_phaseinjector0_baddress_re = 1'd0;
reg    [63:0] sdram_phaseinjector0_wrdata_storage = 64'd0;
reg           sdram_phaseinjector0_wrdata_re = 1'd0;
reg    [63:0] sdram_phaseinjector0_rddata_status = 64'd0;
wire          sdram_phaseinjector0_rddata_we;
reg           sdram_phaseinjector0_rddata_re = 1'd0;
wire          sdram_phaseinjector1_csrfield_cs;
wire          sdram_phaseinjector1_csrfield_we;
wire          sdram_phaseinjector1_csrfield_cas;
wire          sdram_phaseinjector1_csrfield_ras;
wire          sdram_phaseinjector1_csrfield_wren;
wire          sdram_phaseinjector1_csrfield_rden;
reg     [5:0] sdram_phaseinjector1_command_storage = 6'd0;
reg           sdram_phaseinjector1_command_re = 1'd0;
reg           sdram_phaseinjector1_command_issue_re = 1'd0;
wire          sdram_phaseinjector1_command_issue_r;
reg           sdram_phaseinjector1_command_issue_we = 1'd0;
reg           sdram_phaseinjector1_command_issue_w = 1'd0;
reg    [12:0] sdram_phaseinjector1_address_storage = 13'd0;
reg           sdram_phaseinjector1_address_re = 1'd0;
reg     [2:0] sdram_phaseinjector1_baddress_storage = 3'd0;
reg           sdram_phaseinjector1_baddress_re = 1'd0;
reg    [63:0] sdram_phaseinjector1_wrdata_storage = 64'd0;
reg           sdram_phaseinjector1_wrdata_re = 1'd0;
reg    [63:0] sdram_phaseinjector1_rddata_status = 64'd0;
wire          sdram_phaseinjector1_rddata_we;
reg           sdram_phaseinjector1_rddata_re = 1'd0;
wire          sdram_interface_bank0_valid;
wire          sdram_interface_bank0_ready;
wire          sdram_interface_bank0_we;
wire   [19:0] sdram_interface_bank0_addr;
wire          sdram_interface_bank0_lock;
wire          sdram_interface_bank0_wdata_ready;
wire          sdram_interface_bank0_rdata_valid;
wire          sdram_interface_bank1_valid;
wire          sdram_interface_bank1_ready;
wire          sdram_interface_bank1_we;
wire   [19:0] sdram_interface_bank1_addr;
wire          sdram_interface_bank1_lock;
wire          sdram_interface_bank1_wdata_ready;
wire          sdram_interface_bank1_rdata_valid;
wire          sdram_interface_bank2_valid;
wire          sdram_interface_bank2_ready;
wire          sdram_interface_bank2_we;
wire   [19:0] sdram_interface_bank2_addr;
wire          sdram_interface_bank2_lock;
wire          sdram_interface_bank2_wdata_ready;
wire          sdram_interface_bank2_rdata_valid;
wire          sdram_interface_bank3_valid;
wire          sdram_interface_bank3_ready;
wire          sdram_interface_bank3_we;
wire   [19:0] sdram_interface_bank3_addr;
wire          sdram_interface_bank3_lock;
wire          sdram_interface_bank3_wdata_ready;
wire          sdram_interface_bank3_rdata_valid;
wire          sdram_interface_bank4_valid;
wire          sdram_interface_bank4_ready;
wire          sdram_interface_bank4_we;
wire   [19:0] sdram_interface_bank4_addr;
wire          sdram_interface_bank4_lock;
wire          sdram_interface_bank4_wdata_ready;
wire          sdram_interface_bank4_rdata_valid;
wire          sdram_interface_bank5_valid;
wire          sdram_interface_bank5_ready;
wire          sdram_interface_bank5_we;
wire   [19:0] sdram_interface_bank5_addr;
wire          sdram_interface_bank5_lock;
wire          sdram_interface_bank5_wdata_ready;
wire          sdram_interface_bank5_rdata_valid;
wire          sdram_interface_bank6_valid;
wire          sdram_interface_bank6_ready;
wire          sdram_interface_bank6_we;
wire   [19:0] sdram_interface_bank6_addr;
wire          sdram_interface_bank6_lock;
wire          sdram_interface_bank6_wdata_ready;
wire          sdram_interface_bank6_rdata_valid;
wire          sdram_interface_bank7_valid;
wire          sdram_interface_bank7_ready;
wire          sdram_interface_bank7_we;
wire   [19:0] sdram_interface_bank7_addr;
wire          sdram_interface_bank7_lock;
wire          sdram_interface_bank7_wdata_ready;
wire          sdram_interface_bank7_rdata_valid;
reg   [127:0] sdram_interface_wdata = 128'd0;
reg    [15:0] sdram_interface_wdata_we = 16'd0;
wire  [127:0] sdram_interface_rdata;
reg    [12:0] sdram_dfi_p0_address = 13'd0;
reg     [2:0] sdram_dfi_p0_bank = 3'd0;
reg           sdram_dfi_p0_cas_n = 1'd1;
reg           sdram_dfi_p0_cs_n = 1'd1;
reg           sdram_dfi_p0_ras_n = 1'd1;
reg           sdram_dfi_p0_we_n = 1'd1;
wire          sdram_dfi_p0_cke;
wire          sdram_dfi_p0_odt;
wire          sdram_dfi_p0_reset_n;
reg           sdram_dfi_p0_act_n = 1'd1;
wire   [63:0] sdram_dfi_p0_wrdata;
reg           sdram_dfi_p0_wrdata_en = 1'd0;
wire    [7:0] sdram_dfi_p0_wrdata_mask;
reg           sdram_dfi_p0_rddata_en = 1'd0;
wire   [63:0] sdram_dfi_p0_rddata;
wire          sdram_dfi_p0_rddata_valid;
reg    [12:0] sdram_dfi_p1_address = 13'd0;
reg     [2:0] sdram_dfi_p1_bank = 3'd0;
reg           sdram_dfi_p1_cas_n = 1'd1;
reg           sdram_dfi_p1_cs_n = 1'd1;
reg           sdram_dfi_p1_ras_n = 1'd1;
reg           sdram_dfi_p1_we_n = 1'd1;
wire          sdram_dfi_p1_cke;
wire          sdram_dfi_p1_odt;
wire          sdram_dfi_p1_reset_n;
reg           sdram_dfi_p1_act_n = 1'd1;
wire   [63:0] sdram_dfi_p1_wrdata;
reg           sdram_dfi_p1_wrdata_en = 1'd0;
wire    [7:0] sdram_dfi_p1_wrdata_mask;
reg           sdram_dfi_p1_rddata_en = 1'd0;
wire   [63:0] sdram_dfi_p1_rddata;
wire          sdram_dfi_p1_rddata_valid;
reg           sdram_cmd_valid = 1'd0;
reg           sdram_cmd_ready = 1'd0;
reg           sdram_cmd_last = 1'd0;
reg    [12:0] sdram_cmd_payload_a = 13'd0;
reg     [2:0] sdram_cmd_payload_ba = 3'd0;
reg           sdram_cmd_payload_cas = 1'd0;
reg           sdram_cmd_payload_ras = 1'd0;
reg           sdram_cmd_payload_we = 1'd0;
reg           sdram_cmd_payload_is_read = 1'd0;
reg           sdram_cmd_payload_is_write = 1'd0;
wire          sdram_wants_refresh;
wire          sdram_wants_zqcs;
wire          sdram_timer_wait;
wire          sdram_timer_done0;
wire    [8:0] sdram_timer_count0;
wire          sdram_timer_done1;
reg     [8:0] sdram_timer_count1 = 9'd374;
wire          sdram_postponer_req_i;
reg           sdram_postponer_req_o = 1'd0;
reg           sdram_postponer_count = 1'd0;
reg           sdram_sequencer_start0 = 1'd0;
wire          sdram_sequencer_done0;
wire          sdram_sequencer_start1;
reg           sdram_sequencer_done1 = 1'd0;
reg     [6:0] sdram_sequencer_counter = 7'd0;
reg           sdram_sequencer_count = 1'd0;
wire          sdram_zqcs_timer_wait;
wire          sdram_zqcs_timer_done0;
wire   [25:0] sdram_zqcs_timer_count0;
wire          sdram_zqcs_timer_done1;
reg    [25:0] sdram_zqcs_timer_count1 = 26'd47999999;
reg           sdram_zqcs_executer_start = 1'd0;
reg           sdram_zqcs_executer_done = 1'd0;
reg     [5:0] sdram_zqcs_executer_counter = 6'd0;
wire          sdram_bankmachine0_req_valid;
wire          sdram_bankmachine0_req_ready;
wire          sdram_bankmachine0_req_we;
wire   [19:0] sdram_bankmachine0_req_addr;
wire          sdram_bankmachine0_req_lock;
reg           sdram_bankmachine0_req_wdata_ready = 1'd0;
reg           sdram_bankmachine0_req_rdata_valid = 1'd0;
wire          sdram_bankmachine0_refresh_req;
reg           sdram_bankmachine0_refresh_gnt = 1'd0;
reg           sdram_bankmachine0_cmd_valid = 1'd0;
reg           sdram_bankmachine0_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine0_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine0_cmd_payload_ba;
reg           sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine0_cmd_payload_we = 1'd0;
reg           sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine0_auto_precharge = 1'd0;
wire          sdram_bankmachine0_sink_valid;
wire          sdram_bankmachine0_sink_ready;
reg           sdram_bankmachine0_sink_first = 1'd0;
reg           sdram_bankmachine0_sink_last = 1'd0;
wire          sdram_bankmachine0_sink_payload_we;
wire   [19:0] sdram_bankmachine0_sink_payload_addr;
wire          sdram_bankmachine0_source_valid;
wire          sdram_bankmachine0_source_ready;
wire          sdram_bankmachine0_source_first;
wire          sdram_bankmachine0_source_last;
wire          sdram_bankmachine0_source_payload_we;
wire   [19:0] sdram_bankmachine0_source_payload_addr;
wire          sdram_bankmachine0_syncfifo0_we;
wire          sdram_bankmachine0_syncfifo0_writable;
wire          sdram_bankmachine0_syncfifo0_re;
wire          sdram_bankmachine0_syncfifo0_readable;
wire   [22:0] sdram_bankmachine0_syncfifo0_din;
wire   [22:0] sdram_bankmachine0_syncfifo0_dout;
reg     [3:0] sdram_bankmachine0_level = 4'd0;
reg           sdram_bankmachine0_replace = 1'd0;
reg     [2:0] sdram_bankmachine0_produce = 3'd0;
reg     [2:0] sdram_bankmachine0_consume = 3'd0;
reg     [2:0] sdram_bankmachine0_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine0_wrport_dat_r;
wire          sdram_bankmachine0_wrport_we;
wire   [22:0] sdram_bankmachine0_wrport_dat_w;
wire          sdram_bankmachine0_do_read;
wire    [2:0] sdram_bankmachine0_rdport_adr;
wire   [22:0] sdram_bankmachine0_rdport_dat_r;
wire          sdram_bankmachine0_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine0_fifo_in_payload_addr;
wire          sdram_bankmachine0_fifo_in_first;
wire          sdram_bankmachine0_fifo_in_last;
wire          sdram_bankmachine0_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine0_fifo_out_payload_addr;
wire          sdram_bankmachine0_fifo_out_first;
wire          sdram_bankmachine0_fifo_out_last;
wire          sdram_bankmachine0_sink_sink_valid;
wire          sdram_bankmachine0_sink_sink_ready;
wire          sdram_bankmachine0_sink_sink_first;
wire          sdram_bankmachine0_sink_sink_last;
wire          sdram_bankmachine0_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine0_sink_sink_payload_addr;
wire          sdram_bankmachine0_source_source_valid;
wire          sdram_bankmachine0_source_source_ready;
wire          sdram_bankmachine0_source_source_first;
wire          sdram_bankmachine0_source_source_last;
wire          sdram_bankmachine0_source_source_payload_we;
wire   [19:0] sdram_bankmachine0_source_source_payload_addr;
wire          sdram_bankmachine0_pipe_valid_sink_valid;
wire          sdram_bankmachine0_pipe_valid_sink_ready;
wire          sdram_bankmachine0_pipe_valid_sink_first;
wire          sdram_bankmachine0_pipe_valid_sink_last;
wire          sdram_bankmachine0_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine0_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine0_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine0_pipe_valid_source_ready;
reg           sdram_bankmachine0_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine0_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine0_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine0_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine0_row = 13'd0;
reg           sdram_bankmachine0_row_opened = 1'd0;
wire          sdram_bankmachine0_row_hit;
reg           sdram_bankmachine0_row_open = 1'd0;
reg           sdram_bankmachine0_row_close = 1'd0;
reg           sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine0_twtpcon_valid;
reg           sdram_bankmachine0_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine0_twtpcon_count = 3'd0;
wire          sdram_bankmachine0_trccon_valid;
reg           sdram_bankmachine0_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine0_trccon_count = 2'd0;
wire          sdram_bankmachine0_trascon_valid;
reg           sdram_bankmachine0_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine0_trascon_count = 2'd0;
wire          sdram_bankmachine1_req_valid;
wire          sdram_bankmachine1_req_ready;
wire          sdram_bankmachine1_req_we;
wire   [19:0] sdram_bankmachine1_req_addr;
wire          sdram_bankmachine1_req_lock;
reg           sdram_bankmachine1_req_wdata_ready = 1'd0;
reg           sdram_bankmachine1_req_rdata_valid = 1'd0;
wire          sdram_bankmachine1_refresh_req;
reg           sdram_bankmachine1_refresh_gnt = 1'd0;
reg           sdram_bankmachine1_cmd_valid = 1'd0;
reg           sdram_bankmachine1_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine1_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine1_cmd_payload_ba;
reg           sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine1_cmd_payload_we = 1'd0;
reg           sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine1_auto_precharge = 1'd0;
wire          sdram_bankmachine1_sink_valid;
wire          sdram_bankmachine1_sink_ready;
reg           sdram_bankmachine1_sink_first = 1'd0;
reg           sdram_bankmachine1_sink_last = 1'd0;
wire          sdram_bankmachine1_sink_payload_we;
wire   [19:0] sdram_bankmachine1_sink_payload_addr;
wire          sdram_bankmachine1_source_valid;
wire          sdram_bankmachine1_source_ready;
wire          sdram_bankmachine1_source_first;
wire          sdram_bankmachine1_source_last;
wire          sdram_bankmachine1_source_payload_we;
wire   [19:0] sdram_bankmachine1_source_payload_addr;
wire          sdram_bankmachine1_syncfifo1_we;
wire          sdram_bankmachine1_syncfifo1_writable;
wire          sdram_bankmachine1_syncfifo1_re;
wire          sdram_bankmachine1_syncfifo1_readable;
wire   [22:0] sdram_bankmachine1_syncfifo1_din;
wire   [22:0] sdram_bankmachine1_syncfifo1_dout;
reg     [3:0] sdram_bankmachine1_level = 4'd0;
reg           sdram_bankmachine1_replace = 1'd0;
reg     [2:0] sdram_bankmachine1_produce = 3'd0;
reg     [2:0] sdram_bankmachine1_consume = 3'd0;
reg     [2:0] sdram_bankmachine1_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine1_wrport_dat_r;
wire          sdram_bankmachine1_wrport_we;
wire   [22:0] sdram_bankmachine1_wrport_dat_w;
wire          sdram_bankmachine1_do_read;
wire    [2:0] sdram_bankmachine1_rdport_adr;
wire   [22:0] sdram_bankmachine1_rdport_dat_r;
wire          sdram_bankmachine1_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine1_fifo_in_payload_addr;
wire          sdram_bankmachine1_fifo_in_first;
wire          sdram_bankmachine1_fifo_in_last;
wire          sdram_bankmachine1_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine1_fifo_out_payload_addr;
wire          sdram_bankmachine1_fifo_out_first;
wire          sdram_bankmachine1_fifo_out_last;
wire          sdram_bankmachine1_sink_sink_valid;
wire          sdram_bankmachine1_sink_sink_ready;
wire          sdram_bankmachine1_sink_sink_first;
wire          sdram_bankmachine1_sink_sink_last;
wire          sdram_bankmachine1_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine1_sink_sink_payload_addr;
wire          sdram_bankmachine1_source_source_valid;
wire          sdram_bankmachine1_source_source_ready;
wire          sdram_bankmachine1_source_source_first;
wire          sdram_bankmachine1_source_source_last;
wire          sdram_bankmachine1_source_source_payload_we;
wire   [19:0] sdram_bankmachine1_source_source_payload_addr;
wire          sdram_bankmachine1_pipe_valid_sink_valid;
wire          sdram_bankmachine1_pipe_valid_sink_ready;
wire          sdram_bankmachine1_pipe_valid_sink_first;
wire          sdram_bankmachine1_pipe_valid_sink_last;
wire          sdram_bankmachine1_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine1_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine1_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine1_pipe_valid_source_ready;
reg           sdram_bankmachine1_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine1_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine1_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine1_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine1_row = 13'd0;
reg           sdram_bankmachine1_row_opened = 1'd0;
wire          sdram_bankmachine1_row_hit;
reg           sdram_bankmachine1_row_open = 1'd0;
reg           sdram_bankmachine1_row_close = 1'd0;
reg           sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine1_twtpcon_valid;
reg           sdram_bankmachine1_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine1_twtpcon_count = 3'd0;
wire          sdram_bankmachine1_trccon_valid;
reg           sdram_bankmachine1_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine1_trccon_count = 2'd0;
wire          sdram_bankmachine1_trascon_valid;
reg           sdram_bankmachine1_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine1_trascon_count = 2'd0;
wire          sdram_bankmachine2_req_valid;
wire          sdram_bankmachine2_req_ready;
wire          sdram_bankmachine2_req_we;
wire   [19:0] sdram_bankmachine2_req_addr;
wire          sdram_bankmachine2_req_lock;
reg           sdram_bankmachine2_req_wdata_ready = 1'd0;
reg           sdram_bankmachine2_req_rdata_valid = 1'd0;
wire          sdram_bankmachine2_refresh_req;
reg           sdram_bankmachine2_refresh_gnt = 1'd0;
reg           sdram_bankmachine2_cmd_valid = 1'd0;
reg           sdram_bankmachine2_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine2_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine2_cmd_payload_ba;
reg           sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine2_cmd_payload_we = 1'd0;
reg           sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine2_auto_precharge = 1'd0;
wire          sdram_bankmachine2_sink_valid;
wire          sdram_bankmachine2_sink_ready;
reg           sdram_bankmachine2_sink_first = 1'd0;
reg           sdram_bankmachine2_sink_last = 1'd0;
wire          sdram_bankmachine2_sink_payload_we;
wire   [19:0] sdram_bankmachine2_sink_payload_addr;
wire          sdram_bankmachine2_source_valid;
wire          sdram_bankmachine2_source_ready;
wire          sdram_bankmachine2_source_first;
wire          sdram_bankmachine2_source_last;
wire          sdram_bankmachine2_source_payload_we;
wire   [19:0] sdram_bankmachine2_source_payload_addr;
wire          sdram_bankmachine2_syncfifo2_we;
wire          sdram_bankmachine2_syncfifo2_writable;
wire          sdram_bankmachine2_syncfifo2_re;
wire          sdram_bankmachine2_syncfifo2_readable;
wire   [22:0] sdram_bankmachine2_syncfifo2_din;
wire   [22:0] sdram_bankmachine2_syncfifo2_dout;
reg     [3:0] sdram_bankmachine2_level = 4'd0;
reg           sdram_bankmachine2_replace = 1'd0;
reg     [2:0] sdram_bankmachine2_produce = 3'd0;
reg     [2:0] sdram_bankmachine2_consume = 3'd0;
reg     [2:0] sdram_bankmachine2_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine2_wrport_dat_r;
wire          sdram_bankmachine2_wrport_we;
wire   [22:0] sdram_bankmachine2_wrport_dat_w;
wire          sdram_bankmachine2_do_read;
wire    [2:0] sdram_bankmachine2_rdport_adr;
wire   [22:0] sdram_bankmachine2_rdport_dat_r;
wire          sdram_bankmachine2_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine2_fifo_in_payload_addr;
wire          sdram_bankmachine2_fifo_in_first;
wire          sdram_bankmachine2_fifo_in_last;
wire          sdram_bankmachine2_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine2_fifo_out_payload_addr;
wire          sdram_bankmachine2_fifo_out_first;
wire          sdram_bankmachine2_fifo_out_last;
wire          sdram_bankmachine2_sink_sink_valid;
wire          sdram_bankmachine2_sink_sink_ready;
wire          sdram_bankmachine2_sink_sink_first;
wire          sdram_bankmachine2_sink_sink_last;
wire          sdram_bankmachine2_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine2_sink_sink_payload_addr;
wire          sdram_bankmachine2_source_source_valid;
wire          sdram_bankmachine2_source_source_ready;
wire          sdram_bankmachine2_source_source_first;
wire          sdram_bankmachine2_source_source_last;
wire          sdram_bankmachine2_source_source_payload_we;
wire   [19:0] sdram_bankmachine2_source_source_payload_addr;
wire          sdram_bankmachine2_pipe_valid_sink_valid;
wire          sdram_bankmachine2_pipe_valid_sink_ready;
wire          sdram_bankmachine2_pipe_valid_sink_first;
wire          sdram_bankmachine2_pipe_valid_sink_last;
wire          sdram_bankmachine2_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine2_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine2_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine2_pipe_valid_source_ready;
reg           sdram_bankmachine2_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine2_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine2_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine2_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine2_row = 13'd0;
reg           sdram_bankmachine2_row_opened = 1'd0;
wire          sdram_bankmachine2_row_hit;
reg           sdram_bankmachine2_row_open = 1'd0;
reg           sdram_bankmachine2_row_close = 1'd0;
reg           sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine2_twtpcon_valid;
reg           sdram_bankmachine2_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine2_twtpcon_count = 3'd0;
wire          sdram_bankmachine2_trccon_valid;
reg           sdram_bankmachine2_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine2_trccon_count = 2'd0;
wire          sdram_bankmachine2_trascon_valid;
reg           sdram_bankmachine2_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine2_trascon_count = 2'd0;
wire          sdram_bankmachine3_req_valid;
wire          sdram_bankmachine3_req_ready;
wire          sdram_bankmachine3_req_we;
wire   [19:0] sdram_bankmachine3_req_addr;
wire          sdram_bankmachine3_req_lock;
reg           sdram_bankmachine3_req_wdata_ready = 1'd0;
reg           sdram_bankmachine3_req_rdata_valid = 1'd0;
wire          sdram_bankmachine3_refresh_req;
reg           sdram_bankmachine3_refresh_gnt = 1'd0;
reg           sdram_bankmachine3_cmd_valid = 1'd0;
reg           sdram_bankmachine3_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine3_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine3_cmd_payload_ba;
reg           sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine3_cmd_payload_we = 1'd0;
reg           sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine3_auto_precharge = 1'd0;
wire          sdram_bankmachine3_sink_valid;
wire          sdram_bankmachine3_sink_ready;
reg           sdram_bankmachine3_sink_first = 1'd0;
reg           sdram_bankmachine3_sink_last = 1'd0;
wire          sdram_bankmachine3_sink_payload_we;
wire   [19:0] sdram_bankmachine3_sink_payload_addr;
wire          sdram_bankmachine3_source_valid;
wire          sdram_bankmachine3_source_ready;
wire          sdram_bankmachine3_source_first;
wire          sdram_bankmachine3_source_last;
wire          sdram_bankmachine3_source_payload_we;
wire   [19:0] sdram_bankmachine3_source_payload_addr;
wire          sdram_bankmachine3_syncfifo3_we;
wire          sdram_bankmachine3_syncfifo3_writable;
wire          sdram_bankmachine3_syncfifo3_re;
wire          sdram_bankmachine3_syncfifo3_readable;
wire   [22:0] sdram_bankmachine3_syncfifo3_din;
wire   [22:0] sdram_bankmachine3_syncfifo3_dout;
reg     [3:0] sdram_bankmachine3_level = 4'd0;
reg           sdram_bankmachine3_replace = 1'd0;
reg     [2:0] sdram_bankmachine3_produce = 3'd0;
reg     [2:0] sdram_bankmachine3_consume = 3'd0;
reg     [2:0] sdram_bankmachine3_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine3_wrport_dat_r;
wire          sdram_bankmachine3_wrport_we;
wire   [22:0] sdram_bankmachine3_wrport_dat_w;
wire          sdram_bankmachine3_do_read;
wire    [2:0] sdram_bankmachine3_rdport_adr;
wire   [22:0] sdram_bankmachine3_rdport_dat_r;
wire          sdram_bankmachine3_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine3_fifo_in_payload_addr;
wire          sdram_bankmachine3_fifo_in_first;
wire          sdram_bankmachine3_fifo_in_last;
wire          sdram_bankmachine3_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine3_fifo_out_payload_addr;
wire          sdram_bankmachine3_fifo_out_first;
wire          sdram_bankmachine3_fifo_out_last;
wire          sdram_bankmachine3_sink_sink_valid;
wire          sdram_bankmachine3_sink_sink_ready;
wire          sdram_bankmachine3_sink_sink_first;
wire          sdram_bankmachine3_sink_sink_last;
wire          sdram_bankmachine3_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine3_sink_sink_payload_addr;
wire          sdram_bankmachine3_source_source_valid;
wire          sdram_bankmachine3_source_source_ready;
wire          sdram_bankmachine3_source_source_first;
wire          sdram_bankmachine3_source_source_last;
wire          sdram_bankmachine3_source_source_payload_we;
wire   [19:0] sdram_bankmachine3_source_source_payload_addr;
wire          sdram_bankmachine3_pipe_valid_sink_valid;
wire          sdram_bankmachine3_pipe_valid_sink_ready;
wire          sdram_bankmachine3_pipe_valid_sink_first;
wire          sdram_bankmachine3_pipe_valid_sink_last;
wire          sdram_bankmachine3_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine3_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine3_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine3_pipe_valid_source_ready;
reg           sdram_bankmachine3_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine3_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine3_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine3_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine3_row = 13'd0;
reg           sdram_bankmachine3_row_opened = 1'd0;
wire          sdram_bankmachine3_row_hit;
reg           sdram_bankmachine3_row_open = 1'd0;
reg           sdram_bankmachine3_row_close = 1'd0;
reg           sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine3_twtpcon_valid;
reg           sdram_bankmachine3_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine3_twtpcon_count = 3'd0;
wire          sdram_bankmachine3_trccon_valid;
reg           sdram_bankmachine3_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine3_trccon_count = 2'd0;
wire          sdram_bankmachine3_trascon_valid;
reg           sdram_bankmachine3_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine3_trascon_count = 2'd0;
wire          sdram_bankmachine4_req_valid;
wire          sdram_bankmachine4_req_ready;
wire          sdram_bankmachine4_req_we;
wire   [19:0] sdram_bankmachine4_req_addr;
wire          sdram_bankmachine4_req_lock;
reg           sdram_bankmachine4_req_wdata_ready = 1'd0;
reg           sdram_bankmachine4_req_rdata_valid = 1'd0;
wire          sdram_bankmachine4_refresh_req;
reg           sdram_bankmachine4_refresh_gnt = 1'd0;
reg           sdram_bankmachine4_cmd_valid = 1'd0;
reg           sdram_bankmachine4_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine4_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine4_cmd_payload_ba;
reg           sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine4_cmd_payload_we = 1'd0;
reg           sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine4_auto_precharge = 1'd0;
wire          sdram_bankmachine4_sink_valid;
wire          sdram_bankmachine4_sink_ready;
reg           sdram_bankmachine4_sink_first = 1'd0;
reg           sdram_bankmachine4_sink_last = 1'd0;
wire          sdram_bankmachine4_sink_payload_we;
wire   [19:0] sdram_bankmachine4_sink_payload_addr;
wire          sdram_bankmachine4_source_valid;
wire          sdram_bankmachine4_source_ready;
wire          sdram_bankmachine4_source_first;
wire          sdram_bankmachine4_source_last;
wire          sdram_bankmachine4_source_payload_we;
wire   [19:0] sdram_bankmachine4_source_payload_addr;
wire          sdram_bankmachine4_syncfifo4_we;
wire          sdram_bankmachine4_syncfifo4_writable;
wire          sdram_bankmachine4_syncfifo4_re;
wire          sdram_bankmachine4_syncfifo4_readable;
wire   [22:0] sdram_bankmachine4_syncfifo4_din;
wire   [22:0] sdram_bankmachine4_syncfifo4_dout;
reg     [3:0] sdram_bankmachine4_level = 4'd0;
reg           sdram_bankmachine4_replace = 1'd0;
reg     [2:0] sdram_bankmachine4_produce = 3'd0;
reg     [2:0] sdram_bankmachine4_consume = 3'd0;
reg     [2:0] sdram_bankmachine4_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine4_wrport_dat_r;
wire          sdram_bankmachine4_wrport_we;
wire   [22:0] sdram_bankmachine4_wrport_dat_w;
wire          sdram_bankmachine4_do_read;
wire    [2:0] sdram_bankmachine4_rdport_adr;
wire   [22:0] sdram_bankmachine4_rdport_dat_r;
wire          sdram_bankmachine4_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine4_fifo_in_payload_addr;
wire          sdram_bankmachine4_fifo_in_first;
wire          sdram_bankmachine4_fifo_in_last;
wire          sdram_bankmachine4_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine4_fifo_out_payload_addr;
wire          sdram_bankmachine4_fifo_out_first;
wire          sdram_bankmachine4_fifo_out_last;
wire          sdram_bankmachine4_sink_sink_valid;
wire          sdram_bankmachine4_sink_sink_ready;
wire          sdram_bankmachine4_sink_sink_first;
wire          sdram_bankmachine4_sink_sink_last;
wire          sdram_bankmachine4_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine4_sink_sink_payload_addr;
wire          sdram_bankmachine4_source_source_valid;
wire          sdram_bankmachine4_source_source_ready;
wire          sdram_bankmachine4_source_source_first;
wire          sdram_bankmachine4_source_source_last;
wire          sdram_bankmachine4_source_source_payload_we;
wire   [19:0] sdram_bankmachine4_source_source_payload_addr;
wire          sdram_bankmachine4_pipe_valid_sink_valid;
wire          sdram_bankmachine4_pipe_valid_sink_ready;
wire          sdram_bankmachine4_pipe_valid_sink_first;
wire          sdram_bankmachine4_pipe_valid_sink_last;
wire          sdram_bankmachine4_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine4_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine4_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine4_pipe_valid_source_ready;
reg           sdram_bankmachine4_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine4_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine4_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine4_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine4_row = 13'd0;
reg           sdram_bankmachine4_row_opened = 1'd0;
wire          sdram_bankmachine4_row_hit;
reg           sdram_bankmachine4_row_open = 1'd0;
reg           sdram_bankmachine4_row_close = 1'd0;
reg           sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine4_twtpcon_valid;
reg           sdram_bankmachine4_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine4_twtpcon_count = 3'd0;
wire          sdram_bankmachine4_trccon_valid;
reg           sdram_bankmachine4_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine4_trccon_count = 2'd0;
wire          sdram_bankmachine4_trascon_valid;
reg           sdram_bankmachine4_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine4_trascon_count = 2'd0;
wire          sdram_bankmachine5_req_valid;
wire          sdram_bankmachine5_req_ready;
wire          sdram_bankmachine5_req_we;
wire   [19:0] sdram_bankmachine5_req_addr;
wire          sdram_bankmachine5_req_lock;
reg           sdram_bankmachine5_req_wdata_ready = 1'd0;
reg           sdram_bankmachine5_req_rdata_valid = 1'd0;
wire          sdram_bankmachine5_refresh_req;
reg           sdram_bankmachine5_refresh_gnt = 1'd0;
reg           sdram_bankmachine5_cmd_valid = 1'd0;
reg           sdram_bankmachine5_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine5_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine5_cmd_payload_ba;
reg           sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine5_cmd_payload_we = 1'd0;
reg           sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine5_auto_precharge = 1'd0;
wire          sdram_bankmachine5_sink_valid;
wire          sdram_bankmachine5_sink_ready;
reg           sdram_bankmachine5_sink_first = 1'd0;
reg           sdram_bankmachine5_sink_last = 1'd0;
wire          sdram_bankmachine5_sink_payload_we;
wire   [19:0] sdram_bankmachine5_sink_payload_addr;
wire          sdram_bankmachine5_source_valid;
wire          sdram_bankmachine5_source_ready;
wire          sdram_bankmachine5_source_first;
wire          sdram_bankmachine5_source_last;
wire          sdram_bankmachine5_source_payload_we;
wire   [19:0] sdram_bankmachine5_source_payload_addr;
wire          sdram_bankmachine5_syncfifo5_we;
wire          sdram_bankmachine5_syncfifo5_writable;
wire          sdram_bankmachine5_syncfifo5_re;
wire          sdram_bankmachine5_syncfifo5_readable;
wire   [22:0] sdram_bankmachine5_syncfifo5_din;
wire   [22:0] sdram_bankmachine5_syncfifo5_dout;
reg     [3:0] sdram_bankmachine5_level = 4'd0;
reg           sdram_bankmachine5_replace = 1'd0;
reg     [2:0] sdram_bankmachine5_produce = 3'd0;
reg     [2:0] sdram_bankmachine5_consume = 3'd0;
reg     [2:0] sdram_bankmachine5_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine5_wrport_dat_r;
wire          sdram_bankmachine5_wrport_we;
wire   [22:0] sdram_bankmachine5_wrport_dat_w;
wire          sdram_bankmachine5_do_read;
wire    [2:0] sdram_bankmachine5_rdport_adr;
wire   [22:0] sdram_bankmachine5_rdport_dat_r;
wire          sdram_bankmachine5_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine5_fifo_in_payload_addr;
wire          sdram_bankmachine5_fifo_in_first;
wire          sdram_bankmachine5_fifo_in_last;
wire          sdram_bankmachine5_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine5_fifo_out_payload_addr;
wire          sdram_bankmachine5_fifo_out_first;
wire          sdram_bankmachine5_fifo_out_last;
wire          sdram_bankmachine5_sink_sink_valid;
wire          sdram_bankmachine5_sink_sink_ready;
wire          sdram_bankmachine5_sink_sink_first;
wire          sdram_bankmachine5_sink_sink_last;
wire          sdram_bankmachine5_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine5_sink_sink_payload_addr;
wire          sdram_bankmachine5_source_source_valid;
wire          sdram_bankmachine5_source_source_ready;
wire          sdram_bankmachine5_source_source_first;
wire          sdram_bankmachine5_source_source_last;
wire          sdram_bankmachine5_source_source_payload_we;
wire   [19:0] sdram_bankmachine5_source_source_payload_addr;
wire          sdram_bankmachine5_pipe_valid_sink_valid;
wire          sdram_bankmachine5_pipe_valid_sink_ready;
wire          sdram_bankmachine5_pipe_valid_sink_first;
wire          sdram_bankmachine5_pipe_valid_sink_last;
wire          sdram_bankmachine5_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine5_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine5_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine5_pipe_valid_source_ready;
reg           sdram_bankmachine5_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine5_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine5_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine5_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine5_row = 13'd0;
reg           sdram_bankmachine5_row_opened = 1'd0;
wire          sdram_bankmachine5_row_hit;
reg           sdram_bankmachine5_row_open = 1'd0;
reg           sdram_bankmachine5_row_close = 1'd0;
reg           sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine5_twtpcon_valid;
reg           sdram_bankmachine5_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine5_twtpcon_count = 3'd0;
wire          sdram_bankmachine5_trccon_valid;
reg           sdram_bankmachine5_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine5_trccon_count = 2'd0;
wire          sdram_bankmachine5_trascon_valid;
reg           sdram_bankmachine5_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine5_trascon_count = 2'd0;
wire          sdram_bankmachine6_req_valid;
wire          sdram_bankmachine6_req_ready;
wire          sdram_bankmachine6_req_we;
wire   [19:0] sdram_bankmachine6_req_addr;
wire          sdram_bankmachine6_req_lock;
reg           sdram_bankmachine6_req_wdata_ready = 1'd0;
reg           sdram_bankmachine6_req_rdata_valid = 1'd0;
wire          sdram_bankmachine6_refresh_req;
reg           sdram_bankmachine6_refresh_gnt = 1'd0;
reg           sdram_bankmachine6_cmd_valid = 1'd0;
reg           sdram_bankmachine6_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine6_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine6_cmd_payload_ba;
reg           sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine6_cmd_payload_we = 1'd0;
reg           sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine6_auto_precharge = 1'd0;
wire          sdram_bankmachine6_sink_valid;
wire          sdram_bankmachine6_sink_ready;
reg           sdram_bankmachine6_sink_first = 1'd0;
reg           sdram_bankmachine6_sink_last = 1'd0;
wire          sdram_bankmachine6_sink_payload_we;
wire   [19:0] sdram_bankmachine6_sink_payload_addr;
wire          sdram_bankmachine6_source_valid;
wire          sdram_bankmachine6_source_ready;
wire          sdram_bankmachine6_source_first;
wire          sdram_bankmachine6_source_last;
wire          sdram_bankmachine6_source_payload_we;
wire   [19:0] sdram_bankmachine6_source_payload_addr;
wire          sdram_bankmachine6_syncfifo6_we;
wire          sdram_bankmachine6_syncfifo6_writable;
wire          sdram_bankmachine6_syncfifo6_re;
wire          sdram_bankmachine6_syncfifo6_readable;
wire   [22:0] sdram_bankmachine6_syncfifo6_din;
wire   [22:0] sdram_bankmachine6_syncfifo6_dout;
reg     [3:0] sdram_bankmachine6_level = 4'd0;
reg           sdram_bankmachine6_replace = 1'd0;
reg     [2:0] sdram_bankmachine6_produce = 3'd0;
reg     [2:0] sdram_bankmachine6_consume = 3'd0;
reg     [2:0] sdram_bankmachine6_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine6_wrport_dat_r;
wire          sdram_bankmachine6_wrport_we;
wire   [22:0] sdram_bankmachine6_wrport_dat_w;
wire          sdram_bankmachine6_do_read;
wire    [2:0] sdram_bankmachine6_rdport_adr;
wire   [22:0] sdram_bankmachine6_rdport_dat_r;
wire          sdram_bankmachine6_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine6_fifo_in_payload_addr;
wire          sdram_bankmachine6_fifo_in_first;
wire          sdram_bankmachine6_fifo_in_last;
wire          sdram_bankmachine6_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine6_fifo_out_payload_addr;
wire          sdram_bankmachine6_fifo_out_first;
wire          sdram_bankmachine6_fifo_out_last;
wire          sdram_bankmachine6_sink_sink_valid;
wire          sdram_bankmachine6_sink_sink_ready;
wire          sdram_bankmachine6_sink_sink_first;
wire          sdram_bankmachine6_sink_sink_last;
wire          sdram_bankmachine6_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine6_sink_sink_payload_addr;
wire          sdram_bankmachine6_source_source_valid;
wire          sdram_bankmachine6_source_source_ready;
wire          sdram_bankmachine6_source_source_first;
wire          sdram_bankmachine6_source_source_last;
wire          sdram_bankmachine6_source_source_payload_we;
wire   [19:0] sdram_bankmachine6_source_source_payload_addr;
wire          sdram_bankmachine6_pipe_valid_sink_valid;
wire          sdram_bankmachine6_pipe_valid_sink_ready;
wire          sdram_bankmachine6_pipe_valid_sink_first;
wire          sdram_bankmachine6_pipe_valid_sink_last;
wire          sdram_bankmachine6_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine6_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine6_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine6_pipe_valid_source_ready;
reg           sdram_bankmachine6_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine6_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine6_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine6_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine6_row = 13'd0;
reg           sdram_bankmachine6_row_opened = 1'd0;
wire          sdram_bankmachine6_row_hit;
reg           sdram_bankmachine6_row_open = 1'd0;
reg           sdram_bankmachine6_row_close = 1'd0;
reg           sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine6_twtpcon_valid;
reg           sdram_bankmachine6_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine6_twtpcon_count = 3'd0;
wire          sdram_bankmachine6_trccon_valid;
reg           sdram_bankmachine6_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine6_trccon_count = 2'd0;
wire          sdram_bankmachine6_trascon_valid;
reg           sdram_bankmachine6_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine6_trascon_count = 2'd0;
wire          sdram_bankmachine7_req_valid;
wire          sdram_bankmachine7_req_ready;
wire          sdram_bankmachine7_req_we;
wire   [19:0] sdram_bankmachine7_req_addr;
wire          sdram_bankmachine7_req_lock;
reg           sdram_bankmachine7_req_wdata_ready = 1'd0;
reg           sdram_bankmachine7_req_rdata_valid = 1'd0;
wire          sdram_bankmachine7_refresh_req;
reg           sdram_bankmachine7_refresh_gnt = 1'd0;
reg           sdram_bankmachine7_cmd_valid = 1'd0;
reg           sdram_bankmachine7_cmd_ready = 1'd0;
reg    [12:0] sdram_bankmachine7_cmd_payload_a = 13'd0;
wire    [2:0] sdram_bankmachine7_cmd_payload_ba;
reg           sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg           sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg           sdram_bankmachine7_cmd_payload_we = 1'd0;
reg           sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg           sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg           sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg           sdram_bankmachine7_auto_precharge = 1'd0;
wire          sdram_bankmachine7_sink_valid;
wire          sdram_bankmachine7_sink_ready;
reg           sdram_bankmachine7_sink_first = 1'd0;
reg           sdram_bankmachine7_sink_last = 1'd0;
wire          sdram_bankmachine7_sink_payload_we;
wire   [19:0] sdram_bankmachine7_sink_payload_addr;
wire          sdram_bankmachine7_source_valid;
wire          sdram_bankmachine7_source_ready;
wire          sdram_bankmachine7_source_first;
wire          sdram_bankmachine7_source_last;
wire          sdram_bankmachine7_source_payload_we;
wire   [19:0] sdram_bankmachine7_source_payload_addr;
wire          sdram_bankmachine7_syncfifo7_we;
wire          sdram_bankmachine7_syncfifo7_writable;
wire          sdram_bankmachine7_syncfifo7_re;
wire          sdram_bankmachine7_syncfifo7_readable;
wire   [22:0] sdram_bankmachine7_syncfifo7_din;
wire   [22:0] sdram_bankmachine7_syncfifo7_dout;
reg     [3:0] sdram_bankmachine7_level = 4'd0;
reg           sdram_bankmachine7_replace = 1'd0;
reg     [2:0] sdram_bankmachine7_produce = 3'd0;
reg     [2:0] sdram_bankmachine7_consume = 3'd0;
reg     [2:0] sdram_bankmachine7_wrport_adr = 3'd0;
wire   [22:0] sdram_bankmachine7_wrport_dat_r;
wire          sdram_bankmachine7_wrport_we;
wire   [22:0] sdram_bankmachine7_wrport_dat_w;
wire          sdram_bankmachine7_do_read;
wire    [2:0] sdram_bankmachine7_rdport_adr;
wire   [22:0] sdram_bankmachine7_rdport_dat_r;
wire          sdram_bankmachine7_fifo_in_payload_we;
wire   [19:0] sdram_bankmachine7_fifo_in_payload_addr;
wire          sdram_bankmachine7_fifo_in_first;
wire          sdram_bankmachine7_fifo_in_last;
wire          sdram_bankmachine7_fifo_out_payload_we;
wire   [19:0] sdram_bankmachine7_fifo_out_payload_addr;
wire          sdram_bankmachine7_fifo_out_first;
wire          sdram_bankmachine7_fifo_out_last;
wire          sdram_bankmachine7_sink_sink_valid;
wire          sdram_bankmachine7_sink_sink_ready;
wire          sdram_bankmachine7_sink_sink_first;
wire          sdram_bankmachine7_sink_sink_last;
wire          sdram_bankmachine7_sink_sink_payload_we;
wire   [19:0] sdram_bankmachine7_sink_sink_payload_addr;
wire          sdram_bankmachine7_source_source_valid;
wire          sdram_bankmachine7_source_source_ready;
wire          sdram_bankmachine7_source_source_first;
wire          sdram_bankmachine7_source_source_last;
wire          sdram_bankmachine7_source_source_payload_we;
wire   [19:0] sdram_bankmachine7_source_source_payload_addr;
wire          sdram_bankmachine7_pipe_valid_sink_valid;
wire          sdram_bankmachine7_pipe_valid_sink_ready;
wire          sdram_bankmachine7_pipe_valid_sink_first;
wire          sdram_bankmachine7_pipe_valid_sink_last;
wire          sdram_bankmachine7_pipe_valid_sink_payload_we;
wire   [19:0] sdram_bankmachine7_pipe_valid_sink_payload_addr;
reg           sdram_bankmachine7_pipe_valid_source_valid = 1'd0;
wire          sdram_bankmachine7_pipe_valid_source_ready;
reg           sdram_bankmachine7_pipe_valid_source_first = 1'd0;
reg           sdram_bankmachine7_pipe_valid_source_last = 1'd0;
reg           sdram_bankmachine7_pipe_valid_source_payload_we = 1'd0;
reg    [19:0] sdram_bankmachine7_pipe_valid_source_payload_addr = 20'd0;
reg    [12:0] sdram_bankmachine7_row = 13'd0;
reg           sdram_bankmachine7_row_opened = 1'd0;
wire          sdram_bankmachine7_row_hit;
reg           sdram_bankmachine7_row_open = 1'd0;
reg           sdram_bankmachine7_row_close = 1'd0;
reg           sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire          sdram_bankmachine7_twtpcon_valid;
reg           sdram_bankmachine7_twtpcon_ready = 1'd0;
reg     [2:0] sdram_bankmachine7_twtpcon_count = 3'd0;
wire          sdram_bankmachine7_trccon_valid;
reg           sdram_bankmachine7_trccon_ready = 1'd0;
reg     [1:0] sdram_bankmachine7_trccon_count = 2'd0;
wire          sdram_bankmachine7_trascon_valid;
reg           sdram_bankmachine7_trascon_ready = 1'd0;
reg     [1:0] sdram_bankmachine7_trascon_count = 2'd0;
wire          sdram_ras_allowed;
wire          sdram_cas_allowed;
reg           sdram_choose_cmd_want_reads = 1'd0;
reg           sdram_choose_cmd_want_writes = 1'd0;
reg           sdram_choose_cmd_want_cmds = 1'd0;
reg           sdram_choose_cmd_want_activates = 1'd0;
wire          sdram_choose_cmd_cmd_valid;
reg           sdram_choose_cmd_cmd_ready = 1'd0;
wire   [12:0] sdram_choose_cmd_cmd_payload_a;
wire    [2:0] sdram_choose_cmd_cmd_payload_ba;
reg           sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg           sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg           sdram_choose_cmd_cmd_payload_we = 1'd0;
wire          sdram_choose_cmd_cmd_payload_is_cmd;
wire          sdram_choose_cmd_cmd_payload_is_read;
wire          sdram_choose_cmd_cmd_payload_is_write;
reg     [7:0] sdram_choose_cmd_valids = 8'd0;
wire    [7:0] sdram_choose_cmd_request;
reg     [2:0] sdram_choose_cmd_grant = 3'd0;
wire          sdram_choose_cmd_ce;
reg           sdram_choose_req_want_reads = 1'd0;
reg           sdram_choose_req_want_writes = 1'd0;
reg           sdram_choose_req_want_cmds = 1'd0;
reg           sdram_choose_req_want_activates = 1'd0;
wire          sdram_choose_req_cmd_valid;
reg           sdram_choose_req_cmd_ready = 1'd0;
wire   [12:0] sdram_choose_req_cmd_payload_a;
wire    [2:0] sdram_choose_req_cmd_payload_ba;
reg           sdram_choose_req_cmd_payload_cas = 1'd0;
reg           sdram_choose_req_cmd_payload_ras = 1'd0;
reg           sdram_choose_req_cmd_payload_we = 1'd0;
wire          sdram_choose_req_cmd_payload_is_cmd;
wire          sdram_choose_req_cmd_payload_is_read;
wire          sdram_choose_req_cmd_payload_is_write;
reg     [7:0] sdram_choose_req_valids = 8'd0;
wire    [7:0] sdram_choose_req_request;
reg     [2:0] sdram_choose_req_grant = 3'd0;
wire          sdram_choose_req_ce;
reg    [12:0] sdram_nop_a = 13'd0;
reg     [2:0] sdram_nop_ba = 3'd0;
reg     [1:0] sdram_steerer_sel0 = 2'd0;
reg     [1:0] sdram_steerer_sel1 = 2'd0;
reg           sdram_steerer0 = 1'd1;
reg           sdram_steerer1 = 1'd1;
reg           sdram_steerer2 = 1'd1;
reg           sdram_steerer3 = 1'd1;
wire          sdram_trrdcon_valid;
reg           sdram_trrdcon_ready = 1'd0;
reg           sdram_trrdcon_count = 1'd0;
wire          sdram_tfawcon_valid;
reg           sdram_tfawcon_ready = 1'd1;
wire    [1:0] sdram_tfawcon_count;
reg     [2:0] sdram_tfawcon_window = 3'd0;
wire          sdram_tccdcon_valid;
reg           sdram_tccdcon_ready = 1'd0;
reg           sdram_tccdcon_count = 1'd0;
wire          sdram_twtrcon_valid;
reg           sdram_twtrcon_ready = 1'd0;
reg     [2:0] sdram_twtrcon_count = 3'd0;
wire          sdram_read_available;
wire          sdram_write_available;
reg           sdram_en0 = 1'd0;
wire          sdram_max_time0;
reg     [4:0] sdram_time0 = 5'd0;
reg           sdram_en1 = 1'd0;
wire          sdram_max_time1;
reg     [3:0] sdram_time1 = 4'd0;
wire          sdram_go_to_refresh;
wire          port_flush;
reg           port_cmd_valid = 1'd0;
wire          port_cmd_ready;
wire          port_cmd_last;
wire          port_cmd_payload_we;
wire   [22:0] port_cmd_payload_addr;
reg           port_wdata_valid = 1'd0;
wire          port_wdata_ready;
wire  [127:0] port_wdata_payload_data;
wire   [15:0] port_wdata_payload_we;
wire          port_rdata_valid;
wire          port_rdata_ready;
wire  [127:0] port_rdata_payload_data;
wire   [29:0] wb_sdram_adr;
wire   [31:0] wb_sdram_dat_w;
reg    [31:0] wb_sdram_dat_r = 32'd0;
wire    [3:0] wb_sdram_sel;
wire          wb_sdram_cyc;
wire          wb_sdram_stb;
wire          wb_sdram_ack;
wire          wb_sdram_we;
wire    [2:0] wb_sdram_cti;
wire    [1:0] wb_sdram_bte;
wire          wb_sdram_err;
reg    [29:0] litedram_wb_adr = 30'd0;
reg   [127:0] litedram_wb_dat_w = 128'd0;
reg   [127:0] litedram_wb_dat_r = 128'd0;
reg    [15:0] litedram_wb_sel = 16'd0;
wire          litedram_wb_cyc;
wire          litedram_wb_stb;
reg           litedram_wb_ack = 1'd0;
wire          litedram_wb_we;
wire    [2:0] litedram_wb_cti;
wire    [1:0] litedram_wb_bte;
reg           litedram_wb_err = 1'd0;
reg           aborted = 1'd0;
reg           is_ongoing = 1'd0;
reg    [13:0] basesoc_adr = 14'd0;
reg           basesoc_we = 1'd0;
reg    [31:0] basesoc_dat_w = 32'd0;
wire   [31:0] basesoc_dat_r;
wire   [29:0] basesoc_wishbone_adr;
wire   [31:0] basesoc_wishbone_dat_w;
reg    [31:0] basesoc_wishbone_dat_r = 32'd0;
wire    [3:0] basesoc_wishbone_sel;
wire          basesoc_wishbone_cyc;
wire          basesoc_wishbone_stb;
reg           basesoc_wishbone_ack = 1'd0;
wire          basesoc_wishbone_we;
wire    [2:0] basesoc_wishbone_cti;
wire    [1:0] basesoc_wishbone_bte;
reg           basesoc_wishbone_err = 1'd0;
wire   [29:0] shared_adr;
wire   [31:0] shared_dat_w;
reg    [31:0] shared_dat_r = 32'd0;
wire    [3:0] shared_sel;
wire          shared_cyc;
wire          shared_stb;
reg           shared_ack = 1'd0;
wire          shared_we;
wire    [2:0] shared_cti;
wire    [1:0] shared_bte;
wire          shared_err;
wire          request;
wire          grant;
reg     [2:0] slave_sel = 3'd0;
reg     [2:0] slave_sel_r = 3'd0;
reg           error = 1'd0;
wire          wait_1;
wire          done;
reg    [19:0] count = 20'd1000000;
wire   [13:0] interface0_bank_bus_adr;
wire          interface0_bank_bus_we;
wire   [31:0] interface0_bank_bus_dat_w;
reg    [31:0] interface0_bank_bus_dat_r = 32'd0;
reg           csrbank0_reset0_re = 1'd0;
wire    [1:0] csrbank0_reset0_r;
reg           csrbank0_reset0_we = 1'd0;
wire    [1:0] csrbank0_reset0_w;
reg           csrbank0_scratch0_re = 1'd0;
wire   [31:0] csrbank0_scratch0_r;
reg           csrbank0_scratch0_we = 1'd0;
wire   [31:0] csrbank0_scratch0_w;
reg           csrbank0_bus_errors_re = 1'd0;
wire   [31:0] csrbank0_bus_errors_r;
reg           csrbank0_bus_errors_we = 1'd0;
wire   [31:0] csrbank0_bus_errors_w;
wire          csrbank0_sel;
wire   [13:0] interface1_bank_bus_adr;
wire          interface1_bank_bus_we;
wire   [31:0] interface1_bank_bus_dat_w;
reg    [31:0] interface1_bank_bus_dat_r = 32'd0;
reg           csrbank1_dly_sel0_re = 1'd0;
wire    [1:0] csrbank1_dly_sel0_r;
reg           csrbank1_dly_sel0_we = 1'd0;
wire    [1:0] csrbank1_dly_sel0_w;
reg           csrbank1_burstdet_seen_re = 1'd0;
wire    [1:0] csrbank1_burstdet_seen_r;
reg           csrbank1_burstdet_seen_we = 1'd0;
wire    [1:0] csrbank1_burstdet_seen_w;
wire          csrbank1_sel;
wire   [13:0] interface2_bank_bus_adr;
wire          interface2_bank_bus_we;
wire   [31:0] interface2_bank_bus_dat_w;
reg    [31:0] interface2_bank_bus_dat_r = 32'd0;
reg           csrbank2_dfii_control0_re = 1'd0;
wire    [3:0] csrbank2_dfii_control0_r;
reg           csrbank2_dfii_control0_we = 1'd0;
wire    [3:0] csrbank2_dfii_control0_w;
reg           csrbank2_dfii_pi0_command0_re = 1'd0;
wire    [5:0] csrbank2_dfii_pi0_command0_r;
reg           csrbank2_dfii_pi0_command0_we = 1'd0;
wire    [5:0] csrbank2_dfii_pi0_command0_w;
reg           csrbank2_dfii_pi0_address0_re = 1'd0;
wire   [12:0] csrbank2_dfii_pi0_address0_r;
reg           csrbank2_dfii_pi0_address0_we = 1'd0;
wire   [12:0] csrbank2_dfii_pi0_address0_w;
reg           csrbank2_dfii_pi0_baddress0_re = 1'd0;
wire    [2:0] csrbank2_dfii_pi0_baddress0_r;
reg           csrbank2_dfii_pi0_baddress0_we = 1'd0;
wire    [2:0] csrbank2_dfii_pi0_baddress0_w;
reg           csrbank2_dfii_pi0_wrdata1_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_wrdata1_r;
reg           csrbank2_dfii_pi0_wrdata1_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_wrdata1_w;
reg           csrbank2_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_wrdata0_r;
reg           csrbank2_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_wrdata0_w;
reg           csrbank2_dfii_pi0_rddata1_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_rddata1_r;
reg           csrbank2_dfii_pi0_rddata1_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_rddata1_w;
reg           csrbank2_dfii_pi0_rddata0_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_rddata0_r;
reg           csrbank2_dfii_pi0_rddata0_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi0_rddata0_w;
reg           csrbank2_dfii_pi1_command0_re = 1'd0;
wire    [5:0] csrbank2_dfii_pi1_command0_r;
reg           csrbank2_dfii_pi1_command0_we = 1'd0;
wire    [5:0] csrbank2_dfii_pi1_command0_w;
reg           csrbank2_dfii_pi1_address0_re = 1'd0;
wire   [12:0] csrbank2_dfii_pi1_address0_r;
reg           csrbank2_dfii_pi1_address0_we = 1'd0;
wire   [12:0] csrbank2_dfii_pi1_address0_w;
reg           csrbank2_dfii_pi1_baddress0_re = 1'd0;
wire    [2:0] csrbank2_dfii_pi1_baddress0_r;
reg           csrbank2_dfii_pi1_baddress0_we = 1'd0;
wire    [2:0] csrbank2_dfii_pi1_baddress0_w;
reg           csrbank2_dfii_pi1_wrdata1_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_wrdata1_r;
reg           csrbank2_dfii_pi1_wrdata1_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_wrdata1_w;
reg           csrbank2_dfii_pi1_wrdata0_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_wrdata0_r;
reg           csrbank2_dfii_pi1_wrdata0_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_wrdata0_w;
reg           csrbank2_dfii_pi1_rddata1_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_rddata1_r;
reg           csrbank2_dfii_pi1_rddata1_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_rddata1_w;
reg           csrbank2_dfii_pi1_rddata0_re = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_rddata0_r;
reg           csrbank2_dfii_pi1_rddata0_we = 1'd0;
wire   [31:0] csrbank2_dfii_pi1_rddata0_w;
wire          csrbank2_sel;
wire   [13:0] interface3_bank_bus_adr;
wire          interface3_bank_bus_we;
wire   [31:0] interface3_bank_bus_dat_w;
reg    [31:0] interface3_bank_bus_dat_r = 32'd0;
reg           csrbank3_load0_re = 1'd0;
wire   [31:0] csrbank3_load0_r;
reg           csrbank3_load0_we = 1'd0;
wire   [31:0] csrbank3_load0_w;
reg           csrbank3_reload0_re = 1'd0;
wire   [31:0] csrbank3_reload0_r;
reg           csrbank3_reload0_we = 1'd0;
wire   [31:0] csrbank3_reload0_w;
reg           csrbank3_en0_re = 1'd0;
wire          csrbank3_en0_r;
reg           csrbank3_en0_we = 1'd0;
wire          csrbank3_en0_w;
reg           csrbank3_update_value0_re = 1'd0;
wire          csrbank3_update_value0_r;
reg           csrbank3_update_value0_we = 1'd0;
wire          csrbank3_update_value0_w;
reg           csrbank3_value_re = 1'd0;
wire   [31:0] csrbank3_value_r;
reg           csrbank3_value_we = 1'd0;
wire   [31:0] csrbank3_value_w;
reg           csrbank3_ev_status_re = 1'd0;
wire          csrbank3_ev_status_r;
reg           csrbank3_ev_status_we = 1'd0;
wire          csrbank3_ev_status_w;
reg           csrbank3_ev_pending_re = 1'd0;
wire          csrbank3_ev_pending_r;
reg           csrbank3_ev_pending_we = 1'd0;
wire          csrbank3_ev_pending_w;
reg           csrbank3_ev_enable0_re = 1'd0;
wire          csrbank3_ev_enable0_r;
reg           csrbank3_ev_enable0_we = 1'd0;
wire          csrbank3_ev_enable0_w;
wire          csrbank3_sel;
wire   [13:0] interface4_bank_bus_adr;
wire          interface4_bank_bus_we;
wire   [31:0] interface4_bank_bus_dat_w;
reg    [31:0] interface4_bank_bus_dat_r = 32'd0;
reg           csrbank4_txfull_re = 1'd0;
wire          csrbank4_txfull_r;
reg           csrbank4_txfull_we = 1'd0;
wire          csrbank4_txfull_w;
reg           csrbank4_rxempty_re = 1'd0;
wire          csrbank4_rxempty_r;
reg           csrbank4_rxempty_we = 1'd0;
wire          csrbank4_rxempty_w;
reg           csrbank4_ev_status_re = 1'd0;
wire    [1:0] csrbank4_ev_status_r;
reg           csrbank4_ev_status_we = 1'd0;
wire    [1:0] csrbank4_ev_status_w;
reg           csrbank4_ev_pending_re = 1'd0;
wire    [1:0] csrbank4_ev_pending_r;
reg           csrbank4_ev_pending_we = 1'd0;
wire    [1:0] csrbank4_ev_pending_w;
reg           csrbank4_ev_enable0_re = 1'd0;
wire    [1:0] csrbank4_ev_enable0_r;
reg           csrbank4_ev_enable0_we = 1'd0;
wire    [1:0] csrbank4_ev_enable0_w;
reg           csrbank4_txempty_re = 1'd0;
wire          csrbank4_txempty_r;
reg           csrbank4_txempty_we = 1'd0;
wire          csrbank4_txempty_w;
reg           csrbank4_rxfull_re = 1'd0;
wire          csrbank4_rxfull_r;
reg           csrbank4_rxfull_we = 1'd0;
wire          csrbank4_rxfull_w;
wire          csrbank4_sel;
wire   [13:0] csr_interconnect_adr;
wire          csr_interconnect_we;
wire   [31:0] csr_interconnect_dat_w;
wire   [31:0] csr_interconnect_dat_r;
wire          basesoc_crg_ecp5pll;
wire          basesoc_crg_locked;
reg     [1:0] basesoc_litedramcore_refresher_state = 2'd0;
reg     [1:0] basesoc_litedramcore_refresher_next_state = 2'd0;
reg     [2:0] basesoc_litedramcore_bankmachine0_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine0_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine1_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine1_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine2_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine2_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine3_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine3_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine4_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine4_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine5_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine5_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine6_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine6_next_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine7_state = 3'd0;
reg     [2:0] basesoc_litedramcore_bankmachine7_next_state = 3'd0;
reg     [3:0] basesoc_litedramcore_multiplexer_state = 4'd0;
reg     [3:0] basesoc_litedramcore_multiplexer_next_state = 4'd0;
wire          basesoc_litedramcore_roundrobin0_request;
wire          basesoc_litedramcore_roundrobin0_grant;
wire          basesoc_litedramcore_roundrobin0_ce;
wire          basesoc_litedramcore_roundrobin1_request;
wire          basesoc_litedramcore_roundrobin1_grant;
wire          basesoc_litedramcore_roundrobin1_ce;
wire          basesoc_litedramcore_roundrobin2_request;
wire          basesoc_litedramcore_roundrobin2_grant;
wire          basesoc_litedramcore_roundrobin2_ce;
wire          basesoc_litedramcore_roundrobin3_request;
wire          basesoc_litedramcore_roundrobin3_grant;
wire          basesoc_litedramcore_roundrobin3_ce;
wire          basesoc_litedramcore_roundrobin4_request;
wire          basesoc_litedramcore_roundrobin4_grant;
wire          basesoc_litedramcore_roundrobin4_ce;
wire          basesoc_litedramcore_roundrobin5_request;
wire          basesoc_litedramcore_roundrobin5_grant;
wire          basesoc_litedramcore_roundrobin5_ce;
wire          basesoc_litedramcore_roundrobin6_request;
wire          basesoc_litedramcore_roundrobin6_grant;
wire          basesoc_litedramcore_roundrobin6_ce;
wire          basesoc_litedramcore_roundrobin7_request;
wire          basesoc_litedramcore_roundrobin7_grant;
wire          basesoc_litedramcore_roundrobin7_ce;
reg           basesoc_litedramcore_locked0 = 1'd0;
reg           basesoc_litedramcore_locked1 = 1'd0;
reg           basesoc_litedramcore_locked2 = 1'd0;
reg           basesoc_litedramcore_locked3 = 1'd0;
reg           basesoc_litedramcore_locked4 = 1'd0;
reg           basesoc_litedramcore_locked5 = 1'd0;
reg           basesoc_litedramcore_locked6 = 1'd0;
reg           basesoc_litedramcore_locked7 = 1'd0;
reg           basesoc_litedramcore_new_master_wdata_ready0 = 1'd0;
reg           basesoc_litedramcore_new_master_wdata_ready1 = 1'd0;
reg           basesoc_litedramcore_new_master_wdata_ready2 = 1'd0;
reg           basesoc_litedramcore_new_master_wdata_ready3 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid0 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid1 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid2 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid3 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid4 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid5 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid6 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid7 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid8 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid9 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid10 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid11 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid12 = 1'd0;
reg           basesoc_litedramcore_new_master_rdata_valid13 = 1'd0;
reg     [1:0] basesoc_litedramwishbone2native_state = 2'd0;
reg     [1:0] basesoc_litedramwishbone2native_next_state = 2'd0;
reg           aborted_litedramwishbone2native_next_value = 1'd0;
reg           aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg     [1:0] basesoc_wishbone2csr_state = 2'd0;
reg     [1:0] basesoc_wishbone2csr_next_state = 2'd0;
reg    [31:0] basesoc_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           basesoc_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg    [13:0] basesoc_adr_wishbone2csr_next_value1 = 14'd0;
reg           basesoc_adr_wishbone2csr_next_value_ce1 = 1'd0;
reg           basesoc_we_wishbone2csr_next_value2 = 1'd0;
reg           basesoc_we_wishbone2csr_next_value_ce2 = 1'd0;
reg    [29:0] rhs_array_muxed0 = 30'd0;
reg    [31:0] rhs_array_muxed1 = 32'd0;
reg     [3:0] rhs_array_muxed2 = 4'd0;
reg           rhs_array_muxed3 = 1'd0;
reg           rhs_array_muxed4 = 1'd0;
reg           rhs_array_muxed5 = 1'd0;
reg     [2:0] rhs_array_muxed6 = 3'd0;
reg     [1:0] rhs_array_muxed7 = 2'd0;
reg           rhs_array_muxed8 = 1'd0;
reg    [12:0] rhs_array_muxed9 = 13'd0;
reg     [2:0] rhs_array_muxed10 = 3'd0;
reg           rhs_array_muxed11 = 1'd0;
reg           rhs_array_muxed12 = 1'd0;
reg           rhs_array_muxed13 = 1'd0;
reg           t_array_muxed0 = 1'd0;
reg           t_array_muxed1 = 1'd0;
reg           t_array_muxed2 = 1'd0;
reg           rhs_array_muxed14 = 1'd0;
reg    [12:0] rhs_array_muxed15 = 13'd0;
reg     [2:0] rhs_array_muxed16 = 3'd0;
reg           rhs_array_muxed17 = 1'd0;
reg           rhs_array_muxed18 = 1'd0;
reg           rhs_array_muxed19 = 1'd0;
reg           t_array_muxed3 = 1'd0;
reg           t_array_muxed4 = 1'd0;
reg           t_array_muxed5 = 1'd0;
reg    [19:0] rhs_array_muxed20 = 20'd0;
reg           rhs_array_muxed21 = 1'd0;
reg           rhs_array_muxed22 = 1'd0;
reg    [19:0] rhs_array_muxed23 = 20'd0;
reg           rhs_array_muxed24 = 1'd0;
reg           rhs_array_muxed25 = 1'd0;
reg    [19:0] rhs_array_muxed26 = 20'd0;
reg           rhs_array_muxed27 = 1'd0;
reg           rhs_array_muxed28 = 1'd0;
reg    [19:0] rhs_array_muxed29 = 20'd0;
reg           rhs_array_muxed30 = 1'd0;
reg           rhs_array_muxed31 = 1'd0;
reg    [19:0] rhs_array_muxed32 = 20'd0;
reg           rhs_array_muxed33 = 1'd0;
reg           rhs_array_muxed34 = 1'd0;
reg    [19:0] rhs_array_muxed35 = 20'd0;
reg           rhs_array_muxed36 = 1'd0;
reg           rhs_array_muxed37 = 1'd0;
reg    [19:0] rhs_array_muxed38 = 20'd0;
reg           rhs_array_muxed39 = 1'd0;
reg           rhs_array_muxed40 = 1'd0;
reg    [19:0] rhs_array_muxed41 = 20'd0;
reg           rhs_array_muxed42 = 1'd0;
reg           rhs_array_muxed43 = 1'd0;
reg     [2:0] array_muxed0 = 3'd0;
reg    [12:0] array_muxed1 = 13'd0;
reg           array_muxed2 = 1'd0;
reg           array_muxed3 = 1'd0;
reg           array_muxed4 = 1'd0;
reg           array_muxed5 = 1'd0;
reg           array_muxed6 = 1'd0;
reg     [2:0] array_muxed7 = 3'd0;
reg    [12:0] array_muxed8 = 13'd0;
reg           array_muxed9 = 1'd0;
reg           array_muxed10 = 1'd0;
reg           array_muxed11 = 1'd0;
reg           array_muxed12 = 1'd0;
reg           array_muxed13 = 1'd0;
wire          rst10;
wire          rst11;
reg           regs0 = 1'd0;
reg           regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign wb_bus_adr = wb_adr;
assign wb_bus_dat_w = wb_dat_w;
assign wb_dat_r = wb_bus_dat_r;
assign wb_bus_sel = wb_sel;
assign wb_bus_cyc = wb_cyc;
assign wb_bus_stb = wb_stb;
assign wb_ack = wb_bus_ack;
assign wb_bus_we = wb_we;
assign wb_bus_cti = wb_cti;
assign wb_bus_bte = wb_bte;
assign wb_err = wb_bus_err;
assign ddram_vccio = 6'd63;
assign ddram_gnd = 1'd0;
assign crg_stop = ddrphy_stop0;
assign crg_reset0 = ddrphy_reset0;
assign rst_n = 1'd1;
assign bus_error = error;
assign por_clk = crg_osc_g;
assign crg_por_done = (crg_por_count == 1'd0);
assign init_clk = crg_osc_g;
assign crg_reset1 = (~crg_por_done);
assign crg_clkin = clk48;
assign sys2x_i_clk = crg_clkout;
assign crg_locked = (basesoc_crg_locked & (~crg_reset1));
assign shared_adr = rhs_array_muxed0;
assign shared_dat_w = rhs_array_muxed1;
assign shared_sel = rhs_array_muxed2;
assign shared_cyc = rhs_array_muxed3;
assign shared_stb = rhs_array_muxed4;
assign shared_we = rhs_array_muxed5;
assign shared_cti = rhs_array_muxed6;
assign shared_bte = rhs_array_muxed7;
assign wb_bus_dat_r = shared_dat_r;
assign wb_bus_ack = (shared_ack & (grant == 1'd0));
assign wb_bus_err = (shared_err & (grant == 1'd0));
assign request = {wb_bus_cyc};
assign grant = 1'd0;
always @(*) begin
    slave_sel <= 3'd0;
    slave_sel[0] <= (shared_adr[29:11] == 12'd2048);
    slave_sel[1] <= (shared_adr[29:0] == 29'd268435456);
    slave_sel[2] <= (shared_adr[29:14] == 1'd0);
end
assign ram_bus_adr = shared_adr;
assign ram_bus_dat_w = shared_dat_w;
assign ram_bus_sel = shared_sel;
assign ram_bus_stb = shared_stb;
assign ram_bus_we = shared_we;
assign ram_bus_cti = shared_cti;
assign ram_bus_bte = shared_bte;
assign wb_sdram_adr = shared_adr;
assign wb_sdram_dat_w = shared_dat_w;
assign wb_sdram_sel = shared_sel;
assign wb_sdram_stb = shared_stb;
assign wb_sdram_we = shared_we;
assign wb_sdram_cti = shared_cti;
assign wb_sdram_bte = shared_bte;
assign basesoc_wishbone_adr = shared_adr;
assign basesoc_wishbone_dat_w = shared_dat_w;
assign basesoc_wishbone_sel = shared_sel;
assign basesoc_wishbone_stb = shared_stb;
assign basesoc_wishbone_we = shared_we;
assign basesoc_wishbone_cti = shared_cti;
assign basesoc_wishbone_bte = shared_bte;
assign ram_bus_cyc = (shared_cyc & slave_sel[0]);
assign wb_sdram_cyc = (shared_cyc & slave_sel[1]);
assign basesoc_wishbone_cyc = (shared_cyc & slave_sel[2]);
assign shared_err = ((ram_bus_err | wb_sdram_err) | basesoc_wishbone_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
    shared_dat_r <= 32'd0;
    error <= 1'd0;
    shared_ack <= 1'd0;
    shared_ack <= ((ram_bus_ack | wb_sdram_ack) | basesoc_wishbone_ack);
    shared_dat_r <= ((({32{slave_sel_r[0]}} & ram_bus_dat_r) | ({32{slave_sel_r[1]}} & wb_sdram_dat_r)) | ({32{slave_sel_r[2]}} & basesoc_wishbone_dat_r));
    if (done) begin
        shared_dat_r <= 32'd4294967295;
        shared_ack <= 1'd1;
        error <= 1'd1;
    end
end
assign done = (count == 1'd0);
assign bus_errors_status = bus_errors;
always @(*) begin
    soc_rst <= 1'd0;
    if (reset_re) begin
        soc_rst <= reset_storage[0];
    end
end
assign cpu_rst = reset_storage[1];
assign csrbank0_reset0_w = reset_storage[1:0];
assign csrbank0_scratch0_w = scratch_storage[31:0];
assign csrbank0_bus_errors_w = bus_errors_status[31:0];
assign bus_errors_we = csrbank0_bus_errors_we;
always @(*) begin
    we <= 4'd0;
    we[0] <= (((ram_bus_cyc & ram_bus_stb) & ram_bus_we) & ram_bus_sel[0]);
    we[1] <= (((ram_bus_cyc & ram_bus_stb) & ram_bus_we) & ram_bus_sel[1]);
    we[2] <= (((ram_bus_cyc & ram_bus_stb) & ram_bus_we) & ram_bus_sel[2]);
    we[3] <= (((ram_bus_cyc & ram_bus_stb) & ram_bus_we) & ram_bus_sel[3]);
end
assign adr = ram_bus_adr[10:0];
assign ram_bus_dat_r = dat_r;
assign dat_w = ram_bus_dat_w;
assign uart_tx_fifo_sink_valid = uart_rxtx_re;
assign uart_tx_fifo_sink_payload_data = uart_rxtx_r;
assign uart_uart_source_valid = uart_tx_fifo_source_valid;
assign uart_tx_fifo_source_ready = uart_uart_source_ready;
assign uart_uart_source_first = uart_tx_fifo_source_first;
assign uart_uart_source_last = uart_tx_fifo_source_last;
assign uart_uart_source_payload_data = uart_tx_fifo_source_payload_data;
assign uart_txfull_status = (~uart_tx_fifo_sink_ready);
assign uart_txempty_status = (~uart_tx_fifo_source_valid);
assign uart_tx_trigger = uart_tx_fifo_sink_ready;
assign uart_rx_fifo_sink_valid = uart_uart_sink_valid;
always @(*) begin
    uart_uart_sink_ready <= 1'd0;
    uart_uart_sink_ready <= 1'd0;
    uart_uart_sink_ready <= uart_rx_fifo_sink_ready;
end
assign uart_rx_fifo_sink_first = uart_uart_sink_first;
assign uart_rx_fifo_sink_last = uart_uart_sink_last;
assign uart_rx_fifo_sink_payload_data = uart_uart_sink_payload_data;
assign uart_rxtx_w = uart_rx_fifo_source_payload_data;
assign uart_rx_fifo_source_ready = (uart_rx_clear | (1'd0 & uart_rxtx_we));
assign uart_rxempty_status = (~uart_rx_fifo_source_valid);
assign uart_rxfull_status = (~uart_rx_fifo_sink_ready);
assign uart_rx_trigger = uart_rx_fifo_source_valid;
assign uart_tx0 = uart_tx_status;
assign uart_tx1 = uart_tx_pending;
always @(*) begin
    uart_tx_clear <= 1'd0;
    if ((uart_pending_re & uart_pending_r[0])) begin
        uart_tx_clear <= 1'd1;
    end
end
assign uart_rx0 = uart_rx_status;
assign uart_rx1 = uart_rx_pending;
always @(*) begin
    uart_rx_clear <= 1'd0;
    if ((uart_pending_re & uart_pending_r[1])) begin
        uart_rx_clear <= 1'd1;
    end
end
assign uart_irq = ((uart_pending_status[0] & uart_enable_storage[0]) | (uart_pending_status[1] & uart_enable_storage[1]));
assign uart_tx_status = uart_tx_trigger;
assign uart_rx_status = uart_rx_trigger;
assign uart_tx_fifo_source_valid = uart_tx_fifo_sink_valid;
assign uart_tx_fifo_sink_ready = uart_tx_fifo_source_ready;
assign uart_tx_fifo_source_first = uart_tx_fifo_sink_first;
assign uart_tx_fifo_source_last = uart_tx_fifo_sink_last;
assign uart_tx_fifo_source_payload_data = uart_tx_fifo_sink_payload_data;
assign uart_rx_fifo_source_valid = uart_rx_fifo_sink_valid;
assign uart_rx_fifo_sink_ready = uart_rx_fifo_source_ready;
assign uart_rx_fifo_source_first = uart_rx_fifo_sink_first;
assign uart_rx_fifo_source_last = uart_rx_fifo_sink_last;
assign uart_rx_fifo_source_payload_data = uart_rx_fifo_sink_payload_data;
assign timer_zero_trigger = (timer_value == 1'd0);
assign timer_zero0 = timer_zero_status;
assign timer_zero1 = timer_zero_pending;
always @(*) begin
    timer_zero_clear <= 1'd0;
    if ((timer_pending_re & timer_pending_r)) begin
        timer_zero_clear <= 1'd1;
    end
end
assign timer_irq = (timer_pending_status & timer_enable_storage);
assign timer_zero_status = timer_zero_trigger;
always @(*) begin
    ddrphy_dm_o_data0 <= 8'd0;
    ddrphy_dm_o_data0[0] <= ddrphy_dfi_p0_wrdata_mask[0];
    ddrphy_dm_o_data0[1] <= ddrphy_dfi_p0_wrdata_mask[2];
    ddrphy_dm_o_data0[2] <= ddrphy_dfi_p0_wrdata_mask[4];
    ddrphy_dm_o_data0[3] <= ddrphy_dfi_p0_wrdata_mask[6];
    ddrphy_dm_o_data0[4] <= ddrphy_dfi_p1_wrdata_mask[0];
    ddrphy_dm_o_data0[5] <= ddrphy_dfi_p1_wrdata_mask[2];
    ddrphy_dm_o_data0[6] <= ddrphy_dfi_p1_wrdata_mask[4];
    ddrphy_dm_o_data0[7] <= ddrphy_dfi_p1_wrdata_mask[6];
end
always @(*) begin
    ddrphy_dq_o_data0 <= 8'd0;
    ddrphy_dq_o_data0[0] <= ddrphy_dfi_p0_wrdata[0];
    ddrphy_dq_o_data0[1] <= ddrphy_dfi_p0_wrdata[16];
    ddrphy_dq_o_data0[2] <= ddrphy_dfi_p0_wrdata[32];
    ddrphy_dq_o_data0[3] <= ddrphy_dfi_p0_wrdata[48];
    ddrphy_dq_o_data0[4] <= ddrphy_dfi_p1_wrdata[0];
    ddrphy_dq_o_data0[5] <= ddrphy_dfi_p1_wrdata[16];
    ddrphy_dq_o_data0[6] <= ddrphy_dfi_p1_wrdata[32];
    ddrphy_dq_o_data0[7] <= ddrphy_dfi_p1_wrdata[48];
end
assign ddrphy_dq_i_data0 = {ddrphy_bitslip0_o, ddrphy_dq_i_bitslip_o_d0};
always @(*) begin
    ddrphy_dq_o_data1 <= 8'd0;
    ddrphy_dq_o_data1[0] <= ddrphy_dfi_p0_wrdata[1];
    ddrphy_dq_o_data1[1] <= ddrphy_dfi_p0_wrdata[17];
    ddrphy_dq_o_data1[2] <= ddrphy_dfi_p0_wrdata[33];
    ddrphy_dq_o_data1[3] <= ddrphy_dfi_p0_wrdata[49];
    ddrphy_dq_o_data1[4] <= ddrphy_dfi_p1_wrdata[1];
    ddrphy_dq_o_data1[5] <= ddrphy_dfi_p1_wrdata[17];
    ddrphy_dq_o_data1[6] <= ddrphy_dfi_p1_wrdata[33];
    ddrphy_dq_o_data1[7] <= ddrphy_dfi_p1_wrdata[49];
end
assign ddrphy_dq_i_data1 = {ddrphy_bitslip1_o, ddrphy_dq_i_bitslip_o_d1};
always @(*) begin
    ddrphy_dq_o_data2 <= 8'd0;
    ddrphy_dq_o_data2[0] <= ddrphy_dfi_p0_wrdata[2];
    ddrphy_dq_o_data2[1] <= ddrphy_dfi_p0_wrdata[18];
    ddrphy_dq_o_data2[2] <= ddrphy_dfi_p0_wrdata[34];
    ddrphy_dq_o_data2[3] <= ddrphy_dfi_p0_wrdata[50];
    ddrphy_dq_o_data2[4] <= ddrphy_dfi_p1_wrdata[2];
    ddrphy_dq_o_data2[5] <= ddrphy_dfi_p1_wrdata[18];
    ddrphy_dq_o_data2[6] <= ddrphy_dfi_p1_wrdata[34];
    ddrphy_dq_o_data2[7] <= ddrphy_dfi_p1_wrdata[50];
end
assign ddrphy_dq_i_data2 = {ddrphy_bitslip2_o, ddrphy_dq_i_bitslip_o_d2};
always @(*) begin
    ddrphy_dq_o_data3 <= 8'd0;
    ddrphy_dq_o_data3[0] <= ddrphy_dfi_p0_wrdata[3];
    ddrphy_dq_o_data3[1] <= ddrphy_dfi_p0_wrdata[19];
    ddrphy_dq_o_data3[2] <= ddrphy_dfi_p0_wrdata[35];
    ddrphy_dq_o_data3[3] <= ddrphy_dfi_p0_wrdata[51];
    ddrphy_dq_o_data3[4] <= ddrphy_dfi_p1_wrdata[3];
    ddrphy_dq_o_data3[5] <= ddrphy_dfi_p1_wrdata[19];
    ddrphy_dq_o_data3[6] <= ddrphy_dfi_p1_wrdata[35];
    ddrphy_dq_o_data3[7] <= ddrphy_dfi_p1_wrdata[51];
end
assign ddrphy_dq_i_data3 = {ddrphy_bitslip3_o, ddrphy_dq_i_bitslip_o_d3};
always @(*) begin
    ddrphy_dq_o_data4 <= 8'd0;
    ddrphy_dq_o_data4[0] <= ddrphy_dfi_p0_wrdata[4];
    ddrphy_dq_o_data4[1] <= ddrphy_dfi_p0_wrdata[20];
    ddrphy_dq_o_data4[2] <= ddrphy_dfi_p0_wrdata[36];
    ddrphy_dq_o_data4[3] <= ddrphy_dfi_p0_wrdata[52];
    ddrphy_dq_o_data4[4] <= ddrphy_dfi_p1_wrdata[4];
    ddrphy_dq_o_data4[5] <= ddrphy_dfi_p1_wrdata[20];
    ddrphy_dq_o_data4[6] <= ddrphy_dfi_p1_wrdata[36];
    ddrphy_dq_o_data4[7] <= ddrphy_dfi_p1_wrdata[52];
end
assign ddrphy_dq_i_data4 = {ddrphy_bitslip4_o, ddrphy_dq_i_bitslip_o_d4};
always @(*) begin
    ddrphy_dq_o_data5 <= 8'd0;
    ddrphy_dq_o_data5[0] <= ddrphy_dfi_p0_wrdata[5];
    ddrphy_dq_o_data5[1] <= ddrphy_dfi_p0_wrdata[21];
    ddrphy_dq_o_data5[2] <= ddrphy_dfi_p0_wrdata[37];
    ddrphy_dq_o_data5[3] <= ddrphy_dfi_p0_wrdata[53];
    ddrphy_dq_o_data5[4] <= ddrphy_dfi_p1_wrdata[5];
    ddrphy_dq_o_data5[5] <= ddrphy_dfi_p1_wrdata[21];
    ddrphy_dq_o_data5[6] <= ddrphy_dfi_p1_wrdata[37];
    ddrphy_dq_o_data5[7] <= ddrphy_dfi_p1_wrdata[53];
end
assign ddrphy_dq_i_data5 = {ddrphy_bitslip5_o, ddrphy_dq_i_bitslip_o_d5};
always @(*) begin
    ddrphy_dq_o_data6 <= 8'd0;
    ddrphy_dq_o_data6[0] <= ddrphy_dfi_p0_wrdata[6];
    ddrphy_dq_o_data6[1] <= ddrphy_dfi_p0_wrdata[22];
    ddrphy_dq_o_data6[2] <= ddrphy_dfi_p0_wrdata[38];
    ddrphy_dq_o_data6[3] <= ddrphy_dfi_p0_wrdata[54];
    ddrphy_dq_o_data6[4] <= ddrphy_dfi_p1_wrdata[6];
    ddrphy_dq_o_data6[5] <= ddrphy_dfi_p1_wrdata[22];
    ddrphy_dq_o_data6[6] <= ddrphy_dfi_p1_wrdata[38];
    ddrphy_dq_o_data6[7] <= ddrphy_dfi_p1_wrdata[54];
end
assign ddrphy_dq_i_data6 = {ddrphy_bitslip6_o, ddrphy_dq_i_bitslip_o_d6};
always @(*) begin
    ddrphy_dq_o_data7 <= 8'd0;
    ddrphy_dq_o_data7[0] <= ddrphy_dfi_p0_wrdata[7];
    ddrphy_dq_o_data7[1] <= ddrphy_dfi_p0_wrdata[23];
    ddrphy_dq_o_data7[2] <= ddrphy_dfi_p0_wrdata[39];
    ddrphy_dq_o_data7[3] <= ddrphy_dfi_p0_wrdata[55];
    ddrphy_dq_o_data7[4] <= ddrphy_dfi_p1_wrdata[7];
    ddrphy_dq_o_data7[5] <= ddrphy_dfi_p1_wrdata[23];
    ddrphy_dq_o_data7[6] <= ddrphy_dfi_p1_wrdata[39];
    ddrphy_dq_o_data7[7] <= ddrphy_dfi_p1_wrdata[55];
end
assign ddrphy_dq_i_data7 = {ddrphy_bitslip7_o, ddrphy_dq_i_bitslip_o_d7};
always @(*) begin
    ddrphy_dm_o_data1 <= 8'd0;
    ddrphy_dm_o_data1[0] <= ddrphy_dfi_p0_wrdata_mask[1];
    ddrphy_dm_o_data1[1] <= ddrphy_dfi_p0_wrdata_mask[3];
    ddrphy_dm_o_data1[2] <= ddrphy_dfi_p0_wrdata_mask[5];
    ddrphy_dm_o_data1[3] <= ddrphy_dfi_p0_wrdata_mask[7];
    ddrphy_dm_o_data1[4] <= ddrphy_dfi_p1_wrdata_mask[1];
    ddrphy_dm_o_data1[5] <= ddrphy_dfi_p1_wrdata_mask[3];
    ddrphy_dm_o_data1[6] <= ddrphy_dfi_p1_wrdata_mask[5];
    ddrphy_dm_o_data1[7] <= ddrphy_dfi_p1_wrdata_mask[7];
end
always @(*) begin
    ddrphy_dq_o_data8 <= 8'd0;
    ddrphy_dq_o_data8[0] <= ddrphy_dfi_p0_wrdata[8];
    ddrphy_dq_o_data8[1] <= ddrphy_dfi_p0_wrdata[24];
    ddrphy_dq_o_data8[2] <= ddrphy_dfi_p0_wrdata[40];
    ddrphy_dq_o_data8[3] <= ddrphy_dfi_p0_wrdata[56];
    ddrphy_dq_o_data8[4] <= ddrphy_dfi_p1_wrdata[8];
    ddrphy_dq_o_data8[5] <= ddrphy_dfi_p1_wrdata[24];
    ddrphy_dq_o_data8[6] <= ddrphy_dfi_p1_wrdata[40];
    ddrphy_dq_o_data8[7] <= ddrphy_dfi_p1_wrdata[56];
end
assign ddrphy_dq_i_data8 = {ddrphy_bitslip8_o, ddrphy_dq_i_bitslip_o_d8};
always @(*) begin
    ddrphy_dq_o_data9 <= 8'd0;
    ddrphy_dq_o_data9[0] <= ddrphy_dfi_p0_wrdata[9];
    ddrphy_dq_o_data9[1] <= ddrphy_dfi_p0_wrdata[25];
    ddrphy_dq_o_data9[2] <= ddrphy_dfi_p0_wrdata[41];
    ddrphy_dq_o_data9[3] <= ddrphy_dfi_p0_wrdata[57];
    ddrphy_dq_o_data9[4] <= ddrphy_dfi_p1_wrdata[9];
    ddrphy_dq_o_data9[5] <= ddrphy_dfi_p1_wrdata[25];
    ddrphy_dq_o_data9[6] <= ddrphy_dfi_p1_wrdata[41];
    ddrphy_dq_o_data9[7] <= ddrphy_dfi_p1_wrdata[57];
end
assign ddrphy_dq_i_data9 = {ddrphy_bitslip9_o, ddrphy_dq_i_bitslip_o_d9};
always @(*) begin
    ddrphy_dq_o_data10 <= 8'd0;
    ddrphy_dq_o_data10[0] <= ddrphy_dfi_p0_wrdata[10];
    ddrphy_dq_o_data10[1] <= ddrphy_dfi_p0_wrdata[26];
    ddrphy_dq_o_data10[2] <= ddrphy_dfi_p0_wrdata[42];
    ddrphy_dq_o_data10[3] <= ddrphy_dfi_p0_wrdata[58];
    ddrphy_dq_o_data10[4] <= ddrphy_dfi_p1_wrdata[10];
    ddrphy_dq_o_data10[5] <= ddrphy_dfi_p1_wrdata[26];
    ddrphy_dq_o_data10[6] <= ddrphy_dfi_p1_wrdata[42];
    ddrphy_dq_o_data10[7] <= ddrphy_dfi_p1_wrdata[58];
end
assign ddrphy_dq_i_data10 = {ddrphy_bitslip10_o, ddrphy_dq_i_bitslip_o_d10};
always @(*) begin
    ddrphy_dq_o_data11 <= 8'd0;
    ddrphy_dq_o_data11[0] <= ddrphy_dfi_p0_wrdata[11];
    ddrphy_dq_o_data11[1] <= ddrphy_dfi_p0_wrdata[27];
    ddrphy_dq_o_data11[2] <= ddrphy_dfi_p0_wrdata[43];
    ddrphy_dq_o_data11[3] <= ddrphy_dfi_p0_wrdata[59];
    ddrphy_dq_o_data11[4] <= ddrphy_dfi_p1_wrdata[11];
    ddrphy_dq_o_data11[5] <= ddrphy_dfi_p1_wrdata[27];
    ddrphy_dq_o_data11[6] <= ddrphy_dfi_p1_wrdata[43];
    ddrphy_dq_o_data11[7] <= ddrphy_dfi_p1_wrdata[59];
end
assign ddrphy_dq_i_data11 = {ddrphy_bitslip11_o, ddrphy_dq_i_bitslip_o_d11};
always @(*) begin
    ddrphy_dq_o_data12 <= 8'd0;
    ddrphy_dq_o_data12[0] <= ddrphy_dfi_p0_wrdata[12];
    ddrphy_dq_o_data12[1] <= ddrphy_dfi_p0_wrdata[28];
    ddrphy_dq_o_data12[2] <= ddrphy_dfi_p0_wrdata[44];
    ddrphy_dq_o_data12[3] <= ddrphy_dfi_p0_wrdata[60];
    ddrphy_dq_o_data12[4] <= ddrphy_dfi_p1_wrdata[12];
    ddrphy_dq_o_data12[5] <= ddrphy_dfi_p1_wrdata[28];
    ddrphy_dq_o_data12[6] <= ddrphy_dfi_p1_wrdata[44];
    ddrphy_dq_o_data12[7] <= ddrphy_dfi_p1_wrdata[60];
end
assign ddrphy_dq_i_data12 = {ddrphy_bitslip12_o, ddrphy_dq_i_bitslip_o_d12};
always @(*) begin
    ddrphy_dq_o_data13 <= 8'd0;
    ddrphy_dq_o_data13[0] <= ddrphy_dfi_p0_wrdata[13];
    ddrphy_dq_o_data13[1] <= ddrphy_dfi_p0_wrdata[29];
    ddrphy_dq_o_data13[2] <= ddrphy_dfi_p0_wrdata[45];
    ddrphy_dq_o_data13[3] <= ddrphy_dfi_p0_wrdata[61];
    ddrphy_dq_o_data13[4] <= ddrphy_dfi_p1_wrdata[13];
    ddrphy_dq_o_data13[5] <= ddrphy_dfi_p1_wrdata[29];
    ddrphy_dq_o_data13[6] <= ddrphy_dfi_p1_wrdata[45];
    ddrphy_dq_o_data13[7] <= ddrphy_dfi_p1_wrdata[61];
end
assign ddrphy_dq_i_data13 = {ddrphy_bitslip13_o, ddrphy_dq_i_bitslip_o_d13};
always @(*) begin
    ddrphy_dq_o_data14 <= 8'd0;
    ddrphy_dq_o_data14[0] <= ddrphy_dfi_p0_wrdata[14];
    ddrphy_dq_o_data14[1] <= ddrphy_dfi_p0_wrdata[30];
    ddrphy_dq_o_data14[2] <= ddrphy_dfi_p0_wrdata[46];
    ddrphy_dq_o_data14[3] <= ddrphy_dfi_p0_wrdata[62];
    ddrphy_dq_o_data14[4] <= ddrphy_dfi_p1_wrdata[14];
    ddrphy_dq_o_data14[5] <= ddrphy_dfi_p1_wrdata[30];
    ddrphy_dq_o_data14[6] <= ddrphy_dfi_p1_wrdata[46];
    ddrphy_dq_o_data14[7] <= ddrphy_dfi_p1_wrdata[62];
end
assign ddrphy_dq_i_data14 = {ddrphy_bitslip14_o, ddrphy_dq_i_bitslip_o_d14};
always @(*) begin
    ddrphy_dq_o_data15 <= 8'd0;
    ddrphy_dq_o_data15[0] <= ddrphy_dfi_p0_wrdata[15];
    ddrphy_dq_o_data15[1] <= ddrphy_dfi_p0_wrdata[31];
    ddrphy_dq_o_data15[2] <= ddrphy_dfi_p0_wrdata[47];
    ddrphy_dq_o_data15[3] <= ddrphy_dfi_p0_wrdata[63];
    ddrphy_dq_o_data15[4] <= ddrphy_dfi_p1_wrdata[15];
    ddrphy_dq_o_data15[5] <= ddrphy_dfi_p1_wrdata[31];
    ddrphy_dq_o_data15[6] <= ddrphy_dfi_p1_wrdata[47];
    ddrphy_dq_o_data15[7] <= ddrphy_dfi_p1_wrdata[63];
end
assign ddrphy_dq_i_data15 = {ddrphy_bitslip15_o, ddrphy_dq_i_bitslip_o_d15};
always @(*) begin
    ddrphy_dfi_p0_rddata <= 64'd0;
    ddrphy_dfi_p0_rddata[0] <= ddrphy_dq_i_data0[0];
    ddrphy_dfi_p0_rddata[16] <= ddrphy_dq_i_data0[1];
    ddrphy_dfi_p0_rddata[32] <= ddrphy_dq_i_data0[2];
    ddrphy_dfi_p0_rddata[48] <= ddrphy_dq_i_data0[3];
    ddrphy_dfi_p0_rddata[1] <= ddrphy_dq_i_data1[0];
    ddrphy_dfi_p0_rddata[17] <= ddrphy_dq_i_data1[1];
    ddrphy_dfi_p0_rddata[33] <= ddrphy_dq_i_data1[2];
    ddrphy_dfi_p0_rddata[49] <= ddrphy_dq_i_data1[3];
    ddrphy_dfi_p0_rddata[2] <= ddrphy_dq_i_data2[0];
    ddrphy_dfi_p0_rddata[18] <= ddrphy_dq_i_data2[1];
    ddrphy_dfi_p0_rddata[34] <= ddrphy_dq_i_data2[2];
    ddrphy_dfi_p0_rddata[50] <= ddrphy_dq_i_data2[3];
    ddrphy_dfi_p0_rddata[3] <= ddrphy_dq_i_data3[0];
    ddrphy_dfi_p0_rddata[19] <= ddrphy_dq_i_data3[1];
    ddrphy_dfi_p0_rddata[35] <= ddrphy_dq_i_data3[2];
    ddrphy_dfi_p0_rddata[51] <= ddrphy_dq_i_data3[3];
    ddrphy_dfi_p0_rddata[4] <= ddrphy_dq_i_data4[0];
    ddrphy_dfi_p0_rddata[20] <= ddrphy_dq_i_data4[1];
    ddrphy_dfi_p0_rddata[36] <= ddrphy_dq_i_data4[2];
    ddrphy_dfi_p0_rddata[52] <= ddrphy_dq_i_data4[3];
    ddrphy_dfi_p0_rddata[5] <= ddrphy_dq_i_data5[0];
    ddrphy_dfi_p0_rddata[21] <= ddrphy_dq_i_data5[1];
    ddrphy_dfi_p0_rddata[37] <= ddrphy_dq_i_data5[2];
    ddrphy_dfi_p0_rddata[53] <= ddrphy_dq_i_data5[3];
    ddrphy_dfi_p0_rddata[6] <= ddrphy_dq_i_data6[0];
    ddrphy_dfi_p0_rddata[22] <= ddrphy_dq_i_data6[1];
    ddrphy_dfi_p0_rddata[38] <= ddrphy_dq_i_data6[2];
    ddrphy_dfi_p0_rddata[54] <= ddrphy_dq_i_data6[3];
    ddrphy_dfi_p0_rddata[7] <= ddrphy_dq_i_data7[0];
    ddrphy_dfi_p0_rddata[23] <= ddrphy_dq_i_data7[1];
    ddrphy_dfi_p0_rddata[39] <= ddrphy_dq_i_data7[2];
    ddrphy_dfi_p0_rddata[55] <= ddrphy_dq_i_data7[3];
    ddrphy_dfi_p0_rddata[8] <= ddrphy_dq_i_data8[0];
    ddrphy_dfi_p0_rddata[24] <= ddrphy_dq_i_data8[1];
    ddrphy_dfi_p0_rddata[40] <= ddrphy_dq_i_data8[2];
    ddrphy_dfi_p0_rddata[56] <= ddrphy_dq_i_data8[3];
    ddrphy_dfi_p0_rddata[9] <= ddrphy_dq_i_data9[0];
    ddrphy_dfi_p0_rddata[25] <= ddrphy_dq_i_data9[1];
    ddrphy_dfi_p0_rddata[41] <= ddrphy_dq_i_data9[2];
    ddrphy_dfi_p0_rddata[57] <= ddrphy_dq_i_data9[3];
    ddrphy_dfi_p0_rddata[10] <= ddrphy_dq_i_data10[0];
    ddrphy_dfi_p0_rddata[26] <= ddrphy_dq_i_data10[1];
    ddrphy_dfi_p0_rddata[42] <= ddrphy_dq_i_data10[2];
    ddrphy_dfi_p0_rddata[58] <= ddrphy_dq_i_data10[3];
    ddrphy_dfi_p0_rddata[11] <= ddrphy_dq_i_data11[0];
    ddrphy_dfi_p0_rddata[27] <= ddrphy_dq_i_data11[1];
    ddrphy_dfi_p0_rddata[43] <= ddrphy_dq_i_data11[2];
    ddrphy_dfi_p0_rddata[59] <= ddrphy_dq_i_data11[3];
    ddrphy_dfi_p0_rddata[12] <= ddrphy_dq_i_data12[0];
    ddrphy_dfi_p0_rddata[28] <= ddrphy_dq_i_data12[1];
    ddrphy_dfi_p0_rddata[44] <= ddrphy_dq_i_data12[2];
    ddrphy_dfi_p0_rddata[60] <= ddrphy_dq_i_data12[3];
    ddrphy_dfi_p0_rddata[13] <= ddrphy_dq_i_data13[0];
    ddrphy_dfi_p0_rddata[29] <= ddrphy_dq_i_data13[1];
    ddrphy_dfi_p0_rddata[45] <= ddrphy_dq_i_data13[2];
    ddrphy_dfi_p0_rddata[61] <= ddrphy_dq_i_data13[3];
    ddrphy_dfi_p0_rddata[14] <= ddrphy_dq_i_data14[0];
    ddrphy_dfi_p0_rddata[30] <= ddrphy_dq_i_data14[1];
    ddrphy_dfi_p0_rddata[46] <= ddrphy_dq_i_data14[2];
    ddrphy_dfi_p0_rddata[62] <= ddrphy_dq_i_data14[3];
    ddrphy_dfi_p0_rddata[15] <= ddrphy_dq_i_data15[0];
    ddrphy_dfi_p0_rddata[31] <= ddrphy_dq_i_data15[1];
    ddrphy_dfi_p0_rddata[47] <= ddrphy_dq_i_data15[2];
    ddrphy_dfi_p0_rddata[63] <= ddrphy_dq_i_data15[3];
end
always @(*) begin
    ddrphy_dfi_p1_rddata <= 64'd0;
    ddrphy_dfi_p1_rddata[0] <= ddrphy_dq_i_data0[4];
    ddrphy_dfi_p1_rddata[16] <= ddrphy_dq_i_data0[5];
    ddrphy_dfi_p1_rddata[32] <= ddrphy_dq_i_data0[6];
    ddrphy_dfi_p1_rddata[48] <= ddrphy_dq_i_data0[7];
    ddrphy_dfi_p1_rddata[1] <= ddrphy_dq_i_data1[4];
    ddrphy_dfi_p1_rddata[17] <= ddrphy_dq_i_data1[5];
    ddrphy_dfi_p1_rddata[33] <= ddrphy_dq_i_data1[6];
    ddrphy_dfi_p1_rddata[49] <= ddrphy_dq_i_data1[7];
    ddrphy_dfi_p1_rddata[2] <= ddrphy_dq_i_data2[4];
    ddrphy_dfi_p1_rddata[18] <= ddrphy_dq_i_data2[5];
    ddrphy_dfi_p1_rddata[34] <= ddrphy_dq_i_data2[6];
    ddrphy_dfi_p1_rddata[50] <= ddrphy_dq_i_data2[7];
    ddrphy_dfi_p1_rddata[3] <= ddrphy_dq_i_data3[4];
    ddrphy_dfi_p1_rddata[19] <= ddrphy_dq_i_data3[5];
    ddrphy_dfi_p1_rddata[35] <= ddrphy_dq_i_data3[6];
    ddrphy_dfi_p1_rddata[51] <= ddrphy_dq_i_data3[7];
    ddrphy_dfi_p1_rddata[4] <= ddrphy_dq_i_data4[4];
    ddrphy_dfi_p1_rddata[20] <= ddrphy_dq_i_data4[5];
    ddrphy_dfi_p1_rddata[36] <= ddrphy_dq_i_data4[6];
    ddrphy_dfi_p1_rddata[52] <= ddrphy_dq_i_data4[7];
    ddrphy_dfi_p1_rddata[5] <= ddrphy_dq_i_data5[4];
    ddrphy_dfi_p1_rddata[21] <= ddrphy_dq_i_data5[5];
    ddrphy_dfi_p1_rddata[37] <= ddrphy_dq_i_data5[6];
    ddrphy_dfi_p1_rddata[53] <= ddrphy_dq_i_data5[7];
    ddrphy_dfi_p1_rddata[6] <= ddrphy_dq_i_data6[4];
    ddrphy_dfi_p1_rddata[22] <= ddrphy_dq_i_data6[5];
    ddrphy_dfi_p1_rddata[38] <= ddrphy_dq_i_data6[6];
    ddrphy_dfi_p1_rddata[54] <= ddrphy_dq_i_data6[7];
    ddrphy_dfi_p1_rddata[7] <= ddrphy_dq_i_data7[4];
    ddrphy_dfi_p1_rddata[23] <= ddrphy_dq_i_data7[5];
    ddrphy_dfi_p1_rddata[39] <= ddrphy_dq_i_data7[6];
    ddrphy_dfi_p1_rddata[55] <= ddrphy_dq_i_data7[7];
    ddrphy_dfi_p1_rddata[8] <= ddrphy_dq_i_data8[4];
    ddrphy_dfi_p1_rddata[24] <= ddrphy_dq_i_data8[5];
    ddrphy_dfi_p1_rddata[40] <= ddrphy_dq_i_data8[6];
    ddrphy_dfi_p1_rddata[56] <= ddrphy_dq_i_data8[7];
    ddrphy_dfi_p1_rddata[9] <= ddrphy_dq_i_data9[4];
    ddrphy_dfi_p1_rddata[25] <= ddrphy_dq_i_data9[5];
    ddrphy_dfi_p1_rddata[41] <= ddrphy_dq_i_data9[6];
    ddrphy_dfi_p1_rddata[57] <= ddrphy_dq_i_data9[7];
    ddrphy_dfi_p1_rddata[10] <= ddrphy_dq_i_data10[4];
    ddrphy_dfi_p1_rddata[26] <= ddrphy_dq_i_data10[5];
    ddrphy_dfi_p1_rddata[42] <= ddrphy_dq_i_data10[6];
    ddrphy_dfi_p1_rddata[58] <= ddrphy_dq_i_data10[7];
    ddrphy_dfi_p1_rddata[11] <= ddrphy_dq_i_data11[4];
    ddrphy_dfi_p1_rddata[27] <= ddrphy_dq_i_data11[5];
    ddrphy_dfi_p1_rddata[43] <= ddrphy_dq_i_data11[6];
    ddrphy_dfi_p1_rddata[59] <= ddrphy_dq_i_data11[7];
    ddrphy_dfi_p1_rddata[12] <= ddrphy_dq_i_data12[4];
    ddrphy_dfi_p1_rddata[28] <= ddrphy_dq_i_data12[5];
    ddrphy_dfi_p1_rddata[44] <= ddrphy_dq_i_data12[6];
    ddrphy_dfi_p1_rddata[60] <= ddrphy_dq_i_data12[7];
    ddrphy_dfi_p1_rddata[13] <= ddrphy_dq_i_data13[4];
    ddrphy_dfi_p1_rddata[29] <= ddrphy_dq_i_data13[5];
    ddrphy_dfi_p1_rddata[45] <= ddrphy_dq_i_data13[6];
    ddrphy_dfi_p1_rddata[61] <= ddrphy_dq_i_data13[7];
    ddrphy_dfi_p1_rddata[14] <= ddrphy_dq_i_data14[4];
    ddrphy_dfi_p1_rddata[30] <= ddrphy_dq_i_data14[5];
    ddrphy_dfi_p1_rddata[46] <= ddrphy_dq_i_data14[6];
    ddrphy_dfi_p1_rddata[62] <= ddrphy_dq_i_data14[7];
    ddrphy_dfi_p1_rddata[15] <= ddrphy_dq_i_data15[4];
    ddrphy_dfi_p1_rddata[31] <= ddrphy_dq_i_data15[5];
    ddrphy_dfi_p1_rddata[47] <= ddrphy_dq_i_data15[6];
    ddrphy_dfi_p1_rddata[63] <= ddrphy_dq_i_data15[7];
end
assign ddrphy_dfi_p0_rddata_valid = ddrphy_rddata_en_tappeddelayline12;
assign ddrphy_dfi_p1_rddata_valid = ddrphy_rddata_en_tappeddelayline12;
assign ddrphy_dqs_re = (ddrphy_rddata_en_tappeddelayline3 | ddrphy_rddata_en_tappeddelayline4);
assign ddrphy_dq_oe = (ddrphy_wrdata_en_tappeddelayline3 | ddrphy_wrdata_en_tappeddelayline4);
assign ddrphy_bl8_chunk = ddrphy_wrdata_en_tappeddelayline3;
assign ddrphy_dqs_oe = ddrphy_dq_oe;
assign ddrphy_dqs_preamble = (ddrphy_wrdata_en_tappeddelayline2 & (~ddrphy_wrdata_en_tappeddelayline3));
assign ddrphy_dqs_postamble = (ddrphy_wrdata_en_tappeddelayline5 & (~ddrphy_wrdata_en_tappeddelayline4));
assign ddrphy_new_lock = (ddrphy_lock1 & (~ddrphy_lock_d));
assign ddrphy_pause0 = ddrphy_pause1;
assign ddrphy_stop0 = ddrphy_stop1;
assign ddrphy_delay0 = ddrphy_delay1;
assign ddrphy_reset0 = ddrphy_reset1;
always @(*) begin
    ddrphy_bitslip0_o <= 4'd0;
    case (ddrphy_bitslip0_value)
        1'd0: begin
            ddrphy_bitslip0_o <= ddrphy_bitslip0_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip0_o <= ddrphy_bitslip0_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip0_o <= ddrphy_bitslip0_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip0_o <= ddrphy_bitslip0_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip1_o <= 4'd0;
    case (ddrphy_bitslip1_value)
        1'd0: begin
            ddrphy_bitslip1_o <= ddrphy_bitslip1_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip1_o <= ddrphy_bitslip1_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip1_o <= ddrphy_bitslip1_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip1_o <= ddrphy_bitslip1_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip2_o <= 4'd0;
    case (ddrphy_bitslip2_value)
        1'd0: begin
            ddrphy_bitslip2_o <= ddrphy_bitslip2_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip2_o <= ddrphy_bitslip2_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip2_o <= ddrphy_bitslip2_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip2_o <= ddrphy_bitslip2_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip3_o <= 4'd0;
    case (ddrphy_bitslip3_value)
        1'd0: begin
            ddrphy_bitslip3_o <= ddrphy_bitslip3_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip3_o <= ddrphy_bitslip3_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip3_o <= ddrphy_bitslip3_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip3_o <= ddrphy_bitslip3_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip4_o <= 4'd0;
    case (ddrphy_bitslip4_value)
        1'd0: begin
            ddrphy_bitslip4_o <= ddrphy_bitslip4_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip4_o <= ddrphy_bitslip4_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip4_o <= ddrphy_bitslip4_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip4_o <= ddrphy_bitslip4_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip5_o <= 4'd0;
    case (ddrphy_bitslip5_value)
        1'd0: begin
            ddrphy_bitslip5_o <= ddrphy_bitslip5_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip5_o <= ddrphy_bitslip5_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip5_o <= ddrphy_bitslip5_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip5_o <= ddrphy_bitslip5_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip6_o <= 4'd0;
    case (ddrphy_bitslip6_value)
        1'd0: begin
            ddrphy_bitslip6_o <= ddrphy_bitslip6_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip6_o <= ddrphy_bitslip6_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip6_o <= ddrphy_bitslip6_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip6_o <= ddrphy_bitslip6_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip7_o <= 4'd0;
    case (ddrphy_bitslip7_value)
        1'd0: begin
            ddrphy_bitslip7_o <= ddrphy_bitslip7_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip7_o <= ddrphy_bitslip7_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip7_o <= ddrphy_bitslip7_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip7_o <= ddrphy_bitslip7_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip8_o <= 4'd0;
    case (ddrphy_bitslip8_value)
        1'd0: begin
            ddrphy_bitslip8_o <= ddrphy_bitslip8_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip8_o <= ddrphy_bitslip8_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip8_o <= ddrphy_bitslip8_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip8_o <= ddrphy_bitslip8_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip9_o <= 4'd0;
    case (ddrphy_bitslip9_value)
        1'd0: begin
            ddrphy_bitslip9_o <= ddrphy_bitslip9_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip9_o <= ddrphy_bitslip9_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip9_o <= ddrphy_bitslip9_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip9_o <= ddrphy_bitslip9_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip10_o <= 4'd0;
    case (ddrphy_bitslip10_value)
        1'd0: begin
            ddrphy_bitslip10_o <= ddrphy_bitslip10_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip10_o <= ddrphy_bitslip10_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip10_o <= ddrphy_bitslip10_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip10_o <= ddrphy_bitslip10_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip11_o <= 4'd0;
    case (ddrphy_bitslip11_value)
        1'd0: begin
            ddrphy_bitslip11_o <= ddrphy_bitslip11_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip11_o <= ddrphy_bitslip11_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip11_o <= ddrphy_bitslip11_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip11_o <= ddrphy_bitslip11_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip12_o <= 4'd0;
    case (ddrphy_bitslip12_value)
        1'd0: begin
            ddrphy_bitslip12_o <= ddrphy_bitslip12_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip12_o <= ddrphy_bitslip12_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip12_o <= ddrphy_bitslip12_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip12_o <= ddrphy_bitslip12_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip13_o <= 4'd0;
    case (ddrphy_bitslip13_value)
        1'd0: begin
            ddrphy_bitslip13_o <= ddrphy_bitslip13_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip13_o <= ddrphy_bitslip13_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip13_o <= ddrphy_bitslip13_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip13_o <= ddrphy_bitslip13_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip14_o <= 4'd0;
    case (ddrphy_bitslip14_value)
        1'd0: begin
            ddrphy_bitslip14_o <= ddrphy_bitslip14_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip14_o <= ddrphy_bitslip14_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip14_o <= ddrphy_bitslip14_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip14_o <= ddrphy_bitslip14_r[6:3];
        end
    endcase
end
always @(*) begin
    ddrphy_bitslip15_o <= 4'd0;
    case (ddrphy_bitslip15_value)
        1'd0: begin
            ddrphy_bitslip15_o <= ddrphy_bitslip15_r[3:0];
        end
        1'd1: begin
            ddrphy_bitslip15_o <= ddrphy_bitslip15_r[4:1];
        end
        2'd2: begin
            ddrphy_bitslip15_o <= ddrphy_bitslip15_r[5:2];
        end
        2'd3: begin
            ddrphy_bitslip15_o <= ddrphy_bitslip15_r[6:3];
        end
    endcase
end
assign ddrphy_dfi_p0_address = sdram_master_p0_address;
assign ddrphy_dfi_p0_bank = sdram_master_p0_bank;
assign ddrphy_dfi_p0_cas_n = sdram_master_p0_cas_n;
assign ddrphy_dfi_p0_cs_n = sdram_master_p0_cs_n;
assign ddrphy_dfi_p0_ras_n = sdram_master_p0_ras_n;
assign ddrphy_dfi_p0_we_n = sdram_master_p0_we_n;
assign ddrphy_dfi_p0_cke = sdram_master_p0_cke;
assign ddrphy_dfi_p0_odt = sdram_master_p0_odt;
assign ddrphy_dfi_p0_reset_n = sdram_master_p0_reset_n;
assign ddrphy_dfi_p0_act_n = sdram_master_p0_act_n;
assign ddrphy_dfi_p0_wrdata = sdram_master_p0_wrdata;
assign ddrphy_dfi_p0_wrdata_en = sdram_master_p0_wrdata_en;
assign ddrphy_dfi_p0_wrdata_mask = sdram_master_p0_wrdata_mask;
assign ddrphy_dfi_p0_rddata_en = sdram_master_p0_rddata_en;
assign sdram_master_p0_rddata = ddrphy_dfi_p0_rddata;
assign sdram_master_p0_rddata_valid = ddrphy_dfi_p0_rddata_valid;
assign ddrphy_dfi_p1_address = sdram_master_p1_address;
assign ddrphy_dfi_p1_bank = sdram_master_p1_bank;
assign ddrphy_dfi_p1_cas_n = sdram_master_p1_cas_n;
assign ddrphy_dfi_p1_cs_n = sdram_master_p1_cs_n;
assign ddrphy_dfi_p1_ras_n = sdram_master_p1_ras_n;
assign ddrphy_dfi_p1_we_n = sdram_master_p1_we_n;
assign ddrphy_dfi_p1_cke = sdram_master_p1_cke;
assign ddrphy_dfi_p1_odt = sdram_master_p1_odt;
assign ddrphy_dfi_p1_reset_n = sdram_master_p1_reset_n;
assign ddrphy_dfi_p1_act_n = sdram_master_p1_act_n;
assign ddrphy_dfi_p1_wrdata = sdram_master_p1_wrdata;
assign ddrphy_dfi_p1_wrdata_en = sdram_master_p1_wrdata_en;
assign ddrphy_dfi_p1_wrdata_mask = sdram_master_p1_wrdata_mask;
assign ddrphy_dfi_p1_rddata_en = sdram_master_p1_rddata_en;
assign sdram_master_p1_rddata = ddrphy_dfi_p1_rddata;
assign sdram_master_p1_rddata_valid = ddrphy_dfi_p1_rddata_valid;
assign sdram_slave_p0_address = sdram_dfi_p0_address;
assign sdram_slave_p0_bank = sdram_dfi_p0_bank;
assign sdram_slave_p0_cas_n = sdram_dfi_p0_cas_n;
assign sdram_slave_p0_cs_n = sdram_dfi_p0_cs_n;
assign sdram_slave_p0_ras_n = sdram_dfi_p0_ras_n;
assign sdram_slave_p0_we_n = sdram_dfi_p0_we_n;
assign sdram_slave_p0_cke = sdram_dfi_p0_cke;
assign sdram_slave_p0_odt = sdram_dfi_p0_odt;
assign sdram_slave_p0_reset_n = sdram_dfi_p0_reset_n;
assign sdram_slave_p0_act_n = sdram_dfi_p0_act_n;
assign sdram_slave_p0_wrdata = sdram_dfi_p0_wrdata;
assign sdram_slave_p0_wrdata_en = sdram_dfi_p0_wrdata_en;
assign sdram_slave_p0_wrdata_mask = sdram_dfi_p0_wrdata_mask;
assign sdram_slave_p0_rddata_en = sdram_dfi_p0_rddata_en;
assign sdram_dfi_p0_rddata = sdram_slave_p0_rddata;
assign sdram_dfi_p0_rddata_valid = sdram_slave_p0_rddata_valid;
assign sdram_slave_p1_address = sdram_dfi_p1_address;
assign sdram_slave_p1_bank = sdram_dfi_p1_bank;
assign sdram_slave_p1_cas_n = sdram_dfi_p1_cas_n;
assign sdram_slave_p1_cs_n = sdram_dfi_p1_cs_n;
assign sdram_slave_p1_ras_n = sdram_dfi_p1_ras_n;
assign sdram_slave_p1_we_n = sdram_dfi_p1_we_n;
assign sdram_slave_p1_cke = sdram_dfi_p1_cke;
assign sdram_slave_p1_odt = sdram_dfi_p1_odt;
assign sdram_slave_p1_reset_n = sdram_dfi_p1_reset_n;
assign sdram_slave_p1_act_n = sdram_dfi_p1_act_n;
assign sdram_slave_p1_wrdata = sdram_dfi_p1_wrdata;
assign sdram_slave_p1_wrdata_en = sdram_dfi_p1_wrdata_en;
assign sdram_slave_p1_wrdata_mask = sdram_dfi_p1_wrdata_mask;
assign sdram_slave_p1_rddata_en = sdram_dfi_p1_rddata_en;
assign sdram_dfi_p1_rddata = sdram_slave_p1_rddata;
assign sdram_dfi_p1_rddata_valid = sdram_slave_p1_rddata_valid;
always @(*) begin
    sdram_csr_dfi_p0_rddata <= 64'd0;
    sdram_csr_dfi_p0_rddata_valid <= 1'd0;
    sdram_slave_p1_rddata <= 64'd0;
    sdram_slave_p1_rddata_valid <= 1'd0;
    sdram_master_p0_address <= 13'd0;
    sdram_master_p0_bank <= 3'd0;
    sdram_master_p0_cas_n <= 1'd1;
    sdram_master_p0_cs_n <= 1'd1;
    sdram_csr_dfi_p1_rddata <= 64'd0;
    sdram_master_p0_ras_n <= 1'd1;
    sdram_csr_dfi_p1_rddata_valid <= 1'd0;
    sdram_master_p0_we_n <= 1'd1;
    sdram_master_p0_cke <= 1'd0;
    sdram_master_p0_odt <= 1'd0;
    sdram_master_p0_reset_n <= 1'd0;
    sdram_master_p0_act_n <= 1'd1;
    sdram_master_p0_wrdata <= 64'd0;
    sdram_master_p0_wrdata_en <= 1'd0;
    sdram_master_p0_wrdata_mask <= 8'd0;
    sdram_master_p0_rddata_en <= 1'd0;
    sdram_master_p1_address <= 13'd0;
    sdram_master_p1_bank <= 3'd0;
    sdram_master_p1_cas_n <= 1'd1;
    sdram_master_p1_cs_n <= 1'd1;
    sdram_slave_p0_rddata <= 64'd0;
    sdram_master_p1_ras_n <= 1'd1;
    sdram_master_p1_we_n <= 1'd1;
    sdram_master_p1_cke <= 1'd0;
    sdram_master_p1_odt <= 1'd0;
    sdram_ext_dfi_p0_rddata <= 64'd0;
    sdram_master_p1_reset_n <= 1'd0;
    sdram_ext_dfi_p0_rddata_valid <= 1'd0;
    sdram_master_p1_act_n <= 1'd1;
    sdram_master_p1_wrdata <= 64'd0;
    sdram_master_p1_wrdata_en <= 1'd0;
    sdram_master_p1_wrdata_mask <= 8'd0;
    sdram_master_p1_rddata_en <= 1'd0;
    sdram_ext_dfi_p1_rddata <= 64'd0;
    sdram_ext_dfi_p1_rddata_valid <= 1'd0;
    sdram_slave_p0_rddata_valid <= 1'd0;
    if (sdram_sel) begin
        if (sdram_ext_dfi_sel) begin
            sdram_master_p0_address <= sdram_ext_dfi_p0_address;
            sdram_master_p0_bank <= sdram_ext_dfi_p0_bank;
            sdram_master_p0_cas_n <= sdram_ext_dfi_p0_cas_n;
            sdram_master_p0_cs_n <= sdram_ext_dfi_p0_cs_n;
            sdram_master_p0_ras_n <= sdram_ext_dfi_p0_ras_n;
            sdram_master_p0_we_n <= sdram_ext_dfi_p0_we_n;
            sdram_master_p0_cke <= sdram_ext_dfi_p0_cke;
            sdram_master_p0_odt <= sdram_ext_dfi_p0_odt;
            sdram_master_p0_reset_n <= sdram_ext_dfi_p0_reset_n;
            sdram_master_p0_act_n <= sdram_ext_dfi_p0_act_n;
            sdram_master_p0_wrdata <= sdram_ext_dfi_p0_wrdata;
            sdram_master_p0_wrdata_en <= sdram_ext_dfi_p0_wrdata_en;
            sdram_master_p0_wrdata_mask <= sdram_ext_dfi_p0_wrdata_mask;
            sdram_master_p0_rddata_en <= sdram_ext_dfi_p0_rddata_en;
            sdram_ext_dfi_p0_rddata <= sdram_master_p0_rddata;
            sdram_ext_dfi_p0_rddata_valid <= sdram_master_p0_rddata_valid;
            sdram_master_p1_address <= sdram_ext_dfi_p1_address;
            sdram_master_p1_bank <= sdram_ext_dfi_p1_bank;
            sdram_master_p1_cas_n <= sdram_ext_dfi_p1_cas_n;
            sdram_master_p1_cs_n <= sdram_ext_dfi_p1_cs_n;
            sdram_master_p1_ras_n <= sdram_ext_dfi_p1_ras_n;
            sdram_master_p1_we_n <= sdram_ext_dfi_p1_we_n;
            sdram_master_p1_cke <= sdram_ext_dfi_p1_cke;
            sdram_master_p1_odt <= sdram_ext_dfi_p1_odt;
            sdram_master_p1_reset_n <= sdram_ext_dfi_p1_reset_n;
            sdram_master_p1_act_n <= sdram_ext_dfi_p1_act_n;
            sdram_master_p1_wrdata <= sdram_ext_dfi_p1_wrdata;
            sdram_master_p1_wrdata_en <= sdram_ext_dfi_p1_wrdata_en;
            sdram_master_p1_wrdata_mask <= sdram_ext_dfi_p1_wrdata_mask;
            sdram_master_p1_rddata_en <= sdram_ext_dfi_p1_rddata_en;
            sdram_ext_dfi_p1_rddata <= sdram_master_p1_rddata;
            sdram_ext_dfi_p1_rddata_valid <= sdram_master_p1_rddata_valid;
        end else begin
            sdram_master_p0_address <= sdram_slave_p0_address;
            sdram_master_p0_bank <= sdram_slave_p0_bank;
            sdram_master_p0_cas_n <= sdram_slave_p0_cas_n;
            sdram_master_p0_cs_n <= sdram_slave_p0_cs_n;
            sdram_master_p0_ras_n <= sdram_slave_p0_ras_n;
            sdram_master_p0_we_n <= sdram_slave_p0_we_n;
            sdram_master_p0_cke <= sdram_slave_p0_cke;
            sdram_master_p0_odt <= sdram_slave_p0_odt;
            sdram_master_p0_reset_n <= sdram_slave_p0_reset_n;
            sdram_master_p0_act_n <= sdram_slave_p0_act_n;
            sdram_master_p0_wrdata <= sdram_slave_p0_wrdata;
            sdram_master_p0_wrdata_en <= sdram_slave_p0_wrdata_en;
            sdram_master_p0_wrdata_mask <= sdram_slave_p0_wrdata_mask;
            sdram_master_p0_rddata_en <= sdram_slave_p0_rddata_en;
            sdram_slave_p0_rddata <= sdram_master_p0_rddata;
            sdram_slave_p0_rddata_valid <= sdram_master_p0_rddata_valid;
            sdram_master_p1_address <= sdram_slave_p1_address;
            sdram_master_p1_bank <= sdram_slave_p1_bank;
            sdram_master_p1_cas_n <= sdram_slave_p1_cas_n;
            sdram_master_p1_cs_n <= sdram_slave_p1_cs_n;
            sdram_master_p1_ras_n <= sdram_slave_p1_ras_n;
            sdram_master_p1_we_n <= sdram_slave_p1_we_n;
            sdram_master_p1_cke <= sdram_slave_p1_cke;
            sdram_master_p1_odt <= sdram_slave_p1_odt;
            sdram_master_p1_reset_n <= sdram_slave_p1_reset_n;
            sdram_master_p1_act_n <= sdram_slave_p1_act_n;
            sdram_master_p1_wrdata <= sdram_slave_p1_wrdata;
            sdram_master_p1_wrdata_en <= sdram_slave_p1_wrdata_en;
            sdram_master_p1_wrdata_mask <= sdram_slave_p1_wrdata_mask;
            sdram_master_p1_rddata_en <= sdram_slave_p1_rddata_en;
            sdram_slave_p1_rddata <= sdram_master_p1_rddata;
            sdram_slave_p1_rddata_valid <= sdram_master_p1_rddata_valid;
        end
    end else begin
        sdram_master_p0_address <= sdram_csr_dfi_p0_address;
        sdram_master_p0_bank <= sdram_csr_dfi_p0_bank;
        sdram_master_p0_cas_n <= sdram_csr_dfi_p0_cas_n;
        sdram_master_p0_cs_n <= sdram_csr_dfi_p0_cs_n;
        sdram_master_p0_ras_n <= sdram_csr_dfi_p0_ras_n;
        sdram_master_p0_we_n <= sdram_csr_dfi_p0_we_n;
        sdram_master_p0_cke <= sdram_csr_dfi_p0_cke;
        sdram_master_p0_odt <= sdram_csr_dfi_p0_odt;
        sdram_master_p0_reset_n <= sdram_csr_dfi_p0_reset_n;
        sdram_master_p0_act_n <= sdram_csr_dfi_p0_act_n;
        sdram_master_p0_wrdata <= sdram_csr_dfi_p0_wrdata;
        sdram_master_p0_wrdata_en <= sdram_csr_dfi_p0_wrdata_en;
        sdram_master_p0_wrdata_mask <= sdram_csr_dfi_p0_wrdata_mask;
        sdram_master_p0_rddata_en <= sdram_csr_dfi_p0_rddata_en;
        sdram_csr_dfi_p0_rddata <= sdram_master_p0_rddata;
        sdram_csr_dfi_p0_rddata_valid <= sdram_master_p0_rddata_valid;
        sdram_master_p1_address <= sdram_csr_dfi_p1_address;
        sdram_master_p1_bank <= sdram_csr_dfi_p1_bank;
        sdram_master_p1_cas_n <= sdram_csr_dfi_p1_cas_n;
        sdram_master_p1_cs_n <= sdram_csr_dfi_p1_cs_n;
        sdram_master_p1_ras_n <= sdram_csr_dfi_p1_ras_n;
        sdram_master_p1_we_n <= sdram_csr_dfi_p1_we_n;
        sdram_master_p1_cke <= sdram_csr_dfi_p1_cke;
        sdram_master_p1_odt <= sdram_csr_dfi_p1_odt;
        sdram_master_p1_reset_n <= sdram_csr_dfi_p1_reset_n;
        sdram_master_p1_act_n <= sdram_csr_dfi_p1_act_n;
        sdram_master_p1_wrdata <= sdram_csr_dfi_p1_wrdata;
        sdram_master_p1_wrdata_en <= sdram_csr_dfi_p1_wrdata_en;
        sdram_master_p1_wrdata_mask <= sdram_csr_dfi_p1_wrdata_mask;
        sdram_master_p1_rddata_en <= sdram_csr_dfi_p1_rddata_en;
        sdram_csr_dfi_p1_rddata <= sdram_master_p1_rddata;
        sdram_csr_dfi_p1_rddata_valid <= sdram_master_p1_rddata_valid;
    end
end
assign sdram_csr_dfi_p0_cke = sdram_cke;
assign sdram_csr_dfi_p1_cke = sdram_cke;
assign sdram_csr_dfi_p0_odt = sdram_odt;
assign sdram_csr_dfi_p1_odt = sdram_odt;
assign sdram_csr_dfi_p0_reset_n = sdram_reset_n;
assign sdram_csr_dfi_p1_reset_n = sdram_reset_n;
always @(*) begin
    sdram_csr_dfi_p0_cs_n <= 1'd1;
    sdram_csr_dfi_p0_ras_n <= 1'd1;
    sdram_csr_dfi_p0_we_n <= 1'd1;
    sdram_csr_dfi_p0_cas_n <= 1'd1;
    if (sdram_phaseinjector0_command_issue_re) begin
        sdram_csr_dfi_p0_cs_n <= {1{(~sdram_phaseinjector0_csrfield_cs)}};
        sdram_csr_dfi_p0_we_n <= (~sdram_phaseinjector0_csrfield_we);
        sdram_csr_dfi_p0_cas_n <= (~sdram_phaseinjector0_csrfield_cas);
        sdram_csr_dfi_p0_ras_n <= (~sdram_phaseinjector0_csrfield_ras);
    end else begin
        sdram_csr_dfi_p0_cs_n <= {1{1'd1}};
        sdram_csr_dfi_p0_we_n <= 1'd1;
        sdram_csr_dfi_p0_cas_n <= 1'd1;
        sdram_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign sdram_csr_dfi_p0_address = sdram_phaseinjector0_address_storage;
assign sdram_csr_dfi_p0_bank = sdram_phaseinjector0_baddress_storage;
assign sdram_csr_dfi_p0_wrdata_en = (sdram_phaseinjector0_command_issue_re & sdram_phaseinjector0_csrfield_wren);
assign sdram_csr_dfi_p0_rddata_en = (sdram_phaseinjector0_command_issue_re & sdram_phaseinjector0_csrfield_rden);
assign sdram_csr_dfi_p0_wrdata = sdram_phaseinjector0_wrdata_storage;
assign sdram_csr_dfi_p0_wrdata_mask = 1'd0;
always @(*) begin
    sdram_csr_dfi_p1_cs_n <= 1'd1;
    sdram_csr_dfi_p1_ras_n <= 1'd1;
    sdram_csr_dfi_p1_we_n <= 1'd1;
    sdram_csr_dfi_p1_cas_n <= 1'd1;
    if (sdram_phaseinjector1_command_issue_re) begin
        sdram_csr_dfi_p1_cs_n <= {1{(~sdram_phaseinjector1_csrfield_cs)}};
        sdram_csr_dfi_p1_we_n <= (~sdram_phaseinjector1_csrfield_we);
        sdram_csr_dfi_p1_cas_n <= (~sdram_phaseinjector1_csrfield_cas);
        sdram_csr_dfi_p1_ras_n <= (~sdram_phaseinjector1_csrfield_ras);
    end else begin
        sdram_csr_dfi_p1_cs_n <= {1{1'd1}};
        sdram_csr_dfi_p1_we_n <= 1'd1;
        sdram_csr_dfi_p1_cas_n <= 1'd1;
        sdram_csr_dfi_p1_ras_n <= 1'd1;
    end
end
assign sdram_csr_dfi_p1_address = sdram_phaseinjector1_address_storage;
assign sdram_csr_dfi_p1_bank = sdram_phaseinjector1_baddress_storage;
assign sdram_csr_dfi_p1_wrdata_en = (sdram_phaseinjector1_command_issue_re & sdram_phaseinjector1_csrfield_wren);
assign sdram_csr_dfi_p1_rddata_en = (sdram_phaseinjector1_command_issue_re & sdram_phaseinjector1_csrfield_rden);
assign sdram_csr_dfi_p1_wrdata = sdram_phaseinjector1_wrdata_storage;
assign sdram_csr_dfi_p1_wrdata_mask = 1'd0;
assign sdram_bankmachine0_req_valid = sdram_interface_bank0_valid;
assign sdram_interface_bank0_ready = sdram_bankmachine0_req_ready;
assign sdram_bankmachine0_req_we = sdram_interface_bank0_we;
assign sdram_bankmachine0_req_addr = sdram_interface_bank0_addr;
assign sdram_interface_bank0_lock = sdram_bankmachine0_req_lock;
assign sdram_interface_bank0_wdata_ready = sdram_bankmachine0_req_wdata_ready;
assign sdram_interface_bank0_rdata_valid = sdram_bankmachine0_req_rdata_valid;
assign sdram_bankmachine1_req_valid = sdram_interface_bank1_valid;
assign sdram_interface_bank1_ready = sdram_bankmachine1_req_ready;
assign sdram_bankmachine1_req_we = sdram_interface_bank1_we;
assign sdram_bankmachine1_req_addr = sdram_interface_bank1_addr;
assign sdram_interface_bank1_lock = sdram_bankmachine1_req_lock;
assign sdram_interface_bank1_wdata_ready = sdram_bankmachine1_req_wdata_ready;
assign sdram_interface_bank1_rdata_valid = sdram_bankmachine1_req_rdata_valid;
assign sdram_bankmachine2_req_valid = sdram_interface_bank2_valid;
assign sdram_interface_bank2_ready = sdram_bankmachine2_req_ready;
assign sdram_bankmachine2_req_we = sdram_interface_bank2_we;
assign sdram_bankmachine2_req_addr = sdram_interface_bank2_addr;
assign sdram_interface_bank2_lock = sdram_bankmachine2_req_lock;
assign sdram_interface_bank2_wdata_ready = sdram_bankmachine2_req_wdata_ready;
assign sdram_interface_bank2_rdata_valid = sdram_bankmachine2_req_rdata_valid;
assign sdram_bankmachine3_req_valid = sdram_interface_bank3_valid;
assign sdram_interface_bank3_ready = sdram_bankmachine3_req_ready;
assign sdram_bankmachine3_req_we = sdram_interface_bank3_we;
assign sdram_bankmachine3_req_addr = sdram_interface_bank3_addr;
assign sdram_interface_bank3_lock = sdram_bankmachine3_req_lock;
assign sdram_interface_bank3_wdata_ready = sdram_bankmachine3_req_wdata_ready;
assign sdram_interface_bank3_rdata_valid = sdram_bankmachine3_req_rdata_valid;
assign sdram_bankmachine4_req_valid = sdram_interface_bank4_valid;
assign sdram_interface_bank4_ready = sdram_bankmachine4_req_ready;
assign sdram_bankmachine4_req_we = sdram_interface_bank4_we;
assign sdram_bankmachine4_req_addr = sdram_interface_bank4_addr;
assign sdram_interface_bank4_lock = sdram_bankmachine4_req_lock;
assign sdram_interface_bank4_wdata_ready = sdram_bankmachine4_req_wdata_ready;
assign sdram_interface_bank4_rdata_valid = sdram_bankmachine4_req_rdata_valid;
assign sdram_bankmachine5_req_valid = sdram_interface_bank5_valid;
assign sdram_interface_bank5_ready = sdram_bankmachine5_req_ready;
assign sdram_bankmachine5_req_we = sdram_interface_bank5_we;
assign sdram_bankmachine5_req_addr = sdram_interface_bank5_addr;
assign sdram_interface_bank5_lock = sdram_bankmachine5_req_lock;
assign sdram_interface_bank5_wdata_ready = sdram_bankmachine5_req_wdata_ready;
assign sdram_interface_bank5_rdata_valid = sdram_bankmachine5_req_rdata_valid;
assign sdram_bankmachine6_req_valid = sdram_interface_bank6_valid;
assign sdram_interface_bank6_ready = sdram_bankmachine6_req_ready;
assign sdram_bankmachine6_req_we = sdram_interface_bank6_we;
assign sdram_bankmachine6_req_addr = sdram_interface_bank6_addr;
assign sdram_interface_bank6_lock = sdram_bankmachine6_req_lock;
assign sdram_interface_bank6_wdata_ready = sdram_bankmachine6_req_wdata_ready;
assign sdram_interface_bank6_rdata_valid = sdram_bankmachine6_req_rdata_valid;
assign sdram_bankmachine7_req_valid = sdram_interface_bank7_valid;
assign sdram_interface_bank7_ready = sdram_bankmachine7_req_ready;
assign sdram_bankmachine7_req_we = sdram_interface_bank7_we;
assign sdram_bankmachine7_req_addr = sdram_interface_bank7_addr;
assign sdram_interface_bank7_lock = sdram_bankmachine7_req_lock;
assign sdram_interface_bank7_wdata_ready = sdram_bankmachine7_req_wdata_ready;
assign sdram_interface_bank7_rdata_valid = sdram_bankmachine7_req_rdata_valid;
assign sdram_timer_wait = (~sdram_timer_done0);
assign sdram_postponer_req_i = sdram_timer_done0;
assign sdram_wants_refresh = sdram_postponer_req_o;
assign sdram_wants_zqcs = sdram_zqcs_timer_done0;
assign sdram_zqcs_timer_wait = (~sdram_zqcs_executer_done);
assign sdram_timer_done1 = (sdram_timer_count1 == 1'd0);
assign sdram_timer_done0 = sdram_timer_done1;
assign sdram_timer_count0 = sdram_timer_count1;
assign sdram_sequencer_start1 = (sdram_sequencer_start0 | (sdram_sequencer_count != 1'd0));
assign sdram_sequencer_done0 = (sdram_sequencer_done1 & (sdram_sequencer_count == 1'd0));
assign sdram_zqcs_timer_done1 = (sdram_zqcs_timer_count1 == 1'd0);
assign sdram_zqcs_timer_done0 = sdram_zqcs_timer_done1;
assign sdram_zqcs_timer_count0 = sdram_zqcs_timer_count1;
always @(*) begin
    basesoc_litedramcore_refresher_next_state <= 2'd0;
    sdram_cmd_valid <= 1'd0;
    sdram_zqcs_executer_start <= 1'd0;
    sdram_cmd_last <= 1'd0;
    sdram_sequencer_start0 <= 1'd0;
    basesoc_litedramcore_refresher_next_state <= basesoc_litedramcore_refresher_state;
    case (basesoc_litedramcore_refresher_state)
        1'd1: begin
            sdram_cmd_valid <= 1'd1;
            if (sdram_cmd_ready) begin
                sdram_sequencer_start0 <= 1'd1;
                basesoc_litedramcore_refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            sdram_cmd_valid <= 1'd1;
            if (sdram_sequencer_done0) begin
                if (sdram_wants_zqcs) begin
                    sdram_zqcs_executer_start <= 1'd1;
                    basesoc_litedramcore_refresher_next_state <= 2'd3;
                end else begin
                    sdram_cmd_valid <= 1'd0;
                    sdram_cmd_last <= 1'd1;
                    basesoc_litedramcore_refresher_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            sdram_cmd_valid <= 1'd1;
            if (sdram_zqcs_executer_done) begin
                sdram_cmd_valid <= 1'd0;
                sdram_cmd_last <= 1'd1;
                basesoc_litedramcore_refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (sdram_wants_refresh) begin
                    basesoc_litedramcore_refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign sdram_bankmachine0_sink_valid = sdram_bankmachine0_req_valid;
assign sdram_bankmachine0_req_ready = sdram_bankmachine0_sink_ready;
assign sdram_bankmachine0_sink_payload_we = sdram_bankmachine0_req_we;
assign sdram_bankmachine0_sink_payload_addr = sdram_bankmachine0_req_addr;
assign sdram_bankmachine0_sink_sink_valid = sdram_bankmachine0_source_valid;
assign sdram_bankmachine0_source_ready = sdram_bankmachine0_sink_sink_ready;
assign sdram_bankmachine0_sink_sink_first = sdram_bankmachine0_source_first;
assign sdram_bankmachine0_sink_sink_last = sdram_bankmachine0_source_last;
assign sdram_bankmachine0_sink_sink_payload_we = sdram_bankmachine0_source_payload_we;
assign sdram_bankmachine0_sink_sink_payload_addr = sdram_bankmachine0_source_payload_addr;
assign sdram_bankmachine0_source_source_ready = (sdram_bankmachine0_req_wdata_ready | sdram_bankmachine0_req_rdata_valid);
assign sdram_bankmachine0_req_lock = (sdram_bankmachine0_source_valid | sdram_bankmachine0_source_source_valid);
assign sdram_bankmachine0_row_hit = (sdram_bankmachine0_row == sdram_bankmachine0_source_source_payload_addr[19:7]);
assign sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    sdram_bankmachine0_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine0_row_col_n_addr_sel) begin
        sdram_bankmachine0_cmd_payload_a <= sdram_bankmachine0_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine0_cmd_payload_a <= ((sdram_bankmachine0_auto_precharge <<< 4'd10) | {sdram_bankmachine0_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine0_twtpcon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_cmd_payload_is_write);
assign sdram_bankmachine0_trccon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_row_open);
assign sdram_bankmachine0_trascon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_row_open);
always @(*) begin
    sdram_bankmachine0_auto_precharge <= 1'd0;
    if ((sdram_bankmachine0_source_valid & sdram_bankmachine0_source_source_valid)) begin
        if ((sdram_bankmachine0_source_payload_addr[19:7] != sdram_bankmachine0_source_source_payload_addr[19:7])) begin
            sdram_bankmachine0_auto_precharge <= (sdram_bankmachine0_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine0_syncfifo0_din = {sdram_bankmachine0_fifo_in_last, sdram_bankmachine0_fifo_in_first, sdram_bankmachine0_fifo_in_payload_addr, sdram_bankmachine0_fifo_in_payload_we};
assign {sdram_bankmachine0_fifo_out_last, sdram_bankmachine0_fifo_out_first, sdram_bankmachine0_fifo_out_payload_addr, sdram_bankmachine0_fifo_out_payload_we} = sdram_bankmachine0_syncfifo0_dout;
assign sdram_bankmachine0_sink_ready = sdram_bankmachine0_syncfifo0_writable;
assign sdram_bankmachine0_syncfifo0_we = sdram_bankmachine0_sink_valid;
assign sdram_bankmachine0_fifo_in_first = sdram_bankmachine0_sink_first;
assign sdram_bankmachine0_fifo_in_last = sdram_bankmachine0_sink_last;
assign sdram_bankmachine0_fifo_in_payload_we = sdram_bankmachine0_sink_payload_we;
assign sdram_bankmachine0_fifo_in_payload_addr = sdram_bankmachine0_sink_payload_addr;
assign sdram_bankmachine0_source_valid = sdram_bankmachine0_syncfifo0_readable;
assign sdram_bankmachine0_source_first = sdram_bankmachine0_fifo_out_first;
assign sdram_bankmachine0_source_last = sdram_bankmachine0_fifo_out_last;
assign sdram_bankmachine0_source_payload_we = sdram_bankmachine0_fifo_out_payload_we;
assign sdram_bankmachine0_source_payload_addr = sdram_bankmachine0_fifo_out_payload_addr;
assign sdram_bankmachine0_syncfifo0_re = sdram_bankmachine0_source_ready;
always @(*) begin
    sdram_bankmachine0_wrport_adr <= 3'd0;
    if (sdram_bankmachine0_replace) begin
        sdram_bankmachine0_wrport_adr <= (sdram_bankmachine0_produce - 1'd1);
    end else begin
        sdram_bankmachine0_wrport_adr <= sdram_bankmachine0_produce;
    end
end
assign sdram_bankmachine0_wrport_dat_w = sdram_bankmachine0_syncfifo0_din;
assign sdram_bankmachine0_wrport_we = (sdram_bankmachine0_syncfifo0_we & (sdram_bankmachine0_syncfifo0_writable | sdram_bankmachine0_replace));
assign sdram_bankmachine0_do_read = (sdram_bankmachine0_syncfifo0_readable & sdram_bankmachine0_syncfifo0_re);
assign sdram_bankmachine0_rdport_adr = sdram_bankmachine0_consume;
assign sdram_bankmachine0_syncfifo0_dout = sdram_bankmachine0_rdport_dat_r;
assign sdram_bankmachine0_syncfifo0_writable = (sdram_bankmachine0_level != 4'd8);
assign sdram_bankmachine0_syncfifo0_readable = (sdram_bankmachine0_level != 1'd0);
assign sdram_bankmachine0_pipe_valid_sink_ready = ((~sdram_bankmachine0_pipe_valid_source_valid) | sdram_bankmachine0_pipe_valid_source_ready);
assign sdram_bankmachine0_pipe_valid_sink_valid = sdram_bankmachine0_sink_sink_valid;
assign sdram_bankmachine0_sink_sink_ready = sdram_bankmachine0_pipe_valid_sink_ready;
assign sdram_bankmachine0_pipe_valid_sink_first = sdram_bankmachine0_sink_sink_first;
assign sdram_bankmachine0_pipe_valid_sink_last = sdram_bankmachine0_sink_sink_last;
assign sdram_bankmachine0_pipe_valid_sink_payload_we = sdram_bankmachine0_sink_sink_payload_we;
assign sdram_bankmachine0_pipe_valid_sink_payload_addr = sdram_bankmachine0_sink_sink_payload_addr;
assign sdram_bankmachine0_source_source_valid = sdram_bankmachine0_pipe_valid_source_valid;
assign sdram_bankmachine0_pipe_valid_source_ready = sdram_bankmachine0_source_source_ready;
assign sdram_bankmachine0_source_source_first = sdram_bankmachine0_pipe_valid_source_first;
assign sdram_bankmachine0_source_source_last = sdram_bankmachine0_pipe_valid_source_last;
assign sdram_bankmachine0_source_source_payload_we = sdram_bankmachine0_pipe_valid_source_payload_we;
assign sdram_bankmachine0_source_source_payload_addr = sdram_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine0_req_wdata_ready <= 1'd0;
    sdram_bankmachine0_req_rdata_valid <= 1'd0;
    sdram_bankmachine0_refresh_gnt <= 1'd0;
    sdram_bankmachine0_row_open <= 1'd0;
    sdram_bankmachine0_cmd_valid <= 1'd0;
    sdram_bankmachine0_row_close <= 1'd0;
    basesoc_litedramcore_bankmachine0_next_state <= 3'd0;
    sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine0_cmd_payload_cas <= 1'd0;
    sdram_bankmachine0_cmd_payload_ras <= 1'd0;
    sdram_bankmachine0_cmd_payload_we <= 1'd0;
    sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
    basesoc_litedramcore_bankmachine0_next_state <= basesoc_litedramcore_bankmachine0_state;
    case (basesoc_litedramcore_bankmachine0_state)
        1'd1: begin
            if ((sdram_bankmachine0_twtpcon_ready & sdram_bankmachine0_trascon_ready)) begin
                sdram_bankmachine0_cmd_valid <= 1'd1;
                if (sdram_bankmachine0_cmd_ready) begin
                    basesoc_litedramcore_bankmachine0_next_state <= 3'd5;
                end
                sdram_bankmachine0_cmd_payload_ras <= 1'd1;
                sdram_bankmachine0_cmd_payload_we <= 1'd1;
                sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine0_twtpcon_ready & sdram_bankmachine0_trascon_ready)) begin
                basesoc_litedramcore_bankmachine0_next_state <= 3'd5;
            end
            sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine0_trccon_ready) begin
                sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine0_row_open <= 1'd1;
                sdram_bankmachine0_cmd_valid <= 1'd1;
                sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine0_cmd_ready) begin
                    basesoc_litedramcore_bankmachine0_next_state <= 3'd6;
                end
                sdram_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine0_twtpcon_ready) begin
                sdram_bankmachine0_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine0_row_close <= 1'd1;
            sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine0_refresh_req)) begin
                basesoc_litedramcore_bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine0_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine0_refresh_req) begin
                basesoc_litedramcore_bankmachine0_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine0_source_source_valid) begin
                    if (sdram_bankmachine0_row_opened) begin
                        if (sdram_bankmachine0_row_hit) begin
                            sdram_bankmachine0_cmd_valid <= 1'd1;
                            if (sdram_bankmachine0_source_source_payload_we) begin
                                sdram_bankmachine0_req_wdata_ready <= sdram_bankmachine0_cmd_ready;
                                sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine0_req_rdata_valid <= sdram_bankmachine0_cmd_ready;
                                sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine0_cmd_ready & sdram_bankmachine0_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine1_sink_valid = sdram_bankmachine1_req_valid;
assign sdram_bankmachine1_req_ready = sdram_bankmachine1_sink_ready;
assign sdram_bankmachine1_sink_payload_we = sdram_bankmachine1_req_we;
assign sdram_bankmachine1_sink_payload_addr = sdram_bankmachine1_req_addr;
assign sdram_bankmachine1_sink_sink_valid = sdram_bankmachine1_source_valid;
assign sdram_bankmachine1_source_ready = sdram_bankmachine1_sink_sink_ready;
assign sdram_bankmachine1_sink_sink_first = sdram_bankmachine1_source_first;
assign sdram_bankmachine1_sink_sink_last = sdram_bankmachine1_source_last;
assign sdram_bankmachine1_sink_sink_payload_we = sdram_bankmachine1_source_payload_we;
assign sdram_bankmachine1_sink_sink_payload_addr = sdram_bankmachine1_source_payload_addr;
assign sdram_bankmachine1_source_source_ready = (sdram_bankmachine1_req_wdata_ready | sdram_bankmachine1_req_rdata_valid);
assign sdram_bankmachine1_req_lock = (sdram_bankmachine1_source_valid | sdram_bankmachine1_source_source_valid);
assign sdram_bankmachine1_row_hit = (sdram_bankmachine1_row == sdram_bankmachine1_source_source_payload_addr[19:7]);
assign sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    sdram_bankmachine1_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine1_row_col_n_addr_sel) begin
        sdram_bankmachine1_cmd_payload_a <= sdram_bankmachine1_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine1_cmd_payload_a <= ((sdram_bankmachine1_auto_precharge <<< 4'd10) | {sdram_bankmachine1_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine1_twtpcon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_cmd_payload_is_write);
assign sdram_bankmachine1_trccon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_row_open);
assign sdram_bankmachine1_trascon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_row_open);
always @(*) begin
    sdram_bankmachine1_auto_precharge <= 1'd0;
    if ((sdram_bankmachine1_source_valid & sdram_bankmachine1_source_source_valid)) begin
        if ((sdram_bankmachine1_source_payload_addr[19:7] != sdram_bankmachine1_source_source_payload_addr[19:7])) begin
            sdram_bankmachine1_auto_precharge <= (sdram_bankmachine1_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine1_syncfifo1_din = {sdram_bankmachine1_fifo_in_last, sdram_bankmachine1_fifo_in_first, sdram_bankmachine1_fifo_in_payload_addr, sdram_bankmachine1_fifo_in_payload_we};
assign {sdram_bankmachine1_fifo_out_last, sdram_bankmachine1_fifo_out_first, sdram_bankmachine1_fifo_out_payload_addr, sdram_bankmachine1_fifo_out_payload_we} = sdram_bankmachine1_syncfifo1_dout;
assign sdram_bankmachine1_sink_ready = sdram_bankmachine1_syncfifo1_writable;
assign sdram_bankmachine1_syncfifo1_we = sdram_bankmachine1_sink_valid;
assign sdram_bankmachine1_fifo_in_first = sdram_bankmachine1_sink_first;
assign sdram_bankmachine1_fifo_in_last = sdram_bankmachine1_sink_last;
assign sdram_bankmachine1_fifo_in_payload_we = sdram_bankmachine1_sink_payload_we;
assign sdram_bankmachine1_fifo_in_payload_addr = sdram_bankmachine1_sink_payload_addr;
assign sdram_bankmachine1_source_valid = sdram_bankmachine1_syncfifo1_readable;
assign sdram_bankmachine1_source_first = sdram_bankmachine1_fifo_out_first;
assign sdram_bankmachine1_source_last = sdram_bankmachine1_fifo_out_last;
assign sdram_bankmachine1_source_payload_we = sdram_bankmachine1_fifo_out_payload_we;
assign sdram_bankmachine1_source_payload_addr = sdram_bankmachine1_fifo_out_payload_addr;
assign sdram_bankmachine1_syncfifo1_re = sdram_bankmachine1_source_ready;
always @(*) begin
    sdram_bankmachine1_wrport_adr <= 3'd0;
    if (sdram_bankmachine1_replace) begin
        sdram_bankmachine1_wrport_adr <= (sdram_bankmachine1_produce - 1'd1);
    end else begin
        sdram_bankmachine1_wrport_adr <= sdram_bankmachine1_produce;
    end
end
assign sdram_bankmachine1_wrport_dat_w = sdram_bankmachine1_syncfifo1_din;
assign sdram_bankmachine1_wrport_we = (sdram_bankmachine1_syncfifo1_we & (sdram_bankmachine1_syncfifo1_writable | sdram_bankmachine1_replace));
assign sdram_bankmachine1_do_read = (sdram_bankmachine1_syncfifo1_readable & sdram_bankmachine1_syncfifo1_re);
assign sdram_bankmachine1_rdport_adr = sdram_bankmachine1_consume;
assign sdram_bankmachine1_syncfifo1_dout = sdram_bankmachine1_rdport_dat_r;
assign sdram_bankmachine1_syncfifo1_writable = (sdram_bankmachine1_level != 4'd8);
assign sdram_bankmachine1_syncfifo1_readable = (sdram_bankmachine1_level != 1'd0);
assign sdram_bankmachine1_pipe_valid_sink_ready = ((~sdram_bankmachine1_pipe_valid_source_valid) | sdram_bankmachine1_pipe_valid_source_ready);
assign sdram_bankmachine1_pipe_valid_sink_valid = sdram_bankmachine1_sink_sink_valid;
assign sdram_bankmachine1_sink_sink_ready = sdram_bankmachine1_pipe_valid_sink_ready;
assign sdram_bankmachine1_pipe_valid_sink_first = sdram_bankmachine1_sink_sink_first;
assign sdram_bankmachine1_pipe_valid_sink_last = sdram_bankmachine1_sink_sink_last;
assign sdram_bankmachine1_pipe_valid_sink_payload_we = sdram_bankmachine1_sink_sink_payload_we;
assign sdram_bankmachine1_pipe_valid_sink_payload_addr = sdram_bankmachine1_sink_sink_payload_addr;
assign sdram_bankmachine1_source_source_valid = sdram_bankmachine1_pipe_valid_source_valid;
assign sdram_bankmachine1_pipe_valid_source_ready = sdram_bankmachine1_source_source_ready;
assign sdram_bankmachine1_source_source_first = sdram_bankmachine1_pipe_valid_source_first;
assign sdram_bankmachine1_source_source_last = sdram_bankmachine1_pipe_valid_source_last;
assign sdram_bankmachine1_source_source_payload_we = sdram_bankmachine1_pipe_valid_source_payload_we;
assign sdram_bankmachine1_source_source_payload_addr = sdram_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine1_refresh_gnt <= 1'd0;
    sdram_bankmachine1_row_open <= 1'd0;
    sdram_bankmachine1_cmd_valid <= 1'd0;
    sdram_bankmachine1_row_close <= 1'd0;
    sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
    basesoc_litedramcore_bankmachine1_next_state <= 3'd0;
    sdram_bankmachine1_cmd_payload_cas <= 1'd0;
    sdram_bankmachine1_cmd_payload_ras <= 1'd0;
    sdram_bankmachine1_cmd_payload_we <= 1'd0;
    sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
    sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine1_req_wdata_ready <= 1'd0;
    sdram_bankmachine1_req_rdata_valid <= 1'd0;
    basesoc_litedramcore_bankmachine1_next_state <= basesoc_litedramcore_bankmachine1_state;
    case (basesoc_litedramcore_bankmachine1_state)
        1'd1: begin
            if ((sdram_bankmachine1_twtpcon_ready & sdram_bankmachine1_trascon_ready)) begin
                sdram_bankmachine1_cmd_valid <= 1'd1;
                if (sdram_bankmachine1_cmd_ready) begin
                    basesoc_litedramcore_bankmachine1_next_state <= 3'd5;
                end
                sdram_bankmachine1_cmd_payload_ras <= 1'd1;
                sdram_bankmachine1_cmd_payload_we <= 1'd1;
                sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine1_twtpcon_ready & sdram_bankmachine1_trascon_ready)) begin
                basesoc_litedramcore_bankmachine1_next_state <= 3'd5;
            end
            sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine1_trccon_ready) begin
                sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine1_row_open <= 1'd1;
                sdram_bankmachine1_cmd_valid <= 1'd1;
                sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine1_cmd_ready) begin
                    basesoc_litedramcore_bankmachine1_next_state <= 3'd6;
                end
                sdram_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine1_twtpcon_ready) begin
                sdram_bankmachine1_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine1_row_close <= 1'd1;
            sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine1_refresh_req)) begin
                basesoc_litedramcore_bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine1_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine1_refresh_req) begin
                basesoc_litedramcore_bankmachine1_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine1_source_source_valid) begin
                    if (sdram_bankmachine1_row_opened) begin
                        if (sdram_bankmachine1_row_hit) begin
                            sdram_bankmachine1_cmd_valid <= 1'd1;
                            if (sdram_bankmachine1_source_source_payload_we) begin
                                sdram_bankmachine1_req_wdata_ready <= sdram_bankmachine1_cmd_ready;
                                sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine1_req_rdata_valid <= sdram_bankmachine1_cmd_ready;
                                sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine1_cmd_ready & sdram_bankmachine1_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine2_sink_valid = sdram_bankmachine2_req_valid;
assign sdram_bankmachine2_req_ready = sdram_bankmachine2_sink_ready;
assign sdram_bankmachine2_sink_payload_we = sdram_bankmachine2_req_we;
assign sdram_bankmachine2_sink_payload_addr = sdram_bankmachine2_req_addr;
assign sdram_bankmachine2_sink_sink_valid = sdram_bankmachine2_source_valid;
assign sdram_bankmachine2_source_ready = sdram_bankmachine2_sink_sink_ready;
assign sdram_bankmachine2_sink_sink_first = sdram_bankmachine2_source_first;
assign sdram_bankmachine2_sink_sink_last = sdram_bankmachine2_source_last;
assign sdram_bankmachine2_sink_sink_payload_we = sdram_bankmachine2_source_payload_we;
assign sdram_bankmachine2_sink_sink_payload_addr = sdram_bankmachine2_source_payload_addr;
assign sdram_bankmachine2_source_source_ready = (sdram_bankmachine2_req_wdata_ready | sdram_bankmachine2_req_rdata_valid);
assign sdram_bankmachine2_req_lock = (sdram_bankmachine2_source_valid | sdram_bankmachine2_source_source_valid);
assign sdram_bankmachine2_row_hit = (sdram_bankmachine2_row == sdram_bankmachine2_source_source_payload_addr[19:7]);
assign sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    sdram_bankmachine2_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine2_row_col_n_addr_sel) begin
        sdram_bankmachine2_cmd_payload_a <= sdram_bankmachine2_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine2_cmd_payload_a <= ((sdram_bankmachine2_auto_precharge <<< 4'd10) | {sdram_bankmachine2_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine2_twtpcon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_cmd_payload_is_write);
assign sdram_bankmachine2_trccon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_row_open);
assign sdram_bankmachine2_trascon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_row_open);
always @(*) begin
    sdram_bankmachine2_auto_precharge <= 1'd0;
    if ((sdram_bankmachine2_source_valid & sdram_bankmachine2_source_source_valid)) begin
        if ((sdram_bankmachine2_source_payload_addr[19:7] != sdram_bankmachine2_source_source_payload_addr[19:7])) begin
            sdram_bankmachine2_auto_precharge <= (sdram_bankmachine2_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine2_syncfifo2_din = {sdram_bankmachine2_fifo_in_last, sdram_bankmachine2_fifo_in_first, sdram_bankmachine2_fifo_in_payload_addr, sdram_bankmachine2_fifo_in_payload_we};
assign {sdram_bankmachine2_fifo_out_last, sdram_bankmachine2_fifo_out_first, sdram_bankmachine2_fifo_out_payload_addr, sdram_bankmachine2_fifo_out_payload_we} = sdram_bankmachine2_syncfifo2_dout;
assign sdram_bankmachine2_sink_ready = sdram_bankmachine2_syncfifo2_writable;
assign sdram_bankmachine2_syncfifo2_we = sdram_bankmachine2_sink_valid;
assign sdram_bankmachine2_fifo_in_first = sdram_bankmachine2_sink_first;
assign sdram_bankmachine2_fifo_in_last = sdram_bankmachine2_sink_last;
assign sdram_bankmachine2_fifo_in_payload_we = sdram_bankmachine2_sink_payload_we;
assign sdram_bankmachine2_fifo_in_payload_addr = sdram_bankmachine2_sink_payload_addr;
assign sdram_bankmachine2_source_valid = sdram_bankmachine2_syncfifo2_readable;
assign sdram_bankmachine2_source_first = sdram_bankmachine2_fifo_out_first;
assign sdram_bankmachine2_source_last = sdram_bankmachine2_fifo_out_last;
assign sdram_bankmachine2_source_payload_we = sdram_bankmachine2_fifo_out_payload_we;
assign sdram_bankmachine2_source_payload_addr = sdram_bankmachine2_fifo_out_payload_addr;
assign sdram_bankmachine2_syncfifo2_re = sdram_bankmachine2_source_ready;
always @(*) begin
    sdram_bankmachine2_wrport_adr <= 3'd0;
    if (sdram_bankmachine2_replace) begin
        sdram_bankmachine2_wrport_adr <= (sdram_bankmachine2_produce - 1'd1);
    end else begin
        sdram_bankmachine2_wrport_adr <= sdram_bankmachine2_produce;
    end
end
assign sdram_bankmachine2_wrport_dat_w = sdram_bankmachine2_syncfifo2_din;
assign sdram_bankmachine2_wrport_we = (sdram_bankmachine2_syncfifo2_we & (sdram_bankmachine2_syncfifo2_writable | sdram_bankmachine2_replace));
assign sdram_bankmachine2_do_read = (sdram_bankmachine2_syncfifo2_readable & sdram_bankmachine2_syncfifo2_re);
assign sdram_bankmachine2_rdport_adr = sdram_bankmachine2_consume;
assign sdram_bankmachine2_syncfifo2_dout = sdram_bankmachine2_rdport_dat_r;
assign sdram_bankmachine2_syncfifo2_writable = (sdram_bankmachine2_level != 4'd8);
assign sdram_bankmachine2_syncfifo2_readable = (sdram_bankmachine2_level != 1'd0);
assign sdram_bankmachine2_pipe_valid_sink_ready = ((~sdram_bankmachine2_pipe_valid_source_valid) | sdram_bankmachine2_pipe_valid_source_ready);
assign sdram_bankmachine2_pipe_valid_sink_valid = sdram_bankmachine2_sink_sink_valid;
assign sdram_bankmachine2_sink_sink_ready = sdram_bankmachine2_pipe_valid_sink_ready;
assign sdram_bankmachine2_pipe_valid_sink_first = sdram_bankmachine2_sink_sink_first;
assign sdram_bankmachine2_pipe_valid_sink_last = sdram_bankmachine2_sink_sink_last;
assign sdram_bankmachine2_pipe_valid_sink_payload_we = sdram_bankmachine2_sink_sink_payload_we;
assign sdram_bankmachine2_pipe_valid_sink_payload_addr = sdram_bankmachine2_sink_sink_payload_addr;
assign sdram_bankmachine2_source_source_valid = sdram_bankmachine2_pipe_valid_source_valid;
assign sdram_bankmachine2_pipe_valid_source_ready = sdram_bankmachine2_source_source_ready;
assign sdram_bankmachine2_source_source_first = sdram_bankmachine2_pipe_valid_source_first;
assign sdram_bankmachine2_source_source_last = sdram_bankmachine2_pipe_valid_source_last;
assign sdram_bankmachine2_source_source_payload_we = sdram_bankmachine2_pipe_valid_source_payload_we;
assign sdram_bankmachine2_source_source_payload_addr = sdram_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine2_cmd_payload_cas <= 1'd0;
    basesoc_litedramcore_bankmachine2_next_state <= 3'd0;
    sdram_bankmachine2_cmd_payload_ras <= 1'd0;
    sdram_bankmachine2_cmd_payload_we <= 1'd0;
    sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
    sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine2_req_wdata_ready <= 1'd0;
    sdram_bankmachine2_req_rdata_valid <= 1'd0;
    sdram_bankmachine2_refresh_gnt <= 1'd0;
    sdram_bankmachine2_row_open <= 1'd0;
    sdram_bankmachine2_cmd_valid <= 1'd0;
    sdram_bankmachine2_row_close <= 1'd0;
    basesoc_litedramcore_bankmachine2_next_state <= basesoc_litedramcore_bankmachine2_state;
    case (basesoc_litedramcore_bankmachine2_state)
        1'd1: begin
            if ((sdram_bankmachine2_twtpcon_ready & sdram_bankmachine2_trascon_ready)) begin
                sdram_bankmachine2_cmd_valid <= 1'd1;
                if (sdram_bankmachine2_cmd_ready) begin
                    basesoc_litedramcore_bankmachine2_next_state <= 3'd5;
                end
                sdram_bankmachine2_cmd_payload_ras <= 1'd1;
                sdram_bankmachine2_cmd_payload_we <= 1'd1;
                sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine2_twtpcon_ready & sdram_bankmachine2_trascon_ready)) begin
                basesoc_litedramcore_bankmachine2_next_state <= 3'd5;
            end
            sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine2_trccon_ready) begin
                sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine2_row_open <= 1'd1;
                sdram_bankmachine2_cmd_valid <= 1'd1;
                sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine2_cmd_ready) begin
                    basesoc_litedramcore_bankmachine2_next_state <= 3'd6;
                end
                sdram_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine2_twtpcon_ready) begin
                sdram_bankmachine2_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine2_row_close <= 1'd1;
            sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine2_refresh_req)) begin
                basesoc_litedramcore_bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine2_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine2_refresh_req) begin
                basesoc_litedramcore_bankmachine2_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine2_source_source_valid) begin
                    if (sdram_bankmachine2_row_opened) begin
                        if (sdram_bankmachine2_row_hit) begin
                            sdram_bankmachine2_cmd_valid <= 1'd1;
                            if (sdram_bankmachine2_source_source_payload_we) begin
                                sdram_bankmachine2_req_wdata_ready <= sdram_bankmachine2_cmd_ready;
                                sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine2_req_rdata_valid <= sdram_bankmachine2_cmd_ready;
                                sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine2_cmd_ready & sdram_bankmachine2_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine3_sink_valid = sdram_bankmachine3_req_valid;
assign sdram_bankmachine3_req_ready = sdram_bankmachine3_sink_ready;
assign sdram_bankmachine3_sink_payload_we = sdram_bankmachine3_req_we;
assign sdram_bankmachine3_sink_payload_addr = sdram_bankmachine3_req_addr;
assign sdram_bankmachine3_sink_sink_valid = sdram_bankmachine3_source_valid;
assign sdram_bankmachine3_source_ready = sdram_bankmachine3_sink_sink_ready;
assign sdram_bankmachine3_sink_sink_first = sdram_bankmachine3_source_first;
assign sdram_bankmachine3_sink_sink_last = sdram_bankmachine3_source_last;
assign sdram_bankmachine3_sink_sink_payload_we = sdram_bankmachine3_source_payload_we;
assign sdram_bankmachine3_sink_sink_payload_addr = sdram_bankmachine3_source_payload_addr;
assign sdram_bankmachine3_source_source_ready = (sdram_bankmachine3_req_wdata_ready | sdram_bankmachine3_req_rdata_valid);
assign sdram_bankmachine3_req_lock = (sdram_bankmachine3_source_valid | sdram_bankmachine3_source_source_valid);
assign sdram_bankmachine3_row_hit = (sdram_bankmachine3_row == sdram_bankmachine3_source_source_payload_addr[19:7]);
assign sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    sdram_bankmachine3_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine3_row_col_n_addr_sel) begin
        sdram_bankmachine3_cmd_payload_a <= sdram_bankmachine3_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine3_cmd_payload_a <= ((sdram_bankmachine3_auto_precharge <<< 4'd10) | {sdram_bankmachine3_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine3_twtpcon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_cmd_payload_is_write);
assign sdram_bankmachine3_trccon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_row_open);
assign sdram_bankmachine3_trascon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_row_open);
always @(*) begin
    sdram_bankmachine3_auto_precharge <= 1'd0;
    if ((sdram_bankmachine3_source_valid & sdram_bankmachine3_source_source_valid)) begin
        if ((sdram_bankmachine3_source_payload_addr[19:7] != sdram_bankmachine3_source_source_payload_addr[19:7])) begin
            sdram_bankmachine3_auto_precharge <= (sdram_bankmachine3_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine3_syncfifo3_din = {sdram_bankmachine3_fifo_in_last, sdram_bankmachine3_fifo_in_first, sdram_bankmachine3_fifo_in_payload_addr, sdram_bankmachine3_fifo_in_payload_we};
assign {sdram_bankmachine3_fifo_out_last, sdram_bankmachine3_fifo_out_first, sdram_bankmachine3_fifo_out_payload_addr, sdram_bankmachine3_fifo_out_payload_we} = sdram_bankmachine3_syncfifo3_dout;
assign sdram_bankmachine3_sink_ready = sdram_bankmachine3_syncfifo3_writable;
assign sdram_bankmachine3_syncfifo3_we = sdram_bankmachine3_sink_valid;
assign sdram_bankmachine3_fifo_in_first = sdram_bankmachine3_sink_first;
assign sdram_bankmachine3_fifo_in_last = sdram_bankmachine3_sink_last;
assign sdram_bankmachine3_fifo_in_payload_we = sdram_bankmachine3_sink_payload_we;
assign sdram_bankmachine3_fifo_in_payload_addr = sdram_bankmachine3_sink_payload_addr;
assign sdram_bankmachine3_source_valid = sdram_bankmachine3_syncfifo3_readable;
assign sdram_bankmachine3_source_first = sdram_bankmachine3_fifo_out_first;
assign sdram_bankmachine3_source_last = sdram_bankmachine3_fifo_out_last;
assign sdram_bankmachine3_source_payload_we = sdram_bankmachine3_fifo_out_payload_we;
assign sdram_bankmachine3_source_payload_addr = sdram_bankmachine3_fifo_out_payload_addr;
assign sdram_bankmachine3_syncfifo3_re = sdram_bankmachine3_source_ready;
always @(*) begin
    sdram_bankmachine3_wrport_adr <= 3'd0;
    if (sdram_bankmachine3_replace) begin
        sdram_bankmachine3_wrport_adr <= (sdram_bankmachine3_produce - 1'd1);
    end else begin
        sdram_bankmachine3_wrport_adr <= sdram_bankmachine3_produce;
    end
end
assign sdram_bankmachine3_wrport_dat_w = sdram_bankmachine3_syncfifo3_din;
assign sdram_bankmachine3_wrport_we = (sdram_bankmachine3_syncfifo3_we & (sdram_bankmachine3_syncfifo3_writable | sdram_bankmachine3_replace));
assign sdram_bankmachine3_do_read = (sdram_bankmachine3_syncfifo3_readable & sdram_bankmachine3_syncfifo3_re);
assign sdram_bankmachine3_rdport_adr = sdram_bankmachine3_consume;
assign sdram_bankmachine3_syncfifo3_dout = sdram_bankmachine3_rdport_dat_r;
assign sdram_bankmachine3_syncfifo3_writable = (sdram_bankmachine3_level != 4'd8);
assign sdram_bankmachine3_syncfifo3_readable = (sdram_bankmachine3_level != 1'd0);
assign sdram_bankmachine3_pipe_valid_sink_ready = ((~sdram_bankmachine3_pipe_valid_source_valid) | sdram_bankmachine3_pipe_valid_source_ready);
assign sdram_bankmachine3_pipe_valid_sink_valid = sdram_bankmachine3_sink_sink_valid;
assign sdram_bankmachine3_sink_sink_ready = sdram_bankmachine3_pipe_valid_sink_ready;
assign sdram_bankmachine3_pipe_valid_sink_first = sdram_bankmachine3_sink_sink_first;
assign sdram_bankmachine3_pipe_valid_sink_last = sdram_bankmachine3_sink_sink_last;
assign sdram_bankmachine3_pipe_valid_sink_payload_we = sdram_bankmachine3_sink_sink_payload_we;
assign sdram_bankmachine3_pipe_valid_sink_payload_addr = sdram_bankmachine3_sink_sink_payload_addr;
assign sdram_bankmachine3_source_source_valid = sdram_bankmachine3_pipe_valid_source_valid;
assign sdram_bankmachine3_pipe_valid_source_ready = sdram_bankmachine3_source_source_ready;
assign sdram_bankmachine3_source_source_first = sdram_bankmachine3_pipe_valid_source_first;
assign sdram_bankmachine3_source_source_last = sdram_bankmachine3_pipe_valid_source_last;
assign sdram_bankmachine3_source_source_payload_we = sdram_bankmachine3_pipe_valid_source_payload_we;
assign sdram_bankmachine3_source_source_payload_addr = sdram_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine3_cmd_payload_ras <= 1'd0;
    sdram_bankmachine3_cmd_payload_we <= 1'd0;
    basesoc_litedramcore_bankmachine3_next_state <= 3'd0;
    sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
    sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine3_req_wdata_ready <= 1'd0;
    sdram_bankmachine3_req_rdata_valid <= 1'd0;
    sdram_bankmachine3_refresh_gnt <= 1'd0;
    sdram_bankmachine3_row_open <= 1'd0;
    sdram_bankmachine3_cmd_valid <= 1'd0;
    sdram_bankmachine3_row_close <= 1'd0;
    sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine3_cmd_payload_cas <= 1'd0;
    basesoc_litedramcore_bankmachine3_next_state <= basesoc_litedramcore_bankmachine3_state;
    case (basesoc_litedramcore_bankmachine3_state)
        1'd1: begin
            if ((sdram_bankmachine3_twtpcon_ready & sdram_bankmachine3_trascon_ready)) begin
                sdram_bankmachine3_cmd_valid <= 1'd1;
                if (sdram_bankmachine3_cmd_ready) begin
                    basesoc_litedramcore_bankmachine3_next_state <= 3'd5;
                end
                sdram_bankmachine3_cmd_payload_ras <= 1'd1;
                sdram_bankmachine3_cmd_payload_we <= 1'd1;
                sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine3_twtpcon_ready & sdram_bankmachine3_trascon_ready)) begin
                basesoc_litedramcore_bankmachine3_next_state <= 3'd5;
            end
            sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine3_trccon_ready) begin
                sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine3_row_open <= 1'd1;
                sdram_bankmachine3_cmd_valid <= 1'd1;
                sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine3_cmd_ready) begin
                    basesoc_litedramcore_bankmachine3_next_state <= 3'd6;
                end
                sdram_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine3_twtpcon_ready) begin
                sdram_bankmachine3_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine3_row_close <= 1'd1;
            sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine3_refresh_req)) begin
                basesoc_litedramcore_bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine3_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine3_refresh_req) begin
                basesoc_litedramcore_bankmachine3_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine3_source_source_valid) begin
                    if (sdram_bankmachine3_row_opened) begin
                        if (sdram_bankmachine3_row_hit) begin
                            sdram_bankmachine3_cmd_valid <= 1'd1;
                            if (sdram_bankmachine3_source_source_payload_we) begin
                                sdram_bankmachine3_req_wdata_ready <= sdram_bankmachine3_cmd_ready;
                                sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine3_req_rdata_valid <= sdram_bankmachine3_cmd_ready;
                                sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine3_cmd_ready & sdram_bankmachine3_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine4_sink_valid = sdram_bankmachine4_req_valid;
assign sdram_bankmachine4_req_ready = sdram_bankmachine4_sink_ready;
assign sdram_bankmachine4_sink_payload_we = sdram_bankmachine4_req_we;
assign sdram_bankmachine4_sink_payload_addr = sdram_bankmachine4_req_addr;
assign sdram_bankmachine4_sink_sink_valid = sdram_bankmachine4_source_valid;
assign sdram_bankmachine4_source_ready = sdram_bankmachine4_sink_sink_ready;
assign sdram_bankmachine4_sink_sink_first = sdram_bankmachine4_source_first;
assign sdram_bankmachine4_sink_sink_last = sdram_bankmachine4_source_last;
assign sdram_bankmachine4_sink_sink_payload_we = sdram_bankmachine4_source_payload_we;
assign sdram_bankmachine4_sink_sink_payload_addr = sdram_bankmachine4_source_payload_addr;
assign sdram_bankmachine4_source_source_ready = (sdram_bankmachine4_req_wdata_ready | sdram_bankmachine4_req_rdata_valid);
assign sdram_bankmachine4_req_lock = (sdram_bankmachine4_source_valid | sdram_bankmachine4_source_source_valid);
assign sdram_bankmachine4_row_hit = (sdram_bankmachine4_row == sdram_bankmachine4_source_source_payload_addr[19:7]);
assign sdram_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
    sdram_bankmachine4_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine4_row_col_n_addr_sel) begin
        sdram_bankmachine4_cmd_payload_a <= sdram_bankmachine4_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine4_cmd_payload_a <= ((sdram_bankmachine4_auto_precharge <<< 4'd10) | {sdram_bankmachine4_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine4_twtpcon_valid = ((sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_ready) & sdram_bankmachine4_cmd_payload_is_write);
assign sdram_bankmachine4_trccon_valid = ((sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_ready) & sdram_bankmachine4_row_open);
assign sdram_bankmachine4_trascon_valid = ((sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_ready) & sdram_bankmachine4_row_open);
always @(*) begin
    sdram_bankmachine4_auto_precharge <= 1'd0;
    if ((sdram_bankmachine4_source_valid & sdram_bankmachine4_source_source_valid)) begin
        if ((sdram_bankmachine4_source_payload_addr[19:7] != sdram_bankmachine4_source_source_payload_addr[19:7])) begin
            sdram_bankmachine4_auto_precharge <= (sdram_bankmachine4_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine4_syncfifo4_din = {sdram_bankmachine4_fifo_in_last, sdram_bankmachine4_fifo_in_first, sdram_bankmachine4_fifo_in_payload_addr, sdram_bankmachine4_fifo_in_payload_we};
assign {sdram_bankmachine4_fifo_out_last, sdram_bankmachine4_fifo_out_first, sdram_bankmachine4_fifo_out_payload_addr, sdram_bankmachine4_fifo_out_payload_we} = sdram_bankmachine4_syncfifo4_dout;
assign sdram_bankmachine4_sink_ready = sdram_bankmachine4_syncfifo4_writable;
assign sdram_bankmachine4_syncfifo4_we = sdram_bankmachine4_sink_valid;
assign sdram_bankmachine4_fifo_in_first = sdram_bankmachine4_sink_first;
assign sdram_bankmachine4_fifo_in_last = sdram_bankmachine4_sink_last;
assign sdram_bankmachine4_fifo_in_payload_we = sdram_bankmachine4_sink_payload_we;
assign sdram_bankmachine4_fifo_in_payload_addr = sdram_bankmachine4_sink_payload_addr;
assign sdram_bankmachine4_source_valid = sdram_bankmachine4_syncfifo4_readable;
assign sdram_bankmachine4_source_first = sdram_bankmachine4_fifo_out_first;
assign sdram_bankmachine4_source_last = sdram_bankmachine4_fifo_out_last;
assign sdram_bankmachine4_source_payload_we = sdram_bankmachine4_fifo_out_payload_we;
assign sdram_bankmachine4_source_payload_addr = sdram_bankmachine4_fifo_out_payload_addr;
assign sdram_bankmachine4_syncfifo4_re = sdram_bankmachine4_source_ready;
always @(*) begin
    sdram_bankmachine4_wrport_adr <= 3'd0;
    if (sdram_bankmachine4_replace) begin
        sdram_bankmachine4_wrport_adr <= (sdram_bankmachine4_produce - 1'd1);
    end else begin
        sdram_bankmachine4_wrport_adr <= sdram_bankmachine4_produce;
    end
end
assign sdram_bankmachine4_wrport_dat_w = sdram_bankmachine4_syncfifo4_din;
assign sdram_bankmachine4_wrport_we = (sdram_bankmachine4_syncfifo4_we & (sdram_bankmachine4_syncfifo4_writable | sdram_bankmachine4_replace));
assign sdram_bankmachine4_do_read = (sdram_bankmachine4_syncfifo4_readable & sdram_bankmachine4_syncfifo4_re);
assign sdram_bankmachine4_rdport_adr = sdram_bankmachine4_consume;
assign sdram_bankmachine4_syncfifo4_dout = sdram_bankmachine4_rdport_dat_r;
assign sdram_bankmachine4_syncfifo4_writable = (sdram_bankmachine4_level != 4'd8);
assign sdram_bankmachine4_syncfifo4_readable = (sdram_bankmachine4_level != 1'd0);
assign sdram_bankmachine4_pipe_valid_sink_ready = ((~sdram_bankmachine4_pipe_valid_source_valid) | sdram_bankmachine4_pipe_valid_source_ready);
assign sdram_bankmachine4_pipe_valid_sink_valid = sdram_bankmachine4_sink_sink_valid;
assign sdram_bankmachine4_sink_sink_ready = sdram_bankmachine4_pipe_valid_sink_ready;
assign sdram_bankmachine4_pipe_valid_sink_first = sdram_bankmachine4_sink_sink_first;
assign sdram_bankmachine4_pipe_valid_sink_last = sdram_bankmachine4_sink_sink_last;
assign sdram_bankmachine4_pipe_valid_sink_payload_we = sdram_bankmachine4_sink_sink_payload_we;
assign sdram_bankmachine4_pipe_valid_sink_payload_addr = sdram_bankmachine4_sink_sink_payload_addr;
assign sdram_bankmachine4_source_source_valid = sdram_bankmachine4_pipe_valid_source_valid;
assign sdram_bankmachine4_pipe_valid_source_ready = sdram_bankmachine4_source_source_ready;
assign sdram_bankmachine4_source_source_first = sdram_bankmachine4_pipe_valid_source_first;
assign sdram_bankmachine4_source_source_last = sdram_bankmachine4_pipe_valid_source_last;
assign sdram_bankmachine4_source_source_payload_we = sdram_bankmachine4_pipe_valid_source_payload_we;
assign sdram_bankmachine4_source_source_payload_addr = sdram_bankmachine4_pipe_valid_source_payload_addr;
always @(*) begin
    basesoc_litedramcore_bankmachine4_next_state <= 3'd0;
    sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine4_req_wdata_ready <= 1'd0;
    sdram_bankmachine4_req_rdata_valid <= 1'd0;
    sdram_bankmachine4_refresh_gnt <= 1'd0;
    sdram_bankmachine4_row_open <= 1'd0;
    sdram_bankmachine4_cmd_valid <= 1'd0;
    sdram_bankmachine4_row_close <= 1'd0;
    sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine4_cmd_payload_cas <= 1'd0;
    sdram_bankmachine4_cmd_payload_ras <= 1'd0;
    sdram_bankmachine4_cmd_payload_we <= 1'd0;
    sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
    basesoc_litedramcore_bankmachine4_next_state <= basesoc_litedramcore_bankmachine4_state;
    case (basesoc_litedramcore_bankmachine4_state)
        1'd1: begin
            if ((sdram_bankmachine4_twtpcon_ready & sdram_bankmachine4_trascon_ready)) begin
                sdram_bankmachine4_cmd_valid <= 1'd1;
                if (sdram_bankmachine4_cmd_ready) begin
                    basesoc_litedramcore_bankmachine4_next_state <= 3'd5;
                end
                sdram_bankmachine4_cmd_payload_ras <= 1'd1;
                sdram_bankmachine4_cmd_payload_we <= 1'd1;
                sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine4_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine4_twtpcon_ready & sdram_bankmachine4_trascon_ready)) begin
                basesoc_litedramcore_bankmachine4_next_state <= 3'd5;
            end
            sdram_bankmachine4_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine4_trccon_ready) begin
                sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine4_row_open <= 1'd1;
                sdram_bankmachine4_cmd_valid <= 1'd1;
                sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine4_cmd_ready) begin
                    basesoc_litedramcore_bankmachine4_next_state <= 3'd6;
                end
                sdram_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine4_twtpcon_ready) begin
                sdram_bankmachine4_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine4_row_close <= 1'd1;
            sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine4_refresh_req)) begin
                basesoc_litedramcore_bankmachine4_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine4_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine4_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine4_refresh_req) begin
                basesoc_litedramcore_bankmachine4_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine4_source_source_valid) begin
                    if (sdram_bankmachine4_row_opened) begin
                        if (sdram_bankmachine4_row_hit) begin
                            sdram_bankmachine4_cmd_valid <= 1'd1;
                            if (sdram_bankmachine4_source_source_payload_we) begin
                                sdram_bankmachine4_req_wdata_ready <= sdram_bankmachine4_cmd_ready;
                                sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine4_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine4_req_rdata_valid <= sdram_bankmachine4_cmd_ready;
                                sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine4_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine4_cmd_ready & sdram_bankmachine4_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine4_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine4_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine4_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine5_sink_valid = sdram_bankmachine5_req_valid;
assign sdram_bankmachine5_req_ready = sdram_bankmachine5_sink_ready;
assign sdram_bankmachine5_sink_payload_we = sdram_bankmachine5_req_we;
assign sdram_bankmachine5_sink_payload_addr = sdram_bankmachine5_req_addr;
assign sdram_bankmachine5_sink_sink_valid = sdram_bankmachine5_source_valid;
assign sdram_bankmachine5_source_ready = sdram_bankmachine5_sink_sink_ready;
assign sdram_bankmachine5_sink_sink_first = sdram_bankmachine5_source_first;
assign sdram_bankmachine5_sink_sink_last = sdram_bankmachine5_source_last;
assign sdram_bankmachine5_sink_sink_payload_we = sdram_bankmachine5_source_payload_we;
assign sdram_bankmachine5_sink_sink_payload_addr = sdram_bankmachine5_source_payload_addr;
assign sdram_bankmachine5_source_source_ready = (sdram_bankmachine5_req_wdata_ready | sdram_bankmachine5_req_rdata_valid);
assign sdram_bankmachine5_req_lock = (sdram_bankmachine5_source_valid | sdram_bankmachine5_source_source_valid);
assign sdram_bankmachine5_row_hit = (sdram_bankmachine5_row == sdram_bankmachine5_source_source_payload_addr[19:7]);
assign sdram_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
    sdram_bankmachine5_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine5_row_col_n_addr_sel) begin
        sdram_bankmachine5_cmd_payload_a <= sdram_bankmachine5_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine5_cmd_payload_a <= ((sdram_bankmachine5_auto_precharge <<< 4'd10) | {sdram_bankmachine5_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine5_twtpcon_valid = ((sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_ready) & sdram_bankmachine5_cmd_payload_is_write);
assign sdram_bankmachine5_trccon_valid = ((sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_ready) & sdram_bankmachine5_row_open);
assign sdram_bankmachine5_trascon_valid = ((sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_ready) & sdram_bankmachine5_row_open);
always @(*) begin
    sdram_bankmachine5_auto_precharge <= 1'd0;
    if ((sdram_bankmachine5_source_valid & sdram_bankmachine5_source_source_valid)) begin
        if ((sdram_bankmachine5_source_payload_addr[19:7] != sdram_bankmachine5_source_source_payload_addr[19:7])) begin
            sdram_bankmachine5_auto_precharge <= (sdram_bankmachine5_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine5_syncfifo5_din = {sdram_bankmachine5_fifo_in_last, sdram_bankmachine5_fifo_in_first, sdram_bankmachine5_fifo_in_payload_addr, sdram_bankmachine5_fifo_in_payload_we};
assign {sdram_bankmachine5_fifo_out_last, sdram_bankmachine5_fifo_out_first, sdram_bankmachine5_fifo_out_payload_addr, sdram_bankmachine5_fifo_out_payload_we} = sdram_bankmachine5_syncfifo5_dout;
assign sdram_bankmachine5_sink_ready = sdram_bankmachine5_syncfifo5_writable;
assign sdram_bankmachine5_syncfifo5_we = sdram_bankmachine5_sink_valid;
assign sdram_bankmachine5_fifo_in_first = sdram_bankmachine5_sink_first;
assign sdram_bankmachine5_fifo_in_last = sdram_bankmachine5_sink_last;
assign sdram_bankmachine5_fifo_in_payload_we = sdram_bankmachine5_sink_payload_we;
assign sdram_bankmachine5_fifo_in_payload_addr = sdram_bankmachine5_sink_payload_addr;
assign sdram_bankmachine5_source_valid = sdram_bankmachine5_syncfifo5_readable;
assign sdram_bankmachine5_source_first = sdram_bankmachine5_fifo_out_first;
assign sdram_bankmachine5_source_last = sdram_bankmachine5_fifo_out_last;
assign sdram_bankmachine5_source_payload_we = sdram_bankmachine5_fifo_out_payload_we;
assign sdram_bankmachine5_source_payload_addr = sdram_bankmachine5_fifo_out_payload_addr;
assign sdram_bankmachine5_syncfifo5_re = sdram_bankmachine5_source_ready;
always @(*) begin
    sdram_bankmachine5_wrport_adr <= 3'd0;
    if (sdram_bankmachine5_replace) begin
        sdram_bankmachine5_wrport_adr <= (sdram_bankmachine5_produce - 1'd1);
    end else begin
        sdram_bankmachine5_wrport_adr <= sdram_bankmachine5_produce;
    end
end
assign sdram_bankmachine5_wrport_dat_w = sdram_bankmachine5_syncfifo5_din;
assign sdram_bankmachine5_wrport_we = (sdram_bankmachine5_syncfifo5_we & (sdram_bankmachine5_syncfifo5_writable | sdram_bankmachine5_replace));
assign sdram_bankmachine5_do_read = (sdram_bankmachine5_syncfifo5_readable & sdram_bankmachine5_syncfifo5_re);
assign sdram_bankmachine5_rdport_adr = sdram_bankmachine5_consume;
assign sdram_bankmachine5_syncfifo5_dout = sdram_bankmachine5_rdport_dat_r;
assign sdram_bankmachine5_syncfifo5_writable = (sdram_bankmachine5_level != 4'd8);
assign sdram_bankmachine5_syncfifo5_readable = (sdram_bankmachine5_level != 1'd0);
assign sdram_bankmachine5_pipe_valid_sink_ready = ((~sdram_bankmachine5_pipe_valid_source_valid) | sdram_bankmachine5_pipe_valid_source_ready);
assign sdram_bankmachine5_pipe_valid_sink_valid = sdram_bankmachine5_sink_sink_valid;
assign sdram_bankmachine5_sink_sink_ready = sdram_bankmachine5_pipe_valid_sink_ready;
assign sdram_bankmachine5_pipe_valid_sink_first = sdram_bankmachine5_sink_sink_first;
assign sdram_bankmachine5_pipe_valid_sink_last = sdram_bankmachine5_sink_sink_last;
assign sdram_bankmachine5_pipe_valid_sink_payload_we = sdram_bankmachine5_sink_sink_payload_we;
assign sdram_bankmachine5_pipe_valid_sink_payload_addr = sdram_bankmachine5_sink_sink_payload_addr;
assign sdram_bankmachine5_source_source_valid = sdram_bankmachine5_pipe_valid_source_valid;
assign sdram_bankmachine5_pipe_valid_source_ready = sdram_bankmachine5_source_source_ready;
assign sdram_bankmachine5_source_source_first = sdram_bankmachine5_pipe_valid_source_first;
assign sdram_bankmachine5_source_source_last = sdram_bankmachine5_pipe_valid_source_last;
assign sdram_bankmachine5_source_source_payload_we = sdram_bankmachine5_pipe_valid_source_payload_we;
assign sdram_bankmachine5_source_source_payload_addr = sdram_bankmachine5_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine5_refresh_gnt <= 1'd0;
    sdram_bankmachine5_row_open <= 1'd0;
    sdram_bankmachine5_cmd_valid <= 1'd0;
    sdram_bankmachine5_req_rdata_valid <= 1'd0;
    sdram_bankmachine5_row_close <= 1'd0;
    sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine5_cmd_payload_cas <= 1'd0;
    sdram_bankmachine5_cmd_payload_ras <= 1'd0;
    sdram_bankmachine5_cmd_payload_we <= 1'd0;
    sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
    sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine5_req_wdata_ready <= 1'd0;
    basesoc_litedramcore_bankmachine5_next_state <= 3'd0;
    basesoc_litedramcore_bankmachine5_next_state <= basesoc_litedramcore_bankmachine5_state;
    case (basesoc_litedramcore_bankmachine5_state)
        1'd1: begin
            if ((sdram_bankmachine5_twtpcon_ready & sdram_bankmachine5_trascon_ready)) begin
                sdram_bankmachine5_cmd_valid <= 1'd1;
                if (sdram_bankmachine5_cmd_ready) begin
                    basesoc_litedramcore_bankmachine5_next_state <= 3'd5;
                end
                sdram_bankmachine5_cmd_payload_ras <= 1'd1;
                sdram_bankmachine5_cmd_payload_we <= 1'd1;
                sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine5_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine5_twtpcon_ready & sdram_bankmachine5_trascon_ready)) begin
                basesoc_litedramcore_bankmachine5_next_state <= 3'd5;
            end
            sdram_bankmachine5_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine5_trccon_ready) begin
                sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine5_row_open <= 1'd1;
                sdram_bankmachine5_cmd_valid <= 1'd1;
                sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine5_cmd_ready) begin
                    basesoc_litedramcore_bankmachine5_next_state <= 3'd6;
                end
                sdram_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine5_twtpcon_ready) begin
                sdram_bankmachine5_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine5_row_close <= 1'd1;
            sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine5_refresh_req)) begin
                basesoc_litedramcore_bankmachine5_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine5_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine5_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine5_refresh_req) begin
                basesoc_litedramcore_bankmachine5_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine5_source_source_valid) begin
                    if (sdram_bankmachine5_row_opened) begin
                        if (sdram_bankmachine5_row_hit) begin
                            sdram_bankmachine5_cmd_valid <= 1'd1;
                            if (sdram_bankmachine5_source_source_payload_we) begin
                                sdram_bankmachine5_req_wdata_ready <= sdram_bankmachine5_cmd_ready;
                                sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine5_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine5_req_rdata_valid <= sdram_bankmachine5_cmd_ready;
                                sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine5_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine5_cmd_ready & sdram_bankmachine5_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine5_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine5_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine5_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine6_sink_valid = sdram_bankmachine6_req_valid;
assign sdram_bankmachine6_req_ready = sdram_bankmachine6_sink_ready;
assign sdram_bankmachine6_sink_payload_we = sdram_bankmachine6_req_we;
assign sdram_bankmachine6_sink_payload_addr = sdram_bankmachine6_req_addr;
assign sdram_bankmachine6_sink_sink_valid = sdram_bankmachine6_source_valid;
assign sdram_bankmachine6_source_ready = sdram_bankmachine6_sink_sink_ready;
assign sdram_bankmachine6_sink_sink_first = sdram_bankmachine6_source_first;
assign sdram_bankmachine6_sink_sink_last = sdram_bankmachine6_source_last;
assign sdram_bankmachine6_sink_sink_payload_we = sdram_bankmachine6_source_payload_we;
assign sdram_bankmachine6_sink_sink_payload_addr = sdram_bankmachine6_source_payload_addr;
assign sdram_bankmachine6_source_source_ready = (sdram_bankmachine6_req_wdata_ready | sdram_bankmachine6_req_rdata_valid);
assign sdram_bankmachine6_req_lock = (sdram_bankmachine6_source_valid | sdram_bankmachine6_source_source_valid);
assign sdram_bankmachine6_row_hit = (sdram_bankmachine6_row == sdram_bankmachine6_source_source_payload_addr[19:7]);
assign sdram_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
    sdram_bankmachine6_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine6_row_col_n_addr_sel) begin
        sdram_bankmachine6_cmd_payload_a <= sdram_bankmachine6_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine6_cmd_payload_a <= ((sdram_bankmachine6_auto_precharge <<< 4'd10) | {sdram_bankmachine6_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine6_twtpcon_valid = ((sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_ready) & sdram_bankmachine6_cmd_payload_is_write);
assign sdram_bankmachine6_trccon_valid = ((sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_ready) & sdram_bankmachine6_row_open);
assign sdram_bankmachine6_trascon_valid = ((sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_ready) & sdram_bankmachine6_row_open);
always @(*) begin
    sdram_bankmachine6_auto_precharge <= 1'd0;
    if ((sdram_bankmachine6_source_valid & sdram_bankmachine6_source_source_valid)) begin
        if ((sdram_bankmachine6_source_payload_addr[19:7] != sdram_bankmachine6_source_source_payload_addr[19:7])) begin
            sdram_bankmachine6_auto_precharge <= (sdram_bankmachine6_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine6_syncfifo6_din = {sdram_bankmachine6_fifo_in_last, sdram_bankmachine6_fifo_in_first, sdram_bankmachine6_fifo_in_payload_addr, sdram_bankmachine6_fifo_in_payload_we};
assign {sdram_bankmachine6_fifo_out_last, sdram_bankmachine6_fifo_out_first, sdram_bankmachine6_fifo_out_payload_addr, sdram_bankmachine6_fifo_out_payload_we} = sdram_bankmachine6_syncfifo6_dout;
assign sdram_bankmachine6_sink_ready = sdram_bankmachine6_syncfifo6_writable;
assign sdram_bankmachine6_syncfifo6_we = sdram_bankmachine6_sink_valid;
assign sdram_bankmachine6_fifo_in_first = sdram_bankmachine6_sink_first;
assign sdram_bankmachine6_fifo_in_last = sdram_bankmachine6_sink_last;
assign sdram_bankmachine6_fifo_in_payload_we = sdram_bankmachine6_sink_payload_we;
assign sdram_bankmachine6_fifo_in_payload_addr = sdram_bankmachine6_sink_payload_addr;
assign sdram_bankmachine6_source_valid = sdram_bankmachine6_syncfifo6_readable;
assign sdram_bankmachine6_source_first = sdram_bankmachine6_fifo_out_first;
assign sdram_bankmachine6_source_last = sdram_bankmachine6_fifo_out_last;
assign sdram_bankmachine6_source_payload_we = sdram_bankmachine6_fifo_out_payload_we;
assign sdram_bankmachine6_source_payload_addr = sdram_bankmachine6_fifo_out_payload_addr;
assign sdram_bankmachine6_syncfifo6_re = sdram_bankmachine6_source_ready;
always @(*) begin
    sdram_bankmachine6_wrport_adr <= 3'd0;
    if (sdram_bankmachine6_replace) begin
        sdram_bankmachine6_wrport_adr <= (sdram_bankmachine6_produce - 1'd1);
    end else begin
        sdram_bankmachine6_wrport_adr <= sdram_bankmachine6_produce;
    end
end
assign sdram_bankmachine6_wrport_dat_w = sdram_bankmachine6_syncfifo6_din;
assign sdram_bankmachine6_wrport_we = (sdram_bankmachine6_syncfifo6_we & (sdram_bankmachine6_syncfifo6_writable | sdram_bankmachine6_replace));
assign sdram_bankmachine6_do_read = (sdram_bankmachine6_syncfifo6_readable & sdram_bankmachine6_syncfifo6_re);
assign sdram_bankmachine6_rdport_adr = sdram_bankmachine6_consume;
assign sdram_bankmachine6_syncfifo6_dout = sdram_bankmachine6_rdport_dat_r;
assign sdram_bankmachine6_syncfifo6_writable = (sdram_bankmachine6_level != 4'd8);
assign sdram_bankmachine6_syncfifo6_readable = (sdram_bankmachine6_level != 1'd0);
assign sdram_bankmachine6_pipe_valid_sink_ready = ((~sdram_bankmachine6_pipe_valid_source_valid) | sdram_bankmachine6_pipe_valid_source_ready);
assign sdram_bankmachine6_pipe_valid_sink_valid = sdram_bankmachine6_sink_sink_valid;
assign sdram_bankmachine6_sink_sink_ready = sdram_bankmachine6_pipe_valid_sink_ready;
assign sdram_bankmachine6_pipe_valid_sink_first = sdram_bankmachine6_sink_sink_first;
assign sdram_bankmachine6_pipe_valid_sink_last = sdram_bankmachine6_sink_sink_last;
assign sdram_bankmachine6_pipe_valid_sink_payload_we = sdram_bankmachine6_sink_sink_payload_we;
assign sdram_bankmachine6_pipe_valid_sink_payload_addr = sdram_bankmachine6_sink_sink_payload_addr;
assign sdram_bankmachine6_source_source_valid = sdram_bankmachine6_pipe_valid_source_valid;
assign sdram_bankmachine6_pipe_valid_source_ready = sdram_bankmachine6_source_source_ready;
assign sdram_bankmachine6_source_source_first = sdram_bankmachine6_pipe_valid_source_first;
assign sdram_bankmachine6_source_source_last = sdram_bankmachine6_pipe_valid_source_last;
assign sdram_bankmachine6_source_source_payload_we = sdram_bankmachine6_pipe_valid_source_payload_we;
assign sdram_bankmachine6_source_source_payload_addr = sdram_bankmachine6_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine6_cmd_payload_cas <= 1'd0;
    sdram_bankmachine6_cmd_payload_ras <= 1'd0;
    sdram_bankmachine6_cmd_payload_we <= 1'd0;
    sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
    sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine6_req_wdata_ready <= 1'd0;
    sdram_bankmachine6_req_rdata_valid <= 1'd0;
    basesoc_litedramcore_bankmachine6_next_state <= 3'd0;
    sdram_bankmachine6_row_open <= 1'd0;
    sdram_bankmachine6_cmd_valid <= 1'd0;
    sdram_bankmachine6_row_close <= 1'd0;
    sdram_bankmachine6_refresh_gnt <= 1'd0;
    basesoc_litedramcore_bankmachine6_next_state <= basesoc_litedramcore_bankmachine6_state;
    case (basesoc_litedramcore_bankmachine6_state)
        1'd1: begin
            if ((sdram_bankmachine6_twtpcon_ready & sdram_bankmachine6_trascon_ready)) begin
                sdram_bankmachine6_cmd_valid <= 1'd1;
                if (sdram_bankmachine6_cmd_ready) begin
                    basesoc_litedramcore_bankmachine6_next_state <= 3'd5;
                end
                sdram_bankmachine6_cmd_payload_ras <= 1'd1;
                sdram_bankmachine6_cmd_payload_we <= 1'd1;
                sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine6_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine6_twtpcon_ready & sdram_bankmachine6_trascon_ready)) begin
                basesoc_litedramcore_bankmachine6_next_state <= 3'd5;
            end
            sdram_bankmachine6_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine6_trccon_ready) begin
                sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine6_row_open <= 1'd1;
                sdram_bankmachine6_cmd_valid <= 1'd1;
                sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine6_cmd_ready) begin
                    basesoc_litedramcore_bankmachine6_next_state <= 3'd6;
                end
                sdram_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine6_twtpcon_ready) begin
                sdram_bankmachine6_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine6_row_close <= 1'd1;
            sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine6_refresh_req)) begin
                basesoc_litedramcore_bankmachine6_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine6_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine6_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine6_refresh_req) begin
                basesoc_litedramcore_bankmachine6_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine6_source_source_valid) begin
                    if (sdram_bankmachine6_row_opened) begin
                        if (sdram_bankmachine6_row_hit) begin
                            sdram_bankmachine6_cmd_valid <= 1'd1;
                            if (sdram_bankmachine6_source_source_payload_we) begin
                                sdram_bankmachine6_req_wdata_ready <= sdram_bankmachine6_cmd_ready;
                                sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine6_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine6_req_rdata_valid <= sdram_bankmachine6_cmd_ready;
                                sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine6_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine6_cmd_ready & sdram_bankmachine6_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine6_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine6_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine6_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_bankmachine7_sink_valid = sdram_bankmachine7_req_valid;
assign sdram_bankmachine7_req_ready = sdram_bankmachine7_sink_ready;
assign sdram_bankmachine7_sink_payload_we = sdram_bankmachine7_req_we;
assign sdram_bankmachine7_sink_payload_addr = sdram_bankmachine7_req_addr;
assign sdram_bankmachine7_sink_sink_valid = sdram_bankmachine7_source_valid;
assign sdram_bankmachine7_source_ready = sdram_bankmachine7_sink_sink_ready;
assign sdram_bankmachine7_sink_sink_first = sdram_bankmachine7_source_first;
assign sdram_bankmachine7_sink_sink_last = sdram_bankmachine7_source_last;
assign sdram_bankmachine7_sink_sink_payload_we = sdram_bankmachine7_source_payload_we;
assign sdram_bankmachine7_sink_sink_payload_addr = sdram_bankmachine7_source_payload_addr;
assign sdram_bankmachine7_source_source_ready = (sdram_bankmachine7_req_wdata_ready | sdram_bankmachine7_req_rdata_valid);
assign sdram_bankmachine7_req_lock = (sdram_bankmachine7_source_valid | sdram_bankmachine7_source_source_valid);
assign sdram_bankmachine7_row_hit = (sdram_bankmachine7_row == sdram_bankmachine7_source_source_payload_addr[19:7]);
assign sdram_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
    sdram_bankmachine7_cmd_payload_a <= 13'd0;
    if (sdram_bankmachine7_row_col_n_addr_sel) begin
        sdram_bankmachine7_cmd_payload_a <= sdram_bankmachine7_source_source_payload_addr[19:7];
    end else begin
        sdram_bankmachine7_cmd_payload_a <= ((sdram_bankmachine7_auto_precharge <<< 4'd10) | {sdram_bankmachine7_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign sdram_bankmachine7_twtpcon_valid = ((sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_ready) & sdram_bankmachine7_cmd_payload_is_write);
assign sdram_bankmachine7_trccon_valid = ((sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_ready) & sdram_bankmachine7_row_open);
assign sdram_bankmachine7_trascon_valid = ((sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_ready) & sdram_bankmachine7_row_open);
always @(*) begin
    sdram_bankmachine7_auto_precharge <= 1'd0;
    if ((sdram_bankmachine7_source_valid & sdram_bankmachine7_source_source_valid)) begin
        if ((sdram_bankmachine7_source_payload_addr[19:7] != sdram_bankmachine7_source_source_payload_addr[19:7])) begin
            sdram_bankmachine7_auto_precharge <= (sdram_bankmachine7_row_close == 1'd0);
        end
    end
end
assign sdram_bankmachine7_syncfifo7_din = {sdram_bankmachine7_fifo_in_last, sdram_bankmachine7_fifo_in_first, sdram_bankmachine7_fifo_in_payload_addr, sdram_bankmachine7_fifo_in_payload_we};
assign {sdram_bankmachine7_fifo_out_last, sdram_bankmachine7_fifo_out_first, sdram_bankmachine7_fifo_out_payload_addr, sdram_bankmachine7_fifo_out_payload_we} = sdram_bankmachine7_syncfifo7_dout;
assign sdram_bankmachine7_sink_ready = sdram_bankmachine7_syncfifo7_writable;
assign sdram_bankmachine7_syncfifo7_we = sdram_bankmachine7_sink_valid;
assign sdram_bankmachine7_fifo_in_first = sdram_bankmachine7_sink_first;
assign sdram_bankmachine7_fifo_in_last = sdram_bankmachine7_sink_last;
assign sdram_bankmachine7_fifo_in_payload_we = sdram_bankmachine7_sink_payload_we;
assign sdram_bankmachine7_fifo_in_payload_addr = sdram_bankmachine7_sink_payload_addr;
assign sdram_bankmachine7_source_valid = sdram_bankmachine7_syncfifo7_readable;
assign sdram_bankmachine7_source_first = sdram_bankmachine7_fifo_out_first;
assign sdram_bankmachine7_source_last = sdram_bankmachine7_fifo_out_last;
assign sdram_bankmachine7_source_payload_we = sdram_bankmachine7_fifo_out_payload_we;
assign sdram_bankmachine7_source_payload_addr = sdram_bankmachine7_fifo_out_payload_addr;
assign sdram_bankmachine7_syncfifo7_re = sdram_bankmachine7_source_ready;
always @(*) begin
    sdram_bankmachine7_wrport_adr <= 3'd0;
    if (sdram_bankmachine7_replace) begin
        sdram_bankmachine7_wrport_adr <= (sdram_bankmachine7_produce - 1'd1);
    end else begin
        sdram_bankmachine7_wrport_adr <= sdram_bankmachine7_produce;
    end
end
assign sdram_bankmachine7_wrport_dat_w = sdram_bankmachine7_syncfifo7_din;
assign sdram_bankmachine7_wrport_we = (sdram_bankmachine7_syncfifo7_we & (sdram_bankmachine7_syncfifo7_writable | sdram_bankmachine7_replace));
assign sdram_bankmachine7_do_read = (sdram_bankmachine7_syncfifo7_readable & sdram_bankmachine7_syncfifo7_re);
assign sdram_bankmachine7_rdport_adr = sdram_bankmachine7_consume;
assign sdram_bankmachine7_syncfifo7_dout = sdram_bankmachine7_rdport_dat_r;
assign sdram_bankmachine7_syncfifo7_writable = (sdram_bankmachine7_level != 4'd8);
assign sdram_bankmachine7_syncfifo7_readable = (sdram_bankmachine7_level != 1'd0);
assign sdram_bankmachine7_pipe_valid_sink_ready = ((~sdram_bankmachine7_pipe_valid_source_valid) | sdram_bankmachine7_pipe_valid_source_ready);
assign sdram_bankmachine7_pipe_valid_sink_valid = sdram_bankmachine7_sink_sink_valid;
assign sdram_bankmachine7_sink_sink_ready = sdram_bankmachine7_pipe_valid_sink_ready;
assign sdram_bankmachine7_pipe_valid_sink_first = sdram_bankmachine7_sink_sink_first;
assign sdram_bankmachine7_pipe_valid_sink_last = sdram_bankmachine7_sink_sink_last;
assign sdram_bankmachine7_pipe_valid_sink_payload_we = sdram_bankmachine7_sink_sink_payload_we;
assign sdram_bankmachine7_pipe_valid_sink_payload_addr = sdram_bankmachine7_sink_sink_payload_addr;
assign sdram_bankmachine7_source_source_valid = sdram_bankmachine7_pipe_valid_source_valid;
assign sdram_bankmachine7_pipe_valid_source_ready = sdram_bankmachine7_source_source_ready;
assign sdram_bankmachine7_source_source_first = sdram_bankmachine7_pipe_valid_source_first;
assign sdram_bankmachine7_source_source_last = sdram_bankmachine7_pipe_valid_source_last;
assign sdram_bankmachine7_source_source_payload_we = sdram_bankmachine7_pipe_valid_source_payload_we;
assign sdram_bankmachine7_source_source_payload_addr = sdram_bankmachine7_pipe_valid_source_payload_addr;
always @(*) begin
    sdram_bankmachine7_cmd_payload_ras <= 1'd0;
    sdram_bankmachine7_cmd_payload_we <= 1'd0;
    sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
    sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
    sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
    sdram_bankmachine7_req_wdata_ready <= 1'd0;
    sdram_bankmachine7_req_rdata_valid <= 1'd0;
    sdram_bankmachine7_refresh_gnt <= 1'd0;
    sdram_bankmachine7_row_open <= 1'd0;
    sdram_bankmachine7_cmd_valid <= 1'd0;
    sdram_bankmachine7_row_close <= 1'd0;
    basesoc_litedramcore_bankmachine7_next_state <= 3'd0;
    sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
    sdram_bankmachine7_cmd_payload_cas <= 1'd0;
    basesoc_litedramcore_bankmachine7_next_state <= basesoc_litedramcore_bankmachine7_state;
    case (basesoc_litedramcore_bankmachine7_state)
        1'd1: begin
            if ((sdram_bankmachine7_twtpcon_ready & sdram_bankmachine7_trascon_ready)) begin
                sdram_bankmachine7_cmd_valid <= 1'd1;
                if (sdram_bankmachine7_cmd_ready) begin
                    basesoc_litedramcore_bankmachine7_next_state <= 3'd5;
                end
                sdram_bankmachine7_cmd_payload_ras <= 1'd1;
                sdram_bankmachine7_cmd_payload_we <= 1'd1;
                sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
            sdram_bankmachine7_row_close <= 1'd1;
        end
        2'd2: begin
            if ((sdram_bankmachine7_twtpcon_ready & sdram_bankmachine7_trascon_ready)) begin
                basesoc_litedramcore_bankmachine7_next_state <= 3'd5;
            end
            sdram_bankmachine7_row_close <= 1'd1;
        end
        2'd3: begin
            if (sdram_bankmachine7_trccon_ready) begin
                sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
                sdram_bankmachine7_row_open <= 1'd1;
                sdram_bankmachine7_cmd_valid <= 1'd1;
                sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
                if (sdram_bankmachine7_cmd_ready) begin
                    basesoc_litedramcore_bankmachine7_next_state <= 3'd6;
                end
                sdram_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (sdram_bankmachine7_twtpcon_ready) begin
                sdram_bankmachine7_refresh_gnt <= 1'd1;
            end
            sdram_bankmachine7_row_close <= 1'd1;
            sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            if ((~sdram_bankmachine7_refresh_req)) begin
                basesoc_litedramcore_bankmachine7_next_state <= 1'd0;
            end
        end
        3'd5: begin
            basesoc_litedramcore_bankmachine7_next_state <= 2'd3;
        end
        3'd6: begin
            basesoc_litedramcore_bankmachine7_next_state <= 1'd0;
        end
        default: begin
            if (sdram_bankmachine7_refresh_req) begin
                basesoc_litedramcore_bankmachine7_next_state <= 3'd4;
            end else begin
                if (sdram_bankmachine7_source_source_valid) begin
                    if (sdram_bankmachine7_row_opened) begin
                        if (sdram_bankmachine7_row_hit) begin
                            sdram_bankmachine7_cmd_valid <= 1'd1;
                            if (sdram_bankmachine7_source_source_payload_we) begin
                                sdram_bankmachine7_req_wdata_ready <= sdram_bankmachine7_cmd_ready;
                                sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
                                sdram_bankmachine7_cmd_payload_we <= 1'd1;
                            end else begin
                                sdram_bankmachine7_req_rdata_valid <= sdram_bankmachine7_cmd_ready;
                                sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
                            end
                            sdram_bankmachine7_cmd_payload_cas <= 1'd1;
                            if ((sdram_bankmachine7_cmd_ready & sdram_bankmachine7_auto_precharge)) begin
                                basesoc_litedramcore_bankmachine7_next_state <= 2'd2;
                            end
                        end else begin
                            basesoc_litedramcore_bankmachine7_next_state <= 1'd1;
                        end
                    end else begin
                        basesoc_litedramcore_bankmachine7_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign sdram_trrdcon_valid = ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & ((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we)));
assign sdram_tfawcon_valid = ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & ((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we)));
assign sdram_ras_allowed = (sdram_trrdcon_ready & sdram_tfawcon_ready);
assign sdram_tccdcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_cmd_payload_is_write | sdram_choose_req_cmd_payload_is_read));
assign sdram_cas_allowed = sdram_tccdcon_ready;
assign sdram_twtrcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
assign sdram_read_available = ((((((((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_payload_is_read) | (sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_payload_is_read)) | (sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_payload_is_read)) | (sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_payload_is_read)) | (sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_payload_is_read)) | (sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_payload_is_read)) | (sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_payload_is_read)) | (sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_payload_is_read));
assign sdram_write_available = ((((((((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_payload_is_write) | (sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_payload_is_write)) | (sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_payload_is_write)) | (sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_payload_is_write)) | (sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_payload_is_write)) | (sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_payload_is_write)) | (sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_payload_is_write)) | (sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_payload_is_write));
assign sdram_max_time0 = (sdram_time0 == 1'd0);
assign sdram_max_time1 = (sdram_time1 == 1'd0);
assign sdram_bankmachine0_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine1_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine2_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine3_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine4_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine5_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine6_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine7_refresh_req = sdram_cmd_valid;
assign sdram_go_to_refresh = (((((((sdram_bankmachine0_refresh_gnt & sdram_bankmachine1_refresh_gnt) & sdram_bankmachine2_refresh_gnt) & sdram_bankmachine3_refresh_gnt) & sdram_bankmachine4_refresh_gnt) & sdram_bankmachine5_refresh_gnt) & sdram_bankmachine6_refresh_gnt) & sdram_bankmachine7_refresh_gnt);
assign sdram_interface_rdata = {sdram_dfi_p1_rddata, sdram_dfi_p0_rddata};
assign {sdram_dfi_p1_wrdata, sdram_dfi_p0_wrdata} = sdram_interface_wdata;
assign {sdram_dfi_p1_wrdata_mask, sdram_dfi_p0_wrdata_mask} = (~sdram_interface_wdata_we);
always @(*) begin
    sdram_choose_cmd_valids <= 8'd0;
    sdram_choose_cmd_valids[0] <= (sdram_bankmachine0_cmd_valid & (((sdram_bankmachine0_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine0_cmd_payload_ras & (~sdram_bankmachine0_cmd_payload_cas)) & (~sdram_bankmachine0_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine0_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine0_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[1] <= (sdram_bankmachine1_cmd_valid & (((sdram_bankmachine1_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine1_cmd_payload_ras & (~sdram_bankmachine1_cmd_payload_cas)) & (~sdram_bankmachine1_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine1_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine1_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[2] <= (sdram_bankmachine2_cmd_valid & (((sdram_bankmachine2_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine2_cmd_payload_ras & (~sdram_bankmachine2_cmd_payload_cas)) & (~sdram_bankmachine2_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine2_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine2_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[3] <= (sdram_bankmachine3_cmd_valid & (((sdram_bankmachine3_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine3_cmd_payload_ras & (~sdram_bankmachine3_cmd_payload_cas)) & (~sdram_bankmachine3_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine3_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine3_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[4] <= (sdram_bankmachine4_cmd_valid & (((sdram_bankmachine4_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine4_cmd_payload_ras & (~sdram_bankmachine4_cmd_payload_cas)) & (~sdram_bankmachine4_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine4_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine4_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[5] <= (sdram_bankmachine5_cmd_valid & (((sdram_bankmachine5_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine5_cmd_payload_ras & (~sdram_bankmachine5_cmd_payload_cas)) & (~sdram_bankmachine5_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine5_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine5_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[6] <= (sdram_bankmachine6_cmd_valid & (((sdram_bankmachine6_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine6_cmd_payload_ras & (~sdram_bankmachine6_cmd_payload_cas)) & (~sdram_bankmachine6_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine6_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine6_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
    sdram_choose_cmd_valids[7] <= (sdram_bankmachine7_cmd_valid & (((sdram_bankmachine7_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine7_cmd_payload_ras & (~sdram_bankmachine7_cmd_payload_cas)) & (~sdram_bankmachine7_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine7_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine7_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
end
assign sdram_choose_cmd_request = sdram_choose_cmd_valids;
assign sdram_choose_cmd_cmd_valid = rhs_array_muxed8;
assign sdram_choose_cmd_cmd_payload_a = rhs_array_muxed9;
assign sdram_choose_cmd_cmd_payload_ba = rhs_array_muxed10;
assign sdram_choose_cmd_cmd_payload_is_read = rhs_array_muxed11;
assign sdram_choose_cmd_cmd_payload_is_write = rhs_array_muxed12;
assign sdram_choose_cmd_cmd_payload_is_cmd = rhs_array_muxed13;
always @(*) begin
    sdram_choose_cmd_cmd_payload_cas <= 1'd0;
    if (sdram_choose_cmd_cmd_valid) begin
        sdram_choose_cmd_cmd_payload_cas <= t_array_muxed0;
    end
end
always @(*) begin
    sdram_choose_cmd_cmd_payload_ras <= 1'd0;
    if (sdram_choose_cmd_cmd_valid) begin
        sdram_choose_cmd_cmd_payload_ras <= t_array_muxed1;
    end
end
always @(*) begin
    sdram_choose_cmd_cmd_payload_we <= 1'd0;
    if (sdram_choose_cmd_cmd_valid) begin
        sdram_choose_cmd_cmd_payload_we <= t_array_muxed2;
    end
end
assign sdram_choose_cmd_ce = (sdram_choose_cmd_cmd_ready | (~sdram_choose_cmd_cmd_valid));
always @(*) begin
    sdram_choose_req_valids <= 8'd0;
    sdram_choose_req_valids[0] <= (sdram_bankmachine0_cmd_valid & (((sdram_bankmachine0_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine0_cmd_payload_ras & (~sdram_bankmachine0_cmd_payload_cas)) & (~sdram_bankmachine0_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine0_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine0_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[1] <= (sdram_bankmachine1_cmd_valid & (((sdram_bankmachine1_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine1_cmd_payload_ras & (~sdram_bankmachine1_cmd_payload_cas)) & (~sdram_bankmachine1_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine1_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine1_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[2] <= (sdram_bankmachine2_cmd_valid & (((sdram_bankmachine2_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine2_cmd_payload_ras & (~sdram_bankmachine2_cmd_payload_cas)) & (~sdram_bankmachine2_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine2_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine2_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[3] <= (sdram_bankmachine3_cmd_valid & (((sdram_bankmachine3_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine3_cmd_payload_ras & (~sdram_bankmachine3_cmd_payload_cas)) & (~sdram_bankmachine3_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine3_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine3_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[4] <= (sdram_bankmachine4_cmd_valid & (((sdram_bankmachine4_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine4_cmd_payload_ras & (~sdram_bankmachine4_cmd_payload_cas)) & (~sdram_bankmachine4_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine4_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine4_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[5] <= (sdram_bankmachine5_cmd_valid & (((sdram_bankmachine5_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine5_cmd_payload_ras & (~sdram_bankmachine5_cmd_payload_cas)) & (~sdram_bankmachine5_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine5_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine5_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[6] <= (sdram_bankmachine6_cmd_valid & (((sdram_bankmachine6_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine6_cmd_payload_ras & (~sdram_bankmachine6_cmd_payload_cas)) & (~sdram_bankmachine6_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine6_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine6_cmd_payload_is_write == sdram_choose_req_want_writes))));
    sdram_choose_req_valids[7] <= (sdram_bankmachine7_cmd_valid & (((sdram_bankmachine7_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine7_cmd_payload_ras & (~sdram_bankmachine7_cmd_payload_cas)) & (~sdram_bankmachine7_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine7_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine7_cmd_payload_is_write == sdram_choose_req_want_writes))));
end
assign sdram_choose_req_request = sdram_choose_req_valids;
assign sdram_choose_req_cmd_valid = rhs_array_muxed14;
assign sdram_choose_req_cmd_payload_a = rhs_array_muxed15;
assign sdram_choose_req_cmd_payload_ba = rhs_array_muxed16;
assign sdram_choose_req_cmd_payload_is_read = rhs_array_muxed17;
assign sdram_choose_req_cmd_payload_is_write = rhs_array_muxed18;
assign sdram_choose_req_cmd_payload_is_cmd = rhs_array_muxed19;
always @(*) begin
    sdram_choose_req_cmd_payload_cas <= 1'd0;
    if (sdram_choose_req_cmd_valid) begin
        sdram_choose_req_cmd_payload_cas <= t_array_muxed3;
    end
end
always @(*) begin
    sdram_choose_req_cmd_payload_ras <= 1'd0;
    if (sdram_choose_req_cmd_valid) begin
        sdram_choose_req_cmd_payload_ras <= t_array_muxed4;
    end
end
always @(*) begin
    sdram_choose_req_cmd_payload_we <= 1'd0;
    if (sdram_choose_req_cmd_valid) begin
        sdram_choose_req_cmd_payload_we <= t_array_muxed5;
    end
end
always @(*) begin
    sdram_bankmachine0_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 1'd0))) begin
        sdram_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 1'd0))) begin
        sdram_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine1_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 1'd1))) begin
        sdram_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 1'd1))) begin
        sdram_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine2_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 2'd2))) begin
        sdram_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 2'd2))) begin
        sdram_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine3_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 2'd3))) begin
        sdram_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 2'd3))) begin
        sdram_bankmachine3_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine4_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd4))) begin
        sdram_bankmachine4_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd4))) begin
        sdram_bankmachine4_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine5_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd5))) begin
        sdram_bankmachine5_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd5))) begin
        sdram_bankmachine5_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine6_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd6))) begin
        sdram_bankmachine6_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd6))) begin
        sdram_bankmachine6_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    sdram_bankmachine7_cmd_ready <= 1'd0;
    if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd7))) begin
        sdram_bankmachine7_cmd_ready <= 1'd1;
    end
    if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd7))) begin
        sdram_bankmachine7_cmd_ready <= 1'd1;
    end
end
assign sdram_choose_req_ce = (sdram_choose_req_cmd_ready | (~sdram_choose_req_cmd_valid));
assign sdram_dfi_p0_reset_n = 1'd1;
assign sdram_dfi_p0_cke = {1{sdram_steerer0}};
assign sdram_dfi_p0_odt = {1{sdram_steerer1}};
assign sdram_dfi_p1_reset_n = 1'd1;
assign sdram_dfi_p1_cke = {1{sdram_steerer2}};
assign sdram_dfi_p1_odt = {1{sdram_steerer3}};
assign sdram_tfawcon_count = ((sdram_tfawcon_window[0] + sdram_tfawcon_window[1]) + sdram_tfawcon_window[2]);
always @(*) begin
    sdram_choose_cmd_want_activates <= 1'd0;
    sdram_cmd_ready <= 1'd0;
    sdram_choose_cmd_cmd_ready <= 1'd0;
    sdram_choose_req_want_reads <= 1'd0;
    sdram_choose_req_want_writes <= 1'd0;
    sdram_en0 <= 1'd0;
    basesoc_litedramcore_multiplexer_next_state <= 4'd0;
    sdram_choose_req_cmd_ready <= 1'd0;
    sdram_en1 <= 1'd0;
    sdram_steerer_sel0 <= 2'd0;
    sdram_steerer_sel1 <= 2'd0;
    basesoc_litedramcore_multiplexer_next_state <= basesoc_litedramcore_multiplexer_state;
    case (basesoc_litedramcore_multiplexer_state)
        1'd1: begin
            sdram_en1 <= 1'd1;
            sdram_choose_req_want_writes <= 1'd1;
            if (1'd0) begin
                sdram_choose_req_cmd_ready <= (sdram_cas_allowed & ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed));
            end else begin
                sdram_choose_cmd_want_activates <= sdram_ras_allowed;
                sdram_choose_cmd_cmd_ready <= ((~((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we))) | sdram_ras_allowed);
                sdram_choose_req_cmd_ready <= sdram_cas_allowed;
            end
            sdram_steerer_sel0 <= 1'd0;
            if (1'd0) begin
                sdram_steerer_sel0 <= 2'd2;
            end
            if (1'd1) begin
                sdram_steerer_sel0 <= 1'd1;
            end
            sdram_steerer_sel1 <= 1'd0;
            if (1'd1) begin
                sdram_steerer_sel1 <= 2'd2;
            end
            if (1'd0) begin
                sdram_steerer_sel1 <= 1'd1;
            end
            if (sdram_read_available) begin
                if (((~sdram_write_available) | sdram_max_time1)) begin
                    basesoc_litedramcore_multiplexer_next_state <= 2'd3;
                end
            end
            if (sdram_go_to_refresh) begin
                basesoc_litedramcore_multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            sdram_steerer_sel0 <= 2'd3;
            sdram_cmd_ready <= 1'd1;
            if (sdram_cmd_last) begin
                basesoc_litedramcore_multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (sdram_twtrcon_ready) begin
                basesoc_litedramcore_multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            basesoc_litedramcore_multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            basesoc_litedramcore_multiplexer_next_state <= 3'd6;
        end
        3'd6: begin
            basesoc_litedramcore_multiplexer_next_state <= 3'd7;
        end
        3'd7: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd8;
        end
        4'd8: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd9;
        end
        4'd9: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd10;
        end
        4'd10: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd11;
        end
        4'd11: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd12;
        end
        4'd12: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd13;
        end
        4'd13: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd14;
        end
        4'd14: begin
            basesoc_litedramcore_multiplexer_next_state <= 4'd15;
        end
        4'd15: begin
            basesoc_litedramcore_multiplexer_next_state <= 1'd1;
        end
        default: begin
            sdram_en0 <= 1'd1;
            sdram_choose_req_want_reads <= 1'd1;
            if (1'd0) begin
                sdram_choose_req_cmd_ready <= (sdram_cas_allowed & ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed));
            end else begin
                sdram_choose_cmd_want_activates <= sdram_ras_allowed;
                sdram_choose_cmd_cmd_ready <= ((~((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we))) | sdram_ras_allowed);
                sdram_choose_req_cmd_ready <= sdram_cas_allowed;
            end
            sdram_steerer_sel0 <= 1'd0;
            if (1'd1) begin
                sdram_steerer_sel0 <= 2'd2;
            end
            if (1'd0) begin
                sdram_steerer_sel0 <= 1'd1;
            end
            sdram_steerer_sel1 <= 1'd0;
            if (1'd0) begin
                sdram_steerer_sel1 <= 2'd2;
            end
            if (1'd1) begin
                sdram_steerer_sel1 <= 1'd1;
            end
            if (sdram_write_available) begin
                if (((~sdram_read_available) | sdram_max_time0)) begin
                    basesoc_litedramcore_multiplexer_next_state <= 3'd4;
                end
            end
            if (sdram_go_to_refresh) begin
                basesoc_litedramcore_multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign basesoc_litedramcore_roundrobin0_request = {(((port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((basesoc_litedramcore_locked0 | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin0_ce = ((~sdram_interface_bank0_valid) & (~sdram_interface_bank0_lock));
assign sdram_interface_bank0_addr = rhs_array_muxed20;
assign sdram_interface_bank0_we = rhs_array_muxed21;
assign sdram_interface_bank0_valid = rhs_array_muxed22;
assign basesoc_litedramcore_roundrobin1_request = {(((port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((basesoc_litedramcore_locked1 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin1_ce = ((~sdram_interface_bank1_valid) & (~sdram_interface_bank1_lock));
assign sdram_interface_bank1_addr = rhs_array_muxed23;
assign sdram_interface_bank1_we = rhs_array_muxed24;
assign sdram_interface_bank1_valid = rhs_array_muxed25;
assign basesoc_litedramcore_roundrobin2_request = {(((port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((basesoc_litedramcore_locked2 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin2_ce = ((~sdram_interface_bank2_valid) & (~sdram_interface_bank2_lock));
assign sdram_interface_bank2_addr = rhs_array_muxed26;
assign sdram_interface_bank2_we = rhs_array_muxed27;
assign sdram_interface_bank2_valid = rhs_array_muxed28;
assign basesoc_litedramcore_roundrobin3_request = {(((port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((basesoc_litedramcore_locked3 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin3_ce = ((~sdram_interface_bank3_valid) & (~sdram_interface_bank3_lock));
assign sdram_interface_bank3_addr = rhs_array_muxed29;
assign sdram_interface_bank3_we = rhs_array_muxed30;
assign sdram_interface_bank3_valid = rhs_array_muxed31;
assign basesoc_litedramcore_roundrobin4_request = {(((port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((basesoc_litedramcore_locked4 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin4_ce = ((~sdram_interface_bank4_valid) & (~sdram_interface_bank4_lock));
assign sdram_interface_bank4_addr = rhs_array_muxed32;
assign sdram_interface_bank4_we = rhs_array_muxed33;
assign sdram_interface_bank4_valid = rhs_array_muxed34;
assign basesoc_litedramcore_roundrobin5_request = {(((port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((basesoc_litedramcore_locked5 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin5_ce = ((~sdram_interface_bank5_valid) & (~sdram_interface_bank5_lock));
assign sdram_interface_bank5_addr = rhs_array_muxed35;
assign sdram_interface_bank5_we = rhs_array_muxed36;
assign sdram_interface_bank5_valid = rhs_array_muxed37;
assign basesoc_litedramcore_roundrobin6_request = {(((port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((basesoc_litedramcore_locked6 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin6_ce = ((~sdram_interface_bank6_valid) & (~sdram_interface_bank6_lock));
assign sdram_interface_bank6_addr = rhs_array_muxed38;
assign sdram_interface_bank6_we = rhs_array_muxed39;
assign sdram_interface_bank6_valid = rhs_array_muxed40;
assign basesoc_litedramcore_roundrobin7_request = {(((port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((basesoc_litedramcore_locked7 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))))) & port_cmd_valid)};
assign basesoc_litedramcore_roundrobin7_ce = ((~sdram_interface_bank7_valid) & (~sdram_interface_bank7_lock));
assign sdram_interface_bank7_addr = rhs_array_muxed41;
assign sdram_interface_bank7_we = rhs_array_muxed42;
assign sdram_interface_bank7_valid = rhs_array_muxed43;
assign port_cmd_ready = ((((((((1'd0 | (((basesoc_litedramcore_roundrobin0_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((basesoc_litedramcore_locked0 | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank0_ready)) | (((basesoc_litedramcore_roundrobin1_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((basesoc_litedramcore_locked1 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank1_ready)) | (((basesoc_litedramcore_roundrobin2_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((basesoc_litedramcore_locked2 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank2_ready)) | (((basesoc_litedramcore_roundrobin3_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((basesoc_litedramcore_locked3 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank3_ready)) | (((basesoc_litedramcore_roundrobin4_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((basesoc_litedramcore_locked4 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank4_ready)) | (((basesoc_litedramcore_roundrobin5_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((basesoc_litedramcore_locked5 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank5_ready)) | (((basesoc_litedramcore_roundrobin6_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((basesoc_litedramcore_locked6 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank6_ready)) | (((basesoc_litedramcore_roundrobin7_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((basesoc_litedramcore_locked7 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0)))))) & sdram_interface_bank7_ready));
assign port_wdata_ready = basesoc_litedramcore_new_master_wdata_ready3;
assign port_rdata_valid = basesoc_litedramcore_new_master_rdata_valid13;
always @(*) begin
    sdram_interface_wdata <= 128'd0;
    sdram_interface_wdata_we <= 16'd0;
    case ({basesoc_litedramcore_new_master_wdata_ready3})
        1'd1: begin
            sdram_interface_wdata <= port_wdata_payload_data;
            sdram_interface_wdata_we <= port_wdata_payload_we;
        end
        default: begin
            sdram_interface_wdata <= 1'd0;
            sdram_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign port_rdata_payload_data = sdram_interface_rdata;
assign basesoc_litedramcore_roundrobin0_grant = 1'd0;
assign basesoc_litedramcore_roundrobin1_grant = 1'd0;
assign basesoc_litedramcore_roundrobin2_grant = 1'd0;
assign basesoc_litedramcore_roundrobin3_grant = 1'd0;
assign basesoc_litedramcore_roundrobin4_grant = 1'd0;
assign basesoc_litedramcore_roundrobin5_grant = 1'd0;
assign basesoc_litedramcore_roundrobin6_grant = 1'd0;
assign basesoc_litedramcore_roundrobin7_grant = 1'd0;
assign litedram_wb_cyc = wb_sdram_cyc;
assign litedram_wb_stb = wb_sdram_stb;
assign wb_sdram_ack = litedram_wb_ack;
assign litedram_wb_we = wb_sdram_we;
assign litedram_wb_cti = wb_sdram_cti;
assign litedram_wb_bte = wb_sdram_bte;
assign wb_sdram_err = litedram_wb_err;
always @(*) begin
    litedram_wb_dat_w <= 128'd0;
    litedram_wb_sel <= 16'd0;
    wb_sdram_dat_r <= 32'd0;
    litedram_wb_adr <= 30'd0;
    case (wb_sdram_adr[1:0])
        1'd0: begin
            litedram_wb_adr <= wb_sdram_adr[29:2];
            litedram_wb_sel[3:0] <= wb_sdram_sel;
            litedram_wb_dat_w[31:0] <= wb_sdram_dat_w;
            wb_sdram_dat_r <= litedram_wb_dat_r[31:0];
        end
        1'd1: begin
            litedram_wb_adr <= wb_sdram_adr[29:2];
            litedram_wb_sel[7:4] <= wb_sdram_sel;
            litedram_wb_dat_w[63:32] <= wb_sdram_dat_w;
            wb_sdram_dat_r <= litedram_wb_dat_r[63:32];
        end
        2'd2: begin
            litedram_wb_adr <= wb_sdram_adr[29:2];
            litedram_wb_sel[11:8] <= wb_sdram_sel;
            litedram_wb_dat_w[95:64] <= wb_sdram_dat_w;
            wb_sdram_dat_r <= litedram_wb_dat_r[95:64];
        end
        2'd3: begin
            litedram_wb_adr <= wb_sdram_adr[29:2];
            litedram_wb_sel[15:12] <= wb_sdram_sel;
            litedram_wb_dat_w[127:96] <= wb_sdram_dat_w;
            wb_sdram_dat_r <= litedram_wb_dat_r[127:96];
        end
    endcase
end
assign port_cmd_payload_addr = (litedram_wb_adr - 27'd67108864);
assign port_cmd_payload_we = litedram_wb_we;
assign port_cmd_last = (~litedram_wb_we);
assign port_flush = (~litedram_wb_cyc);
always @(*) begin
    port_wdata_valid <= 1'd0;
    port_wdata_valid <= (litedram_wb_stb & litedram_wb_we);
    if (1'd1) begin
        if ((~is_ongoing)) begin
            port_wdata_valid <= 1'd0;
        end
    end
end
assign port_wdata_payload_data = litedram_wb_dat_w;
assign port_wdata_payload_we = litedram_wb_sel;
assign port_rdata_ready = 1'd1;
always @(*) begin
    aborted_litedramwishbone2native_next_value <= 1'd0;
    is_ongoing <= 1'd0;
    aborted_litedramwishbone2native_next_value_ce <= 1'd0;
    litedram_wb_ack <= 1'd0;
    basesoc_litedramwishbone2native_next_state <= 2'd0;
    litedram_wb_dat_r <= 128'd0;
    port_cmd_valid <= 1'd0;
    basesoc_litedramwishbone2native_next_state <= basesoc_litedramwishbone2native_state;
    case (basesoc_litedramwishbone2native_state)
        1'd1: begin
            is_ongoing <= 1'd1;
            aborted_litedramwishbone2native_next_value <= ((~litedram_wb_cyc) | aborted);
            aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if ((port_wdata_valid & port_wdata_ready)) begin
                litedram_wb_ack <= (litedram_wb_cyc & (~aborted));
                basesoc_litedramwishbone2native_next_state <= 1'd0;
            end
        end
        2'd2: begin
            aborted_litedramwishbone2native_next_value <= ((~litedram_wb_cyc) | aborted);
            aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if (port_rdata_valid) begin
                litedram_wb_ack <= (litedram_wb_cyc & (~aborted));
                litedram_wb_dat_r <= port_rdata_payload_data;
                basesoc_litedramwishbone2native_next_state <= 1'd0;
            end
        end
        default: begin
            port_cmd_valid <= (litedram_wb_cyc & litedram_wb_stb);
            if (((port_cmd_valid & port_cmd_ready) & litedram_wb_we)) begin
                basesoc_litedramwishbone2native_next_state <= 1'd1;
            end
            if (((port_cmd_valid & port_cmd_ready) & (~litedram_wb_we))) begin
                basesoc_litedramwishbone2native_next_state <= 2'd2;
            end
            aborted_litedramwishbone2native_next_value <= 1'd0;
            aborted_litedramwishbone2native_next_value_ce <= 1'd1;
        end
    endcase
end
always @(*) begin
    basesoc_wishbone_ack <= 1'd0;
    basesoc_wishbone2csr_next_state <= 2'd0;
    basesoc_dat_w_wishbone2csr_next_value0 <= 32'd0;
    basesoc_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    basesoc_adr_wishbone2csr_next_value1 <= 14'd0;
    basesoc_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    basesoc_we_wishbone2csr_next_value2 <= 1'd0;
    basesoc_we_wishbone2csr_next_value_ce2 <= 1'd0;
    basesoc_wishbone_dat_r <= 32'd0;
    basesoc_wishbone2csr_next_state <= basesoc_wishbone2csr_state;
    case (basesoc_wishbone2csr_state)
        1'd1: begin
            basesoc_adr_wishbone2csr_next_value1 <= 1'd0;
            basesoc_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            basesoc_we_wishbone2csr_next_value2 <= 1'd0;
            basesoc_we_wishbone2csr_next_value_ce2 <= 1'd1;
            basesoc_wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            basesoc_wishbone_ack <= 1'd1;
            basesoc_wishbone_dat_r <= basesoc_dat_r;
            basesoc_wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            basesoc_dat_w_wishbone2csr_next_value0 <= basesoc_wishbone_dat_w;
            basesoc_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((basesoc_wishbone_cyc & basesoc_wishbone_stb)) begin
                basesoc_adr_wishbone2csr_next_value1 <= basesoc_wishbone_adr;
                basesoc_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                basesoc_we_wishbone2csr_next_value2 <= (basesoc_wishbone_we & (basesoc_wishbone_sel != 1'd0));
                basesoc_we_wishbone2csr_next_value_ce2 <= 1'd1;
                basesoc_wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign csrbank0_sel = (interface0_bank_bus_adr[13:9] == 1'd1);
assign csrbank0_reset0_r = interface0_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank0_reset0_re <= 1'd0;
    csrbank0_reset0_we <= 1'd0;
    if ((csrbank0_sel & (interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank0_reset0_re <= interface0_bank_bus_we;
        csrbank0_reset0_we <= (~interface0_bank_bus_we);
    end
end
assign csrbank0_scratch0_r = interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank0_scratch0_re <= 1'd0;
    csrbank0_scratch0_we <= 1'd0;
    if ((csrbank0_sel & (interface0_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank0_scratch0_re <= interface0_bank_bus_we;
        csrbank0_scratch0_we <= (~interface0_bank_bus_we);
    end
end
assign csrbank0_bus_errors_r = interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank0_bus_errors_we <= 1'd0;
    csrbank0_bus_errors_re <= 1'd0;
    if ((csrbank0_sel & (interface0_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank0_bus_errors_re <= interface0_bank_bus_we;
        csrbank0_bus_errors_we <= (~interface0_bank_bus_we);
    end
end
assign csrbank1_sel = (interface1_bank_bus_adr[13:9] == 1'd0);
assign csrbank1_dly_sel0_r = interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank1_dly_sel0_we <= 1'd0;
    csrbank1_dly_sel0_re <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank1_dly_sel0_re <= interface1_bank_bus_we;
        csrbank1_dly_sel0_we <= (~interface1_bank_bus_we);
    end
end
assign ddrphy_rdly_dq_rst_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    ddrphy_rdly_dq_rst_we <= 1'd0;
    ddrphy_rdly_dq_rst_re <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 1'd1))) begin
        ddrphy_rdly_dq_rst_re <= interface1_bank_bus_we;
        ddrphy_rdly_dq_rst_we <= (~interface1_bank_bus_we);
    end
end
assign ddrphy_rdly_dq_inc_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    ddrphy_rdly_dq_inc_we <= 1'd0;
    ddrphy_rdly_dq_inc_re <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 2'd2))) begin
        ddrphy_rdly_dq_inc_re <= interface1_bank_bus_we;
        ddrphy_rdly_dq_inc_we <= (~interface1_bank_bus_we);
    end
end
assign ddrphy_rdly_dq_bitslip_rst_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
    ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 2'd3))) begin
        ddrphy_rdly_dq_bitslip_rst_re <= interface1_bank_bus_we;
        ddrphy_rdly_dq_bitslip_rst_we <= (~interface1_bank_bus_we);
    end
end
assign ddrphy_rdly_dq_bitslip_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    ddrphy_rdly_dq_bitslip_we <= 1'd0;
    ddrphy_rdly_dq_bitslip_re <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd4))) begin
        ddrphy_rdly_dq_bitslip_re <= interface1_bank_bus_we;
        ddrphy_rdly_dq_bitslip_we <= (~interface1_bank_bus_we);
    end
end
assign ddrphy_burstdet_clr_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    ddrphy_burstdet_clr_re <= 1'd0;
    ddrphy_burstdet_clr_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd5))) begin
        ddrphy_burstdet_clr_re <= interface1_bank_bus_we;
        ddrphy_burstdet_clr_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_burstdet_seen_r = interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank1_burstdet_seen_we <= 1'd0;
    csrbank1_burstdet_seen_re <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd6))) begin
        csrbank1_burstdet_seen_re <= interface1_bank_bus_we;
        csrbank1_burstdet_seen_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_dly_sel0_w = ddrphy_dly_sel_storage[1:0];
assign csrbank1_burstdet_seen_w = ddrphy_burstdet_seen_status[1:0];
assign ddrphy_burstdet_seen_we = csrbank1_burstdet_seen_we;
assign csrbank2_sel = (interface2_bank_bus_adr[13:9] == 2'd2);
assign csrbank2_dfii_control0_r = interface2_bank_bus_dat_w[3:0];
always @(*) begin
    csrbank2_dfii_control0_re <= 1'd0;
    csrbank2_dfii_control0_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank2_dfii_control0_re <= interface2_bank_bus_we;
        csrbank2_dfii_control0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_command0_r = interface2_bank_bus_dat_w[5:0];
always @(*) begin
    csrbank2_dfii_pi0_command0_we <= 1'd0;
    csrbank2_dfii_pi0_command0_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank2_dfii_pi0_command0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_command0_we <= (~interface2_bank_bus_we);
    end
end
assign sdram_phaseinjector0_command_issue_r = interface2_bank_bus_dat_w[0];
always @(*) begin
    sdram_phaseinjector0_command_issue_re <= 1'd0;
    sdram_phaseinjector0_command_issue_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 2'd2))) begin
        sdram_phaseinjector0_command_issue_re <= interface2_bank_bus_we;
        sdram_phaseinjector0_command_issue_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_address0_r = interface2_bank_bus_dat_w[12:0];
always @(*) begin
    csrbank2_dfii_pi0_address0_we <= 1'd0;
    csrbank2_dfii_pi0_address0_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank2_dfii_pi0_address0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_address0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_baddress0_r = interface2_bank_bus_dat_w[2:0];
always @(*) begin
    csrbank2_dfii_pi0_baddress0_re <= 1'd0;
    csrbank2_dfii_pi0_baddress0_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank2_dfii_pi0_baddress0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_baddress0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_wrdata1_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi0_wrdata1_we <= 1'd0;
    csrbank2_dfii_pi0_wrdata1_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank2_dfii_pi0_wrdata1_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_wrdata1_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_wrdata0_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi0_wrdata0_re <= 1'd0;
    csrbank2_dfii_pi0_wrdata0_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 3'd6))) begin
        csrbank2_dfii_pi0_wrdata0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_wrdata0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_rddata1_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi0_rddata1_re <= 1'd0;
    csrbank2_dfii_pi0_rddata1_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 3'd7))) begin
        csrbank2_dfii_pi0_rddata1_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_rddata1_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi0_rddata0_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi0_rddata0_we <= 1'd0;
    csrbank2_dfii_pi0_rddata0_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd8))) begin
        csrbank2_dfii_pi0_rddata0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi0_rddata0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_command0_r = interface2_bank_bus_dat_w[5:0];
always @(*) begin
    csrbank2_dfii_pi1_command0_we <= 1'd0;
    csrbank2_dfii_pi1_command0_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd9))) begin
        csrbank2_dfii_pi1_command0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_command0_we <= (~interface2_bank_bus_we);
    end
end
assign sdram_phaseinjector1_command_issue_r = interface2_bank_bus_dat_w[0];
always @(*) begin
    sdram_phaseinjector1_command_issue_we <= 1'd0;
    sdram_phaseinjector1_command_issue_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd10))) begin
        sdram_phaseinjector1_command_issue_re <= interface2_bank_bus_we;
        sdram_phaseinjector1_command_issue_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_address0_r = interface2_bank_bus_dat_w[12:0];
always @(*) begin
    csrbank2_dfii_pi1_address0_re <= 1'd0;
    csrbank2_dfii_pi1_address0_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd11))) begin
        csrbank2_dfii_pi1_address0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_address0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_baddress0_r = interface2_bank_bus_dat_w[2:0];
always @(*) begin
    csrbank2_dfii_pi1_baddress0_we <= 1'd0;
    csrbank2_dfii_pi1_baddress0_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd12))) begin
        csrbank2_dfii_pi1_baddress0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_baddress0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_wrdata1_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi1_wrdata1_re <= 1'd0;
    csrbank2_dfii_pi1_wrdata1_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd13))) begin
        csrbank2_dfii_pi1_wrdata1_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_wrdata1_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_wrdata0_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi1_wrdata0_re <= 1'd0;
    csrbank2_dfii_pi1_wrdata0_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd14))) begin
        csrbank2_dfii_pi1_wrdata0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_wrdata0_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_rddata1_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi1_rddata1_we <= 1'd0;
    csrbank2_dfii_pi1_rddata1_re <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 4'd15))) begin
        csrbank2_dfii_pi1_rddata1_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_rddata1_we <= (~interface2_bank_bus_we);
    end
end
assign csrbank2_dfii_pi1_rddata0_r = interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank2_dfii_pi1_rddata0_re <= 1'd0;
    csrbank2_dfii_pi1_rddata0_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 5'd16))) begin
        csrbank2_dfii_pi1_rddata0_re <= interface2_bank_bus_we;
        csrbank2_dfii_pi1_rddata0_we <= (~interface2_bank_bus_we);
    end
end
assign sdram_sel = sdram_storage[0];
assign sdram_cke = sdram_storage[1];
assign sdram_odt = sdram_storage[2];
assign sdram_reset_n = sdram_storage[3];
assign csrbank2_dfii_control0_w = sdram_storage[3:0];
assign sdram_phaseinjector0_csrfield_cs = sdram_phaseinjector0_command_storage[0];
assign sdram_phaseinjector0_csrfield_we = sdram_phaseinjector0_command_storage[1];
assign sdram_phaseinjector0_csrfield_cas = sdram_phaseinjector0_command_storage[2];
assign sdram_phaseinjector0_csrfield_ras = sdram_phaseinjector0_command_storage[3];
assign sdram_phaseinjector0_csrfield_wren = sdram_phaseinjector0_command_storage[4];
assign sdram_phaseinjector0_csrfield_rden = sdram_phaseinjector0_command_storage[5];
assign csrbank2_dfii_pi0_command0_w = sdram_phaseinjector0_command_storage[5:0];
assign csrbank2_dfii_pi0_address0_w = sdram_phaseinjector0_address_storage[12:0];
assign csrbank2_dfii_pi0_baddress0_w = sdram_phaseinjector0_baddress_storage[2:0];
assign csrbank2_dfii_pi0_wrdata1_w = sdram_phaseinjector0_wrdata_storage[63:32];
assign csrbank2_dfii_pi0_wrdata0_w = sdram_phaseinjector0_wrdata_storage[31:0];
assign csrbank2_dfii_pi0_rddata1_w = sdram_phaseinjector0_rddata_status[63:32];
assign csrbank2_dfii_pi0_rddata0_w = sdram_phaseinjector0_rddata_status[31:0];
assign sdram_phaseinjector0_rddata_we = csrbank2_dfii_pi0_rddata0_we;
assign sdram_phaseinjector1_csrfield_cs = sdram_phaseinjector1_command_storage[0];
assign sdram_phaseinjector1_csrfield_we = sdram_phaseinjector1_command_storage[1];
assign sdram_phaseinjector1_csrfield_cas = sdram_phaseinjector1_command_storage[2];
assign sdram_phaseinjector1_csrfield_ras = sdram_phaseinjector1_command_storage[3];
assign sdram_phaseinjector1_csrfield_wren = sdram_phaseinjector1_command_storage[4];
assign sdram_phaseinjector1_csrfield_rden = sdram_phaseinjector1_command_storage[5];
assign csrbank2_dfii_pi1_command0_w = sdram_phaseinjector1_command_storage[5:0];
assign csrbank2_dfii_pi1_address0_w = sdram_phaseinjector1_address_storage[12:0];
assign csrbank2_dfii_pi1_baddress0_w = sdram_phaseinjector1_baddress_storage[2:0];
assign csrbank2_dfii_pi1_wrdata1_w = sdram_phaseinjector1_wrdata_storage[63:32];
assign csrbank2_dfii_pi1_wrdata0_w = sdram_phaseinjector1_wrdata_storage[31:0];
assign csrbank2_dfii_pi1_rddata1_w = sdram_phaseinjector1_rddata_status[63:32];
assign csrbank2_dfii_pi1_rddata0_w = sdram_phaseinjector1_rddata_status[31:0];
assign sdram_phaseinjector1_rddata_we = csrbank2_dfii_pi1_rddata0_we;
assign csrbank3_sel = (interface3_bank_bus_adr[13:9] == 2'd3);
assign csrbank3_load0_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_load0_re <= 1'd0;
    csrbank3_load0_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank3_load0_re <= interface3_bank_bus_we;
        csrbank3_load0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_reload0_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_reload0_re <= 1'd0;
    csrbank3_reload0_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank3_reload0_re <= interface3_bank_bus_we;
        csrbank3_reload0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_en0_r = interface3_bank_bus_dat_w[0];
always @(*) begin
    csrbank3_en0_we <= 1'd0;
    csrbank3_en0_re <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank3_en0_re <= interface3_bank_bus_we;
        csrbank3_en0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_update_value0_r = interface3_bank_bus_dat_w[0];
always @(*) begin
    csrbank3_update_value0_re <= 1'd0;
    csrbank3_update_value0_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank3_update_value0_re <= interface3_bank_bus_we;
        csrbank3_update_value0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_value_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_value_we <= 1'd0;
    csrbank3_value_re <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank3_value_re <= interface3_bank_bus_we;
        csrbank3_value_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_ev_status_r = interface3_bank_bus_dat_w[0];
always @(*) begin
    csrbank3_ev_status_we <= 1'd0;
    csrbank3_ev_status_re <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank3_ev_status_re <= interface3_bank_bus_we;
        csrbank3_ev_status_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_ev_pending_r = interface3_bank_bus_dat_w[0];
always @(*) begin
    csrbank3_ev_pending_re <= 1'd0;
    csrbank3_ev_pending_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 3'd6))) begin
        csrbank3_ev_pending_re <= interface3_bank_bus_we;
        csrbank3_ev_pending_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_ev_enable0_r = interface3_bank_bus_dat_w[0];
always @(*) begin
    csrbank3_ev_enable0_re <= 1'd0;
    csrbank3_ev_enable0_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 3'd7))) begin
        csrbank3_ev_enable0_re <= interface3_bank_bus_we;
        csrbank3_ev_enable0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_load0_w = timer_load_storage[31:0];
assign csrbank3_reload0_w = timer_reload_storage[31:0];
assign csrbank3_en0_w = timer_en_storage;
assign csrbank3_update_value0_w = timer_update_value_storage;
assign csrbank3_value_w = timer_value_status[31:0];
assign timer_value_we = csrbank3_value_we;
assign timer_status_status = timer_zero0;
assign csrbank3_ev_status_w = timer_status_status;
assign timer_status_we = csrbank3_ev_status_we;
assign timer_pending_status = timer_zero1;
assign csrbank3_ev_pending_w = timer_pending_status;
assign timer_pending_we = csrbank3_ev_pending_we;
assign timer_zero2 = timer_enable_storage;
assign csrbank3_ev_enable0_w = timer_enable_storage;
assign csrbank4_sel = (interface4_bank_bus_adr[13:9] == 3'd4);
assign uart_rxtx_r = interface4_bank_bus_dat_w[7:0];
always @(*) begin
    uart_rxtx_re <= 1'd0;
    uart_rxtx_we <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 1'd0))) begin
        uart_rxtx_re <= interface4_bank_bus_we;
        uart_rxtx_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_txfull_r = interface4_bank_bus_dat_w[0];
always @(*) begin
    csrbank4_txfull_we <= 1'd0;
    csrbank4_txfull_re <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank4_txfull_re <= interface4_bank_bus_we;
        csrbank4_txfull_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_rxempty_r = interface4_bank_bus_dat_w[0];
always @(*) begin
    csrbank4_rxempty_we <= 1'd0;
    csrbank4_rxempty_re <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank4_rxempty_re <= interface4_bank_bus_we;
        csrbank4_rxempty_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_ev_status_r = interface4_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank4_ev_status_re <= 1'd0;
    csrbank4_ev_status_we <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank4_ev_status_re <= interface4_bank_bus_we;
        csrbank4_ev_status_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_ev_pending_r = interface4_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank4_ev_pending_re <= 1'd0;
    csrbank4_ev_pending_we <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank4_ev_pending_re <= interface4_bank_bus_we;
        csrbank4_ev_pending_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_ev_enable0_r = interface4_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank4_ev_enable0_we <= 1'd0;
    csrbank4_ev_enable0_re <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank4_ev_enable0_re <= interface4_bank_bus_we;
        csrbank4_ev_enable0_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_txempty_r = interface4_bank_bus_dat_w[0];
always @(*) begin
    csrbank4_txempty_re <= 1'd0;
    csrbank4_txempty_we <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 3'd6))) begin
        csrbank4_txempty_re <= interface4_bank_bus_we;
        csrbank4_txempty_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_rxfull_r = interface4_bank_bus_dat_w[0];
always @(*) begin
    csrbank4_rxfull_re <= 1'd0;
    csrbank4_rxfull_we <= 1'd0;
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 3'd7))) begin
        csrbank4_rxfull_re <= interface4_bank_bus_we;
        csrbank4_rxfull_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank4_txfull_w = uart_txfull_status;
assign uart_txfull_we = csrbank4_txfull_we;
assign csrbank4_rxempty_w = uart_rxempty_status;
assign uart_rxempty_we = csrbank4_rxempty_we;
always @(*) begin
    uart_status_status <= 2'd0;
    uart_status_status[0] <= uart_tx0;
    uart_status_status[1] <= uart_rx0;
end
assign csrbank4_ev_status_w = uart_status_status[1:0];
assign uart_status_we = csrbank4_ev_status_we;
always @(*) begin
    uart_pending_status <= 2'd0;
    uart_pending_status[0] <= uart_tx1;
    uart_pending_status[1] <= uart_rx1;
end
assign csrbank4_ev_pending_w = uart_pending_status[1:0];
assign uart_pending_we = csrbank4_ev_pending_we;
assign uart_tx2 = uart_enable_storage[0];
assign uart_rx2 = uart_enable_storage[1];
assign csrbank4_ev_enable0_w = uart_enable_storage[1:0];
assign csrbank4_txempty_w = uart_txempty_status;
assign uart_txempty_we = csrbank4_txempty_we;
assign csrbank4_rxfull_w = uart_rxfull_status;
assign uart_rxfull_we = csrbank4_rxfull_we;
assign csr_interconnect_adr = basesoc_adr;
assign csr_interconnect_we = basesoc_we;
assign csr_interconnect_dat_w = basesoc_dat_w;
assign basesoc_dat_r = csr_interconnect_dat_r;
assign interface0_bank_bus_adr = csr_interconnect_adr;
assign interface1_bank_bus_adr = csr_interconnect_adr;
assign interface2_bank_bus_adr = csr_interconnect_adr;
assign interface3_bank_bus_adr = csr_interconnect_adr;
assign interface4_bank_bus_adr = csr_interconnect_adr;
assign interface0_bank_bus_we = csr_interconnect_we;
assign interface1_bank_bus_we = csr_interconnect_we;
assign interface2_bank_bus_we = csr_interconnect_we;
assign interface3_bank_bus_we = csr_interconnect_we;
assign interface4_bank_bus_we = csr_interconnect_we;
assign interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = ((((interface0_bank_bus_dat_r | interface1_bank_bus_dat_r) | interface2_bank_bus_dat_r) | interface3_bank_bus_dat_r) | interface4_bank_bus_dat_r);
always @(*) begin
    rhs_array_muxed0 <= 30'd0;
    case (grant)
        default: begin
            rhs_array_muxed0 <= wb_bus_adr;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed1 <= 32'd0;
    case (grant)
        default: begin
            rhs_array_muxed1 <= wb_bus_dat_w;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed2 <= 4'd0;
    case (grant)
        default: begin
            rhs_array_muxed2 <= wb_bus_sel;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed3 <= 1'd0;
    case (grant)
        default: begin
            rhs_array_muxed3 <= wb_bus_cyc;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed4 <= 1'd0;
    case (grant)
        default: begin
            rhs_array_muxed4 <= wb_bus_stb;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed5 <= 1'd0;
    case (grant)
        default: begin
            rhs_array_muxed5 <= wb_bus_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed6 <= 3'd0;
    case (grant)
        default: begin
            rhs_array_muxed6 <= wb_bus_cti;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed7 <= 2'd0;
    case (grant)
        default: begin
            rhs_array_muxed7 <= wb_bus_bte;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed8 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[0];
        end
        1'd1: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[1];
        end
        2'd2: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[2];
        end
        2'd3: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[3];
        end
        3'd4: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[4];
        end
        3'd5: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[5];
        end
        3'd6: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[6];
        end
        default: begin
            rhs_array_muxed8 <= sdram_choose_cmd_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_array_muxed9 <= 13'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed9 <= sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_array_muxed9 <= sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_array_muxed9 <= sdram_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_array_muxed9 <= sdram_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_array_muxed9 <= sdram_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_array_muxed9 <= sdram_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_array_muxed9 <= sdram_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_array_muxed9 <= sdram_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed10 <= 3'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed10 <= sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_array_muxed10 <= sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_array_muxed10 <= sdram_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_array_muxed10 <= sdram_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_array_muxed10 <= sdram_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_array_muxed10 <= sdram_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_array_muxed10 <= sdram_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_array_muxed10 <= sdram_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed11 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed11 <= sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_array_muxed11 <= sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_array_muxed11 <= sdram_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_array_muxed11 <= sdram_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_array_muxed11 <= sdram_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_array_muxed11 <= sdram_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_array_muxed11 <= sdram_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_array_muxed11 <= sdram_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed12 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed12 <= sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_array_muxed12 <= sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_array_muxed12 <= sdram_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_array_muxed12 <= sdram_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_array_muxed12 <= sdram_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_array_muxed12 <= sdram_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_array_muxed12 <= sdram_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_array_muxed12 <= sdram_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed13 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed13 <= sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_array_muxed13 <= sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_array_muxed13 <= sdram_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_array_muxed13 <= sdram_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_array_muxed13 <= sdram_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_array_muxed13 <= sdram_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_array_muxed13 <= sdram_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_array_muxed13 <= sdram_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_array_muxed0 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            t_array_muxed0 <= sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_array_muxed0 <= sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_array_muxed0 <= sdram_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_array_muxed0 <= sdram_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_array_muxed0 <= sdram_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_array_muxed0 <= sdram_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_array_muxed0 <= sdram_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_array_muxed0 <= sdram_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_array_muxed1 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            t_array_muxed1 <= sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_array_muxed1 <= sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_array_muxed1 <= sdram_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_array_muxed1 <= sdram_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_array_muxed1 <= sdram_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_array_muxed1 <= sdram_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_array_muxed1 <= sdram_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_array_muxed1 <= sdram_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_array_muxed2 <= 1'd0;
    case (sdram_choose_cmd_grant)
        1'd0: begin
            t_array_muxed2 <= sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_array_muxed2 <= sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_array_muxed2 <= sdram_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_array_muxed2 <= sdram_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_array_muxed2 <= sdram_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_array_muxed2 <= sdram_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_array_muxed2 <= sdram_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_array_muxed2 <= sdram_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed14 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[0];
        end
        1'd1: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[1];
        end
        2'd2: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[2];
        end
        2'd3: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[3];
        end
        3'd4: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[4];
        end
        3'd5: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[5];
        end
        3'd6: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[6];
        end
        default: begin
            rhs_array_muxed14 <= sdram_choose_req_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_array_muxed15 <= 13'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed15 <= sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_array_muxed15 <= sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_array_muxed15 <= sdram_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_array_muxed15 <= sdram_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_array_muxed15 <= sdram_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_array_muxed15 <= sdram_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_array_muxed15 <= sdram_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_array_muxed15 <= sdram_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed16 <= 3'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed16 <= sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_array_muxed16 <= sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_array_muxed16 <= sdram_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_array_muxed16 <= sdram_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_array_muxed16 <= sdram_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_array_muxed16 <= sdram_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_array_muxed16 <= sdram_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_array_muxed16 <= sdram_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed17 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed17 <= sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_array_muxed17 <= sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_array_muxed17 <= sdram_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_array_muxed17 <= sdram_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_array_muxed17 <= sdram_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_array_muxed17 <= sdram_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_array_muxed17 <= sdram_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_array_muxed17 <= sdram_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed18 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed18 <= sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_array_muxed18 <= sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_array_muxed18 <= sdram_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_array_muxed18 <= sdram_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_array_muxed18 <= sdram_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_array_muxed18 <= sdram_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_array_muxed18 <= sdram_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_array_muxed18 <= sdram_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed19 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            rhs_array_muxed19 <= sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_array_muxed19 <= sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_array_muxed19 <= sdram_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_array_muxed19 <= sdram_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_array_muxed19 <= sdram_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_array_muxed19 <= sdram_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_array_muxed19 <= sdram_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_array_muxed19 <= sdram_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_array_muxed3 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            t_array_muxed3 <= sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_array_muxed3 <= sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_array_muxed3 <= sdram_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_array_muxed3 <= sdram_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_array_muxed3 <= sdram_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_array_muxed3 <= sdram_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_array_muxed3 <= sdram_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_array_muxed3 <= sdram_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_array_muxed4 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            t_array_muxed4 <= sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_array_muxed4 <= sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_array_muxed4 <= sdram_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_array_muxed4 <= sdram_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_array_muxed4 <= sdram_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_array_muxed4 <= sdram_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_array_muxed4 <= sdram_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_array_muxed4 <= sdram_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_array_muxed5 <= 1'd0;
    case (sdram_choose_req_grant)
        1'd0: begin
            t_array_muxed5 <= sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_array_muxed5 <= sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_array_muxed5 <= sdram_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_array_muxed5 <= sdram_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_array_muxed5 <= sdram_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_array_muxed5 <= sdram_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_array_muxed5 <= sdram_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_array_muxed5 <= sdram_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed20 <= 20'd0;
    case (basesoc_litedramcore_roundrobin0_grant)
        default: begin
            rhs_array_muxed20 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed21 <= 1'd0;
    case (basesoc_litedramcore_roundrobin0_grant)
        default: begin
            rhs_array_muxed21 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed22 <= 1'd0;
    case (basesoc_litedramcore_roundrobin0_grant)
        default: begin
            rhs_array_muxed22 <= (((port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((basesoc_litedramcore_locked0 | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed23 <= 20'd0;
    case (basesoc_litedramcore_roundrobin1_grant)
        default: begin
            rhs_array_muxed23 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed24 <= 1'd0;
    case (basesoc_litedramcore_roundrobin1_grant)
        default: begin
            rhs_array_muxed24 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed25 <= 1'd0;
    case (basesoc_litedramcore_roundrobin1_grant)
        default: begin
            rhs_array_muxed25 <= (((port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((basesoc_litedramcore_locked1 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed26 <= 20'd0;
    case (basesoc_litedramcore_roundrobin2_grant)
        default: begin
            rhs_array_muxed26 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed27 <= 1'd0;
    case (basesoc_litedramcore_roundrobin2_grant)
        default: begin
            rhs_array_muxed27 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed28 <= 1'd0;
    case (basesoc_litedramcore_roundrobin2_grant)
        default: begin
            rhs_array_muxed28 <= (((port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((basesoc_litedramcore_locked2 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed29 <= 20'd0;
    case (basesoc_litedramcore_roundrobin3_grant)
        default: begin
            rhs_array_muxed29 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed30 <= 1'd0;
    case (basesoc_litedramcore_roundrobin3_grant)
        default: begin
            rhs_array_muxed30 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed31 <= 1'd0;
    case (basesoc_litedramcore_roundrobin3_grant)
        default: begin
            rhs_array_muxed31 <= (((port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((basesoc_litedramcore_locked3 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed32 <= 20'd0;
    case (basesoc_litedramcore_roundrobin4_grant)
        default: begin
            rhs_array_muxed32 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed33 <= 1'd0;
    case (basesoc_litedramcore_roundrobin4_grant)
        default: begin
            rhs_array_muxed33 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed34 <= 1'd0;
    case (basesoc_litedramcore_roundrobin4_grant)
        default: begin
            rhs_array_muxed34 <= (((port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((basesoc_litedramcore_locked4 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed35 <= 20'd0;
    case (basesoc_litedramcore_roundrobin5_grant)
        default: begin
            rhs_array_muxed35 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed36 <= 1'd0;
    case (basesoc_litedramcore_roundrobin5_grant)
        default: begin
            rhs_array_muxed36 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed37 <= 1'd0;
    case (basesoc_litedramcore_roundrobin5_grant)
        default: begin
            rhs_array_muxed37 <= (((port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((basesoc_litedramcore_locked5 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed38 <= 20'd0;
    case (basesoc_litedramcore_roundrobin6_grant)
        default: begin
            rhs_array_muxed38 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed39 <= 1'd0;
    case (basesoc_litedramcore_roundrobin6_grant)
        default: begin
            rhs_array_muxed39 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed40 <= 1'd0;
    case (basesoc_litedramcore_roundrobin6_grant)
        default: begin
            rhs_array_muxed40 <= (((port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((basesoc_litedramcore_locked6 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank7_lock & (basesoc_litedramcore_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed41 <= 20'd0;
    case (basesoc_litedramcore_roundrobin7_grant)
        default: begin
            rhs_array_muxed41 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed42 <= 1'd0;
    case (basesoc_litedramcore_roundrobin7_grant)
        default: begin
            rhs_array_muxed42 <= port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed43 <= 1'd0;
    case (basesoc_litedramcore_roundrobin7_grant)
        default: begin
            rhs_array_muxed43 <= (((port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((basesoc_litedramcore_locked7 | (sdram_interface_bank0_lock & (basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (basesoc_litedramcore_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (basesoc_litedramcore_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (basesoc_litedramcore_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (basesoc_litedramcore_roundrobin6_grant == 1'd0))))) & port_cmd_valid);
        end
    endcase
end
always @(*) begin
    array_muxed0 <= 3'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed0 <= sdram_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed0 <= sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed0 <= sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed0 <= sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed1 <= 13'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed1 <= sdram_nop_a;
        end
        1'd1: begin
            array_muxed1 <= sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed1 <= sdram_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed1 <= sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed2 <= 1'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed2 <= 1'd0;
        end
        1'd1: begin
            array_muxed2 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed2 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed2 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed3 <= 1'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed3 <= 1'd0;
        end
        1'd1: begin
            array_muxed3 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed3 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed3 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed4 <= 1'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed4 <= 1'd0;
        end
        1'd1: begin
            array_muxed4 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed4 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed4 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed5 <= 1'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed5 <= 1'd0;
        end
        1'd1: begin
            array_muxed5 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed5 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed5 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed6 <= 1'd0;
    case (sdram_steerer_sel0)
        1'd0: begin
            array_muxed6 <= 1'd0;
        end
        1'd1: begin
            array_muxed6 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed6 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed6 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed7 <= 3'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed7 <= sdram_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed7 <= sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed7 <= sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed7 <= sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed8 <= 13'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed8 <= sdram_nop_a;
        end
        1'd1: begin
            array_muxed8 <= sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed8 <= sdram_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed8 <= sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed9 <= 1'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed9 <= 1'd0;
        end
        1'd1: begin
            array_muxed9 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed9 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed9 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed10 <= 1'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed10 <= 1'd0;
        end
        1'd1: begin
            array_muxed10 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed10 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed10 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed11 <= 1'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed11 <= 1'd0;
        end
        1'd1: begin
            array_muxed11 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed11 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed11 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed12 <= 1'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed12 <= 1'd0;
        end
        1'd1: begin
            array_muxed12 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed12 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed12 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed13 <= 1'd0;
    case (sdram_steerer_sel1)
        1'd0: begin
            array_muxed13 <= 1'd0;
        end
        1'd1: begin
            array_muxed13 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed13 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed13 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_write);
        end
    endcase
end
assign ddrphy_lock1 = regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge init_clk) begin
    ddrphy_lock_d <= ddrphy_lock1;
    if ((ddrphy_counter == 4'd8)) begin
        ddrphy_freeze <= 1'd1;
    end
    if ((ddrphy_counter == 5'd16)) begin
        ddrphy_stop1 <= 1'd1;
    end
    if ((ddrphy_counter == 5'd24)) begin
        ddrphy_reset1 <= 1'd1;
    end
    if ((ddrphy_counter == 6'd32)) begin
        ddrphy_reset1 <= 1'd0;
    end
    if ((ddrphy_counter == 6'd40)) begin
        ddrphy_stop1 <= 1'd0;
    end
    if ((ddrphy_counter == 6'd48)) begin
        ddrphy_freeze <= 1'd0;
    end
    if ((ddrphy_counter == 6'd56)) begin
        ddrphy_pause1 <= 1'd1;
    end
    if ((ddrphy_counter == 7'd64)) begin
        ddrphy_update <= 1'd1;
    end
    if ((ddrphy_counter == 7'd72)) begin
        ddrphy_update <= 1'd0;
    end
    if ((ddrphy_counter == 7'd80)) begin
        ddrphy_pause1 <= 1'd0;
    end
    if ((ddrphy_counter == 7'd80)) begin
        ddrphy_counter <= 1'd0;
    end else begin
        if ((ddrphy_counter != 1'd0)) begin
            ddrphy_counter <= (ddrphy_counter + 1'd1);
        end else begin
            if (ddrphy_new_lock) begin
                ddrphy_counter <= 1'd1;
            end
        end
    end
    if (init_rst) begin
        ddrphy_update <= 1'd0;
        ddrphy_stop1 <= 1'd0;
        ddrphy_freeze <= 1'd0;
        ddrphy_pause1 <= 1'd0;
        ddrphy_reset1 <= 1'd0;
        ddrphy_lock_d <= 1'd0;
        ddrphy_counter <= 7'd0;
    end
    regs0 <= ddrphy_lock0;
    regs1 <= regs0;
end

always @(posedge por_clk) begin
    if ((~crg_por_done)) begin
        crg_por_count <= (crg_por_count - 1'd1);
    end
end

always @(posedge sys_clk) begin
    slave_sel_r <= slave_sel;
    if (wait_1) begin
        if ((~done)) begin
            count <= (count - 1'd1);
        end
    end else begin
        count <= 20'd1000000;
    end
    if ((bus_errors != 32'd4294967295)) begin
        if (bus_error) begin
            bus_errors <= (bus_errors + 1'd1);
        end
    end
    if (csrbank0_reset0_re) begin
        reset_storage[1:0] <= csrbank0_reset0_r;
    end
    reset_re <= csrbank0_reset0_re;
    if (csrbank0_scratch0_re) begin
        scratch_storage[31:0] <= csrbank0_scratch0_r;
    end
    scratch_re <= csrbank0_scratch0_re;
    bus_errors_re <= csrbank0_bus_errors_re;
    ram_bus_ack <= 1'd0;
    if (((ram_bus_cyc & ram_bus_stb) & ((~ram_bus_ack) | adr_burst))) begin
        ram_bus_ack <= 1'd1;
    end
    if (uart_tx_clear) begin
        uart_tx_pending <= 1'd0;
    end
    uart_tx_trigger_d <= uart_tx_trigger;
    if ((uart_tx_trigger & (~uart_tx_trigger_d))) begin
        uart_tx_pending <= 1'd1;
    end
    if (uart_rx_clear) begin
        uart_rx_pending <= 1'd0;
    end
    uart_rx_trigger_d <= uart_rx_trigger;
    if ((uart_rx_trigger & (~uart_rx_trigger_d))) begin
        uart_rx_pending <= 1'd1;
    end
    if (timer_en_storage) begin
        if ((timer_value == 1'd0)) begin
            timer_value <= timer_reload_storage;
        end else begin
            timer_value <= (timer_value - 1'd1);
        end
    end else begin
        timer_value <= timer_load_storage;
    end
    if (timer_update_value_re) begin
        timer_value_status <= timer_value;
    end
    if (timer_zero_clear) begin
        timer_zero_pending <= 1'd0;
    end
    timer_zero_trigger_d <= timer_zero_trigger;
    if ((timer_zero_trigger & (~timer_zero_trigger_d))) begin
        timer_zero_pending <= 1'd1;
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_rst_re)) begin
        ddrphy_rdly0 <= 1'd0;
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_inc_re)) begin
        ddrphy_rdly0 <= (ddrphy_rdly0 + 1'd1);
    end
    ddrphy_burstdet_d0 <= ddrphy_burstdet0;
    if (ddrphy_burstdet_clr_re) begin
        ddrphy_burstdet_seen_status[0] <= 1'd0;
    end
    if ((ddrphy_burstdet0 & (~ddrphy_burstdet_d0))) begin
        ddrphy_burstdet_seen_status[0] <= 1'd1;
    end
    ddrphy_dm_o_data_d0 <= ddrphy_dm_o_data0;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dm_o_data_muxed0 <= ddrphy_dm_o_data0[3:0];
        end
        1'd1: begin
            ddrphy_dm_o_data_muxed0 <= ddrphy_dm_o_data_d0[7:4];
        end
    endcase
    ddrphy_dq_o_data_d0 <= ddrphy_dq_o_data0;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed0 <= ddrphy_dq_o_data0[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed0 <= ddrphy_dq_o_data_d0[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d0 <= ddrphy_bitslip0_o;
    ddrphy_dq_o_data_d1 <= ddrphy_dq_o_data1;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed1 <= ddrphy_dq_o_data1[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed1 <= ddrphy_dq_o_data_d1[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d1 <= ddrphy_bitslip1_o;
    ddrphy_dq_o_data_d2 <= ddrphy_dq_o_data2;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed2 <= ddrphy_dq_o_data2[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed2 <= ddrphy_dq_o_data_d2[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d2 <= ddrphy_bitslip2_o;
    ddrphy_dq_o_data_d3 <= ddrphy_dq_o_data3;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed3 <= ddrphy_dq_o_data3[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed3 <= ddrphy_dq_o_data_d3[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d3 <= ddrphy_bitslip3_o;
    ddrphy_dq_o_data_d4 <= ddrphy_dq_o_data4;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed4 <= ddrphy_dq_o_data4[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed4 <= ddrphy_dq_o_data_d4[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d4 <= ddrphy_bitslip4_o;
    ddrphy_dq_o_data_d5 <= ddrphy_dq_o_data5;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed5 <= ddrphy_dq_o_data5[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed5 <= ddrphy_dq_o_data_d5[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d5 <= ddrphy_bitslip5_o;
    ddrphy_dq_o_data_d6 <= ddrphy_dq_o_data6;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed6 <= ddrphy_dq_o_data6[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed6 <= ddrphy_dq_o_data_d6[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d6 <= ddrphy_bitslip6_o;
    ddrphy_dq_o_data_d7 <= ddrphy_dq_o_data7;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed7 <= ddrphy_dq_o_data7[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed7 <= ddrphy_dq_o_data_d7[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d7 <= ddrphy_bitslip7_o;
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_rst_re)) begin
        ddrphy_rdly1 <= 1'd0;
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_inc_re)) begin
        ddrphy_rdly1 <= (ddrphy_rdly1 + 1'd1);
    end
    ddrphy_burstdet_d1 <= ddrphy_burstdet1;
    if (ddrphy_burstdet_clr_re) begin
        ddrphy_burstdet_seen_status[1] <= 1'd0;
    end
    if ((ddrphy_burstdet1 & (~ddrphy_burstdet_d1))) begin
        ddrphy_burstdet_seen_status[1] <= 1'd1;
    end
    ddrphy_dm_o_data_d1 <= ddrphy_dm_o_data1;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dm_o_data_muxed1 <= ddrphy_dm_o_data1[3:0];
        end
        1'd1: begin
            ddrphy_dm_o_data_muxed1 <= ddrphy_dm_o_data_d1[7:4];
        end
    endcase
    ddrphy_dq_o_data_d8 <= ddrphy_dq_o_data8;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed8 <= ddrphy_dq_o_data8[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed8 <= ddrphy_dq_o_data_d8[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d8 <= ddrphy_bitslip8_o;
    ddrphy_dq_o_data_d9 <= ddrphy_dq_o_data9;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed9 <= ddrphy_dq_o_data9[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed9 <= ddrphy_dq_o_data_d9[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d9 <= ddrphy_bitslip9_o;
    ddrphy_dq_o_data_d10 <= ddrphy_dq_o_data10;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed10 <= ddrphy_dq_o_data10[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed10 <= ddrphy_dq_o_data_d10[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d10 <= ddrphy_bitslip10_o;
    ddrphy_dq_o_data_d11 <= ddrphy_dq_o_data11;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed11 <= ddrphy_dq_o_data11[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed11 <= ddrphy_dq_o_data_d11[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d11 <= ddrphy_bitslip11_o;
    ddrphy_dq_o_data_d12 <= ddrphy_dq_o_data12;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed12 <= ddrphy_dq_o_data12[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed12 <= ddrphy_dq_o_data_d12[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d12 <= ddrphy_bitslip12_o;
    ddrphy_dq_o_data_d13 <= ddrphy_dq_o_data13;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed13 <= ddrphy_dq_o_data13[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed13 <= ddrphy_dq_o_data_d13[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d13 <= ddrphy_bitslip13_o;
    ddrphy_dq_o_data_d14 <= ddrphy_dq_o_data14;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed14 <= ddrphy_dq_o_data14[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed14 <= ddrphy_dq_o_data_d14[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d14 <= ddrphy_bitslip14_o;
    ddrphy_dq_o_data_d15 <= ddrphy_dq_o_data15;
    case (ddrphy_bl8_chunk)
        1'd0: begin
            ddrphy_dq_o_data_muxed15 <= ddrphy_dq_o_data15[3:0];
        end
        1'd1: begin
            ddrphy_dq_o_data_muxed15 <= ddrphy_dq_o_data_d15[7:4];
        end
    endcase
    ddrphy_dq_i_bitslip_o_d15 <= ddrphy_bitslip15_o;
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip0_value <= (ddrphy_bitslip0_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip0_value <= 1'd0;
    end
    ddrphy_bitslip0_r <= {ddrphy_bitslip0_i, ddrphy_bitslip0_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip1_value <= (ddrphy_bitslip1_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip1_value <= 1'd0;
    end
    ddrphy_bitslip1_r <= {ddrphy_bitslip1_i, ddrphy_bitslip1_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip2_value <= (ddrphy_bitslip2_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip2_value <= 1'd0;
    end
    ddrphy_bitslip2_r <= {ddrphy_bitslip2_i, ddrphy_bitslip2_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip3_value <= (ddrphy_bitslip3_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip3_value <= 1'd0;
    end
    ddrphy_bitslip3_r <= {ddrphy_bitslip3_i, ddrphy_bitslip3_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip4_value <= (ddrphy_bitslip4_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip4_value <= 1'd0;
    end
    ddrphy_bitslip4_r <= {ddrphy_bitslip4_i, ddrphy_bitslip4_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip5_value <= (ddrphy_bitslip5_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip5_value <= 1'd0;
    end
    ddrphy_bitslip5_r <= {ddrphy_bitslip5_i, ddrphy_bitslip5_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip6_value <= (ddrphy_bitslip6_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip6_value <= 1'd0;
    end
    ddrphy_bitslip6_r <= {ddrphy_bitslip6_i, ddrphy_bitslip6_r[7:4]};
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip7_value <= (ddrphy_bitslip7_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip7_value <= 1'd0;
    end
    ddrphy_bitslip7_r <= {ddrphy_bitslip7_i, ddrphy_bitslip7_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip8_value <= (ddrphy_bitslip8_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip8_value <= 1'd0;
    end
    ddrphy_bitslip8_r <= {ddrphy_bitslip8_i, ddrphy_bitslip8_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip9_value <= (ddrphy_bitslip9_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip9_value <= 1'd0;
    end
    ddrphy_bitslip9_r <= {ddrphy_bitslip9_i, ddrphy_bitslip9_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip10_value <= (ddrphy_bitslip10_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip10_value <= 1'd0;
    end
    ddrphy_bitslip10_r <= {ddrphy_bitslip10_i, ddrphy_bitslip10_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip11_value <= (ddrphy_bitslip11_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip11_value <= 1'd0;
    end
    ddrphy_bitslip11_r <= {ddrphy_bitslip11_i, ddrphy_bitslip11_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip12_value <= (ddrphy_bitslip12_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip12_value <= 1'd0;
    end
    ddrphy_bitslip12_r <= {ddrphy_bitslip12_i, ddrphy_bitslip12_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip13_value <= (ddrphy_bitslip13_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip13_value <= 1'd0;
    end
    ddrphy_bitslip13_r <= {ddrphy_bitslip13_i, ddrphy_bitslip13_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip14_value <= (ddrphy_bitslip14_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip14_value <= 1'd0;
    end
    ddrphy_bitslip14_r <= {ddrphy_bitslip14_i, ddrphy_bitslip14_r[7:4]};
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
        ddrphy_bitslip15_value <= (ddrphy_bitslip15_value + 1'd1);
    end
    if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
        ddrphy_bitslip15_value <= 1'd0;
    end
    ddrphy_bitslip15_r <= {ddrphy_bitslip15_i, ddrphy_bitslip15_r[7:4]};
    ddrphy_rddata_en_tappeddelayline0 <= (ddrphy_dfi_p0_rddata_en | ddrphy_dfi_p1_rddata_en);
    ddrphy_rddata_en_tappeddelayline1 <= ddrphy_rddata_en_tappeddelayline0;
    ddrphy_rddata_en_tappeddelayline2 <= ddrphy_rddata_en_tappeddelayline1;
    ddrphy_rddata_en_tappeddelayline3 <= ddrphy_rddata_en_tappeddelayline2;
    ddrphy_rddata_en_tappeddelayline4 <= ddrphy_rddata_en_tappeddelayline3;
    ddrphy_rddata_en_tappeddelayline5 <= ddrphy_rddata_en_tappeddelayline4;
    ddrphy_rddata_en_tappeddelayline6 <= ddrphy_rddata_en_tappeddelayline5;
    ddrphy_rddata_en_tappeddelayline7 <= ddrphy_rddata_en_tappeddelayline6;
    ddrphy_rddata_en_tappeddelayline8 <= ddrphy_rddata_en_tappeddelayline7;
    ddrphy_rddata_en_tappeddelayline9 <= ddrphy_rddata_en_tappeddelayline8;
    ddrphy_rddata_en_tappeddelayline10 <= ddrphy_rddata_en_tappeddelayline9;
    ddrphy_rddata_en_tappeddelayline11 <= ddrphy_rddata_en_tappeddelayline10;
    ddrphy_rddata_en_tappeddelayline12 <= ddrphy_rddata_en_tappeddelayline11;
    ddrphy_wrdata_en_tappeddelayline0 <= (ddrphy_dfi_p0_wrdata_en | ddrphy_dfi_p1_wrdata_en);
    ddrphy_wrdata_en_tappeddelayline1 <= ddrphy_wrdata_en_tappeddelayline0;
    ddrphy_wrdata_en_tappeddelayline2 <= ddrphy_wrdata_en_tappeddelayline1;
    ddrphy_wrdata_en_tappeddelayline3 <= ddrphy_wrdata_en_tappeddelayline2;
    ddrphy_wrdata_en_tappeddelayline4 <= ddrphy_wrdata_en_tappeddelayline3;
    ddrphy_wrdata_en_tappeddelayline5 <= ddrphy_wrdata_en_tappeddelayline4;
    ddrphy_wrdata_en_tappeddelayline6 <= ddrphy_wrdata_en_tappeddelayline5;
    if (sdram_csr_dfi_p0_rddata_valid) begin
        sdram_phaseinjector0_rddata_status <= sdram_csr_dfi_p0_rddata;
    end
    if (sdram_csr_dfi_p1_rddata_valid) begin
        sdram_phaseinjector1_rddata_status <= sdram_csr_dfi_p1_rddata;
    end
    if ((sdram_timer_wait & (~sdram_timer_done0))) begin
        sdram_timer_count1 <= (sdram_timer_count1 - 1'd1);
    end else begin
        sdram_timer_count1 <= 9'd374;
    end
    sdram_postponer_req_o <= 1'd0;
    if (sdram_postponer_req_i) begin
        sdram_postponer_count <= (sdram_postponer_count - 1'd1);
        if ((sdram_postponer_count == 1'd0)) begin
            sdram_postponer_count <= 1'd0;
            sdram_postponer_req_o <= 1'd1;
        end
    end
    if (sdram_sequencer_start0) begin
        sdram_sequencer_count <= 1'd0;
    end else begin
        if (sdram_sequencer_done1) begin
            if ((sdram_sequencer_count != 1'd0)) begin
                sdram_sequencer_count <= (sdram_sequencer_count - 1'd1);
            end
        end
    end
    sdram_cmd_payload_a <= 1'd0;
    sdram_cmd_payload_ba <= 1'd0;
    sdram_cmd_payload_cas <= 1'd0;
    sdram_cmd_payload_ras <= 1'd0;
    sdram_cmd_payload_we <= 1'd0;
    sdram_sequencer_done1 <= 1'd0;
    if ((sdram_sequencer_start1 & (sdram_sequencer_counter == 1'd0))) begin
        sdram_cmd_payload_a <= 11'd1024;
        sdram_cmd_payload_ba <= 1'd0;
        sdram_cmd_payload_cas <= 1'd0;
        sdram_cmd_payload_ras <= 1'd1;
        sdram_cmd_payload_we <= 1'd1;
    end
    if ((sdram_sequencer_counter == 2'd2)) begin
        sdram_cmd_payload_a <= 11'd1024;
        sdram_cmd_payload_ba <= 1'd0;
        sdram_cmd_payload_cas <= 1'd1;
        sdram_cmd_payload_ras <= 1'd1;
        sdram_cmd_payload_we <= 1'd0;
    end
    if ((sdram_sequencer_counter == 7'd66)) begin
        sdram_cmd_payload_a <= 1'd0;
        sdram_cmd_payload_ba <= 1'd0;
        sdram_cmd_payload_cas <= 1'd0;
        sdram_cmd_payload_ras <= 1'd0;
        sdram_cmd_payload_we <= 1'd0;
        sdram_sequencer_done1 <= 1'd1;
    end
    if ((sdram_sequencer_counter == 7'd66)) begin
        sdram_sequencer_counter <= 1'd0;
    end else begin
        if ((sdram_sequencer_counter != 1'd0)) begin
            sdram_sequencer_counter <= (sdram_sequencer_counter + 1'd1);
        end else begin
            if (sdram_sequencer_start1) begin
                sdram_sequencer_counter <= 1'd1;
            end
        end
    end
    if ((sdram_zqcs_timer_wait & (~sdram_zqcs_timer_done0))) begin
        sdram_zqcs_timer_count1 <= (sdram_zqcs_timer_count1 - 1'd1);
    end else begin
        sdram_zqcs_timer_count1 <= 26'd47999999;
    end
    sdram_zqcs_executer_done <= 1'd0;
    if ((sdram_zqcs_executer_start & (sdram_zqcs_executer_counter == 1'd0))) begin
        sdram_cmd_payload_a <= 11'd1024;
        sdram_cmd_payload_ba <= 1'd0;
        sdram_cmd_payload_cas <= 1'd0;
        sdram_cmd_payload_ras <= 1'd1;
        sdram_cmd_payload_we <= 1'd1;
    end
    if ((sdram_zqcs_executer_counter == 2'd2)) begin
        sdram_cmd_payload_a <= 1'd0;
        sdram_cmd_payload_ba <= 1'd0;
        sdram_cmd_payload_cas <= 1'd0;
        sdram_cmd_payload_ras <= 1'd0;
        sdram_cmd_payload_we <= 1'd1;
    end
    if ((sdram_zqcs_executer_counter == 6'd34)) begin
        sdram_cmd_payload_a <= 1'd0;
        sdram_cmd_payload_ba <= 1'd0;
        sdram_cmd_payload_cas <= 1'd0;
        sdram_cmd_payload_ras <= 1'd0;
        sdram_cmd_payload_we <= 1'd0;
        sdram_zqcs_executer_done <= 1'd1;
    end
    if ((sdram_zqcs_executer_counter == 6'd34)) begin
        sdram_zqcs_executer_counter <= 1'd0;
    end else begin
        if ((sdram_zqcs_executer_counter != 1'd0)) begin
            sdram_zqcs_executer_counter <= (sdram_zqcs_executer_counter + 1'd1);
        end else begin
            if (sdram_zqcs_executer_start) begin
                sdram_zqcs_executer_counter <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_refresher_state <= basesoc_litedramcore_refresher_next_state;
    if (sdram_bankmachine0_row_close) begin
        sdram_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine0_row_open) begin
            sdram_bankmachine0_row_opened <= 1'd1;
            sdram_bankmachine0_row <= sdram_bankmachine0_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine0_syncfifo0_we & sdram_bankmachine0_syncfifo0_writable) & (~sdram_bankmachine0_replace))) begin
        sdram_bankmachine0_produce <= (sdram_bankmachine0_produce + 1'd1);
    end
    if (sdram_bankmachine0_do_read) begin
        sdram_bankmachine0_consume <= (sdram_bankmachine0_consume + 1'd1);
    end
    if (((sdram_bankmachine0_syncfifo0_we & sdram_bankmachine0_syncfifo0_writable) & (~sdram_bankmachine0_replace))) begin
        if ((~sdram_bankmachine0_do_read)) begin
            sdram_bankmachine0_level <= (sdram_bankmachine0_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine0_do_read) begin
            sdram_bankmachine0_level <= (sdram_bankmachine0_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine0_pipe_valid_source_valid) | sdram_bankmachine0_pipe_valid_source_ready)) begin
        sdram_bankmachine0_pipe_valid_source_valid <= sdram_bankmachine0_pipe_valid_sink_valid;
        sdram_bankmachine0_pipe_valid_source_first <= sdram_bankmachine0_pipe_valid_sink_first;
        sdram_bankmachine0_pipe_valid_source_last <= sdram_bankmachine0_pipe_valid_sink_last;
        sdram_bankmachine0_pipe_valid_source_payload_we <= sdram_bankmachine0_pipe_valid_sink_payload_we;
        sdram_bankmachine0_pipe_valid_source_payload_addr <= sdram_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine0_twtpcon_valid) begin
        sdram_bankmachine0_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine0_twtpcon_ready)) begin
            sdram_bankmachine0_twtpcon_count <= (sdram_bankmachine0_twtpcon_count - 1'd1);
            if ((sdram_bankmachine0_twtpcon_count == 1'd1)) begin
                sdram_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine0_trccon_valid) begin
        sdram_bankmachine0_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine0_trccon_ready)) begin
            sdram_bankmachine0_trccon_count <= (sdram_bankmachine0_trccon_count - 1'd1);
            if ((sdram_bankmachine0_trccon_count == 1'd1)) begin
                sdram_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine0_trascon_valid) begin
        sdram_bankmachine0_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine0_trascon_ready)) begin
            sdram_bankmachine0_trascon_count <= (sdram_bankmachine0_trascon_count - 1'd1);
            if ((sdram_bankmachine0_trascon_count == 1'd1)) begin
                sdram_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine0_state <= basesoc_litedramcore_bankmachine0_next_state;
    if (sdram_bankmachine1_row_close) begin
        sdram_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine1_row_open) begin
            sdram_bankmachine1_row_opened <= 1'd1;
            sdram_bankmachine1_row <= sdram_bankmachine1_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine1_syncfifo1_we & sdram_bankmachine1_syncfifo1_writable) & (~sdram_bankmachine1_replace))) begin
        sdram_bankmachine1_produce <= (sdram_bankmachine1_produce + 1'd1);
    end
    if (sdram_bankmachine1_do_read) begin
        sdram_bankmachine1_consume <= (sdram_bankmachine1_consume + 1'd1);
    end
    if (((sdram_bankmachine1_syncfifo1_we & sdram_bankmachine1_syncfifo1_writable) & (~sdram_bankmachine1_replace))) begin
        if ((~sdram_bankmachine1_do_read)) begin
            sdram_bankmachine1_level <= (sdram_bankmachine1_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine1_do_read) begin
            sdram_bankmachine1_level <= (sdram_bankmachine1_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine1_pipe_valid_source_valid) | sdram_bankmachine1_pipe_valid_source_ready)) begin
        sdram_bankmachine1_pipe_valid_source_valid <= sdram_bankmachine1_pipe_valid_sink_valid;
        sdram_bankmachine1_pipe_valid_source_first <= sdram_bankmachine1_pipe_valid_sink_first;
        sdram_bankmachine1_pipe_valid_source_last <= sdram_bankmachine1_pipe_valid_sink_last;
        sdram_bankmachine1_pipe_valid_source_payload_we <= sdram_bankmachine1_pipe_valid_sink_payload_we;
        sdram_bankmachine1_pipe_valid_source_payload_addr <= sdram_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine1_twtpcon_valid) begin
        sdram_bankmachine1_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine1_twtpcon_ready)) begin
            sdram_bankmachine1_twtpcon_count <= (sdram_bankmachine1_twtpcon_count - 1'd1);
            if ((sdram_bankmachine1_twtpcon_count == 1'd1)) begin
                sdram_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine1_trccon_valid) begin
        sdram_bankmachine1_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine1_trccon_ready)) begin
            sdram_bankmachine1_trccon_count <= (sdram_bankmachine1_trccon_count - 1'd1);
            if ((sdram_bankmachine1_trccon_count == 1'd1)) begin
                sdram_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine1_trascon_valid) begin
        sdram_bankmachine1_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine1_trascon_ready)) begin
            sdram_bankmachine1_trascon_count <= (sdram_bankmachine1_trascon_count - 1'd1);
            if ((sdram_bankmachine1_trascon_count == 1'd1)) begin
                sdram_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine1_state <= basesoc_litedramcore_bankmachine1_next_state;
    if (sdram_bankmachine2_row_close) begin
        sdram_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine2_row_open) begin
            sdram_bankmachine2_row_opened <= 1'd1;
            sdram_bankmachine2_row <= sdram_bankmachine2_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine2_syncfifo2_we & sdram_bankmachine2_syncfifo2_writable) & (~sdram_bankmachine2_replace))) begin
        sdram_bankmachine2_produce <= (sdram_bankmachine2_produce + 1'd1);
    end
    if (sdram_bankmachine2_do_read) begin
        sdram_bankmachine2_consume <= (sdram_bankmachine2_consume + 1'd1);
    end
    if (((sdram_bankmachine2_syncfifo2_we & sdram_bankmachine2_syncfifo2_writable) & (~sdram_bankmachine2_replace))) begin
        if ((~sdram_bankmachine2_do_read)) begin
            sdram_bankmachine2_level <= (sdram_bankmachine2_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine2_do_read) begin
            sdram_bankmachine2_level <= (sdram_bankmachine2_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine2_pipe_valid_source_valid) | sdram_bankmachine2_pipe_valid_source_ready)) begin
        sdram_bankmachine2_pipe_valid_source_valid <= sdram_bankmachine2_pipe_valid_sink_valid;
        sdram_bankmachine2_pipe_valid_source_first <= sdram_bankmachine2_pipe_valid_sink_first;
        sdram_bankmachine2_pipe_valid_source_last <= sdram_bankmachine2_pipe_valid_sink_last;
        sdram_bankmachine2_pipe_valid_source_payload_we <= sdram_bankmachine2_pipe_valid_sink_payload_we;
        sdram_bankmachine2_pipe_valid_source_payload_addr <= sdram_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine2_twtpcon_valid) begin
        sdram_bankmachine2_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine2_twtpcon_ready)) begin
            sdram_bankmachine2_twtpcon_count <= (sdram_bankmachine2_twtpcon_count - 1'd1);
            if ((sdram_bankmachine2_twtpcon_count == 1'd1)) begin
                sdram_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine2_trccon_valid) begin
        sdram_bankmachine2_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine2_trccon_ready)) begin
            sdram_bankmachine2_trccon_count <= (sdram_bankmachine2_trccon_count - 1'd1);
            if ((sdram_bankmachine2_trccon_count == 1'd1)) begin
                sdram_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine2_trascon_valid) begin
        sdram_bankmachine2_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine2_trascon_ready)) begin
            sdram_bankmachine2_trascon_count <= (sdram_bankmachine2_trascon_count - 1'd1);
            if ((sdram_bankmachine2_trascon_count == 1'd1)) begin
                sdram_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine2_state <= basesoc_litedramcore_bankmachine2_next_state;
    if (sdram_bankmachine3_row_close) begin
        sdram_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine3_row_open) begin
            sdram_bankmachine3_row_opened <= 1'd1;
            sdram_bankmachine3_row <= sdram_bankmachine3_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine3_syncfifo3_we & sdram_bankmachine3_syncfifo3_writable) & (~sdram_bankmachine3_replace))) begin
        sdram_bankmachine3_produce <= (sdram_bankmachine3_produce + 1'd1);
    end
    if (sdram_bankmachine3_do_read) begin
        sdram_bankmachine3_consume <= (sdram_bankmachine3_consume + 1'd1);
    end
    if (((sdram_bankmachine3_syncfifo3_we & sdram_bankmachine3_syncfifo3_writable) & (~sdram_bankmachine3_replace))) begin
        if ((~sdram_bankmachine3_do_read)) begin
            sdram_bankmachine3_level <= (sdram_bankmachine3_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine3_do_read) begin
            sdram_bankmachine3_level <= (sdram_bankmachine3_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine3_pipe_valid_source_valid) | sdram_bankmachine3_pipe_valid_source_ready)) begin
        sdram_bankmachine3_pipe_valid_source_valid <= sdram_bankmachine3_pipe_valid_sink_valid;
        sdram_bankmachine3_pipe_valid_source_first <= sdram_bankmachine3_pipe_valid_sink_first;
        sdram_bankmachine3_pipe_valid_source_last <= sdram_bankmachine3_pipe_valid_sink_last;
        sdram_bankmachine3_pipe_valid_source_payload_we <= sdram_bankmachine3_pipe_valid_sink_payload_we;
        sdram_bankmachine3_pipe_valid_source_payload_addr <= sdram_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine3_twtpcon_valid) begin
        sdram_bankmachine3_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine3_twtpcon_ready)) begin
            sdram_bankmachine3_twtpcon_count <= (sdram_bankmachine3_twtpcon_count - 1'd1);
            if ((sdram_bankmachine3_twtpcon_count == 1'd1)) begin
                sdram_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine3_trccon_valid) begin
        sdram_bankmachine3_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine3_trccon_ready)) begin
            sdram_bankmachine3_trccon_count <= (sdram_bankmachine3_trccon_count - 1'd1);
            if ((sdram_bankmachine3_trccon_count == 1'd1)) begin
                sdram_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine3_trascon_valid) begin
        sdram_bankmachine3_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine3_trascon_ready)) begin
            sdram_bankmachine3_trascon_count <= (sdram_bankmachine3_trascon_count - 1'd1);
            if ((sdram_bankmachine3_trascon_count == 1'd1)) begin
                sdram_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine3_state <= basesoc_litedramcore_bankmachine3_next_state;
    if (sdram_bankmachine4_row_close) begin
        sdram_bankmachine4_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine4_row_open) begin
            sdram_bankmachine4_row_opened <= 1'd1;
            sdram_bankmachine4_row <= sdram_bankmachine4_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine4_syncfifo4_we & sdram_bankmachine4_syncfifo4_writable) & (~sdram_bankmachine4_replace))) begin
        sdram_bankmachine4_produce <= (sdram_bankmachine4_produce + 1'd1);
    end
    if (sdram_bankmachine4_do_read) begin
        sdram_bankmachine4_consume <= (sdram_bankmachine4_consume + 1'd1);
    end
    if (((sdram_bankmachine4_syncfifo4_we & sdram_bankmachine4_syncfifo4_writable) & (~sdram_bankmachine4_replace))) begin
        if ((~sdram_bankmachine4_do_read)) begin
            sdram_bankmachine4_level <= (sdram_bankmachine4_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine4_do_read) begin
            sdram_bankmachine4_level <= (sdram_bankmachine4_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine4_pipe_valid_source_valid) | sdram_bankmachine4_pipe_valid_source_ready)) begin
        sdram_bankmachine4_pipe_valid_source_valid <= sdram_bankmachine4_pipe_valid_sink_valid;
        sdram_bankmachine4_pipe_valid_source_first <= sdram_bankmachine4_pipe_valid_sink_first;
        sdram_bankmachine4_pipe_valid_source_last <= sdram_bankmachine4_pipe_valid_sink_last;
        sdram_bankmachine4_pipe_valid_source_payload_we <= sdram_bankmachine4_pipe_valid_sink_payload_we;
        sdram_bankmachine4_pipe_valid_source_payload_addr <= sdram_bankmachine4_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine4_twtpcon_valid) begin
        sdram_bankmachine4_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine4_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine4_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine4_twtpcon_ready)) begin
            sdram_bankmachine4_twtpcon_count <= (sdram_bankmachine4_twtpcon_count - 1'd1);
            if ((sdram_bankmachine4_twtpcon_count == 1'd1)) begin
                sdram_bankmachine4_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine4_trccon_valid) begin
        sdram_bankmachine4_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine4_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine4_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine4_trccon_ready)) begin
            sdram_bankmachine4_trccon_count <= (sdram_bankmachine4_trccon_count - 1'd1);
            if ((sdram_bankmachine4_trccon_count == 1'd1)) begin
                sdram_bankmachine4_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine4_trascon_valid) begin
        sdram_bankmachine4_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine4_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine4_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine4_trascon_ready)) begin
            sdram_bankmachine4_trascon_count <= (sdram_bankmachine4_trascon_count - 1'd1);
            if ((sdram_bankmachine4_trascon_count == 1'd1)) begin
                sdram_bankmachine4_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine4_state <= basesoc_litedramcore_bankmachine4_next_state;
    if (sdram_bankmachine5_row_close) begin
        sdram_bankmachine5_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine5_row_open) begin
            sdram_bankmachine5_row_opened <= 1'd1;
            sdram_bankmachine5_row <= sdram_bankmachine5_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine5_syncfifo5_we & sdram_bankmachine5_syncfifo5_writable) & (~sdram_bankmachine5_replace))) begin
        sdram_bankmachine5_produce <= (sdram_bankmachine5_produce + 1'd1);
    end
    if (sdram_bankmachine5_do_read) begin
        sdram_bankmachine5_consume <= (sdram_bankmachine5_consume + 1'd1);
    end
    if (((sdram_bankmachine5_syncfifo5_we & sdram_bankmachine5_syncfifo5_writable) & (~sdram_bankmachine5_replace))) begin
        if ((~sdram_bankmachine5_do_read)) begin
            sdram_bankmachine5_level <= (sdram_bankmachine5_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine5_do_read) begin
            sdram_bankmachine5_level <= (sdram_bankmachine5_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine5_pipe_valid_source_valid) | sdram_bankmachine5_pipe_valid_source_ready)) begin
        sdram_bankmachine5_pipe_valid_source_valid <= sdram_bankmachine5_pipe_valid_sink_valid;
        sdram_bankmachine5_pipe_valid_source_first <= sdram_bankmachine5_pipe_valid_sink_first;
        sdram_bankmachine5_pipe_valid_source_last <= sdram_bankmachine5_pipe_valid_sink_last;
        sdram_bankmachine5_pipe_valid_source_payload_we <= sdram_bankmachine5_pipe_valid_sink_payload_we;
        sdram_bankmachine5_pipe_valid_source_payload_addr <= sdram_bankmachine5_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine5_twtpcon_valid) begin
        sdram_bankmachine5_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine5_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine5_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine5_twtpcon_ready)) begin
            sdram_bankmachine5_twtpcon_count <= (sdram_bankmachine5_twtpcon_count - 1'd1);
            if ((sdram_bankmachine5_twtpcon_count == 1'd1)) begin
                sdram_bankmachine5_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine5_trccon_valid) begin
        sdram_bankmachine5_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine5_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine5_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine5_trccon_ready)) begin
            sdram_bankmachine5_trccon_count <= (sdram_bankmachine5_trccon_count - 1'd1);
            if ((sdram_bankmachine5_trccon_count == 1'd1)) begin
                sdram_bankmachine5_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine5_trascon_valid) begin
        sdram_bankmachine5_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine5_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine5_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine5_trascon_ready)) begin
            sdram_bankmachine5_trascon_count <= (sdram_bankmachine5_trascon_count - 1'd1);
            if ((sdram_bankmachine5_trascon_count == 1'd1)) begin
                sdram_bankmachine5_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine5_state <= basesoc_litedramcore_bankmachine5_next_state;
    if (sdram_bankmachine6_row_close) begin
        sdram_bankmachine6_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine6_row_open) begin
            sdram_bankmachine6_row_opened <= 1'd1;
            sdram_bankmachine6_row <= sdram_bankmachine6_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine6_syncfifo6_we & sdram_bankmachine6_syncfifo6_writable) & (~sdram_bankmachine6_replace))) begin
        sdram_bankmachine6_produce <= (sdram_bankmachine6_produce + 1'd1);
    end
    if (sdram_bankmachine6_do_read) begin
        sdram_bankmachine6_consume <= (sdram_bankmachine6_consume + 1'd1);
    end
    if (((sdram_bankmachine6_syncfifo6_we & sdram_bankmachine6_syncfifo6_writable) & (~sdram_bankmachine6_replace))) begin
        if ((~sdram_bankmachine6_do_read)) begin
            sdram_bankmachine6_level <= (sdram_bankmachine6_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine6_do_read) begin
            sdram_bankmachine6_level <= (sdram_bankmachine6_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine6_pipe_valid_source_valid) | sdram_bankmachine6_pipe_valid_source_ready)) begin
        sdram_bankmachine6_pipe_valid_source_valid <= sdram_bankmachine6_pipe_valid_sink_valid;
        sdram_bankmachine6_pipe_valid_source_first <= sdram_bankmachine6_pipe_valid_sink_first;
        sdram_bankmachine6_pipe_valid_source_last <= sdram_bankmachine6_pipe_valid_sink_last;
        sdram_bankmachine6_pipe_valid_source_payload_we <= sdram_bankmachine6_pipe_valid_sink_payload_we;
        sdram_bankmachine6_pipe_valid_source_payload_addr <= sdram_bankmachine6_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine6_twtpcon_valid) begin
        sdram_bankmachine6_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine6_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine6_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine6_twtpcon_ready)) begin
            sdram_bankmachine6_twtpcon_count <= (sdram_bankmachine6_twtpcon_count - 1'd1);
            if ((sdram_bankmachine6_twtpcon_count == 1'd1)) begin
                sdram_bankmachine6_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine6_trccon_valid) begin
        sdram_bankmachine6_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine6_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine6_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine6_trccon_ready)) begin
            sdram_bankmachine6_trccon_count <= (sdram_bankmachine6_trccon_count - 1'd1);
            if ((sdram_bankmachine6_trccon_count == 1'd1)) begin
                sdram_bankmachine6_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine6_trascon_valid) begin
        sdram_bankmachine6_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine6_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine6_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine6_trascon_ready)) begin
            sdram_bankmachine6_trascon_count <= (sdram_bankmachine6_trascon_count - 1'd1);
            if ((sdram_bankmachine6_trascon_count == 1'd1)) begin
                sdram_bankmachine6_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine6_state <= basesoc_litedramcore_bankmachine6_next_state;
    if (sdram_bankmachine7_row_close) begin
        sdram_bankmachine7_row_opened <= 1'd0;
    end else begin
        if (sdram_bankmachine7_row_open) begin
            sdram_bankmachine7_row_opened <= 1'd1;
            sdram_bankmachine7_row <= sdram_bankmachine7_source_source_payload_addr[19:7];
        end
    end
    if (((sdram_bankmachine7_syncfifo7_we & sdram_bankmachine7_syncfifo7_writable) & (~sdram_bankmachine7_replace))) begin
        sdram_bankmachine7_produce <= (sdram_bankmachine7_produce + 1'd1);
    end
    if (sdram_bankmachine7_do_read) begin
        sdram_bankmachine7_consume <= (sdram_bankmachine7_consume + 1'd1);
    end
    if (((sdram_bankmachine7_syncfifo7_we & sdram_bankmachine7_syncfifo7_writable) & (~sdram_bankmachine7_replace))) begin
        if ((~sdram_bankmachine7_do_read)) begin
            sdram_bankmachine7_level <= (sdram_bankmachine7_level + 1'd1);
        end
    end else begin
        if (sdram_bankmachine7_do_read) begin
            sdram_bankmachine7_level <= (sdram_bankmachine7_level - 1'd1);
        end
    end
    if (((~sdram_bankmachine7_pipe_valid_source_valid) | sdram_bankmachine7_pipe_valid_source_ready)) begin
        sdram_bankmachine7_pipe_valid_source_valid <= sdram_bankmachine7_pipe_valid_sink_valid;
        sdram_bankmachine7_pipe_valid_source_first <= sdram_bankmachine7_pipe_valid_sink_first;
        sdram_bankmachine7_pipe_valid_source_last <= sdram_bankmachine7_pipe_valid_sink_last;
        sdram_bankmachine7_pipe_valid_source_payload_we <= sdram_bankmachine7_pipe_valid_sink_payload_we;
        sdram_bankmachine7_pipe_valid_source_payload_addr <= sdram_bankmachine7_pipe_valid_sink_payload_addr;
    end
    if (sdram_bankmachine7_twtpcon_valid) begin
        sdram_bankmachine7_twtpcon_count <= 3'd6;
        if (1'd0) begin
            sdram_bankmachine7_twtpcon_ready <= 1'd1;
        end else begin
            sdram_bankmachine7_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine7_twtpcon_ready)) begin
            sdram_bankmachine7_twtpcon_count <= (sdram_bankmachine7_twtpcon_count - 1'd1);
            if ((sdram_bankmachine7_twtpcon_count == 1'd1)) begin
                sdram_bankmachine7_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine7_trccon_valid) begin
        sdram_bankmachine7_trccon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine7_trccon_ready <= 1'd1;
        end else begin
            sdram_bankmachine7_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine7_trccon_ready)) begin
            sdram_bankmachine7_trccon_count <= (sdram_bankmachine7_trccon_count - 1'd1);
            if ((sdram_bankmachine7_trccon_count == 1'd1)) begin
                sdram_bankmachine7_trccon_ready <= 1'd1;
            end
        end
    end
    if (sdram_bankmachine7_trascon_valid) begin
        sdram_bankmachine7_trascon_count <= 2'd2;
        if (1'd0) begin
            sdram_bankmachine7_trascon_ready <= 1'd1;
        end else begin
            sdram_bankmachine7_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_bankmachine7_trascon_ready)) begin
            sdram_bankmachine7_trascon_count <= (sdram_bankmachine7_trascon_count - 1'd1);
            if ((sdram_bankmachine7_trascon_count == 1'd1)) begin
                sdram_bankmachine7_trascon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_bankmachine7_state <= basesoc_litedramcore_bankmachine7_next_state;
    if ((~sdram_en0)) begin
        sdram_time0 <= 5'd31;
    end else begin
        if ((~sdram_max_time0)) begin
            sdram_time0 <= (sdram_time0 - 1'd1);
        end
    end
    if ((~sdram_en1)) begin
        sdram_time1 <= 4'd15;
    end else begin
        if ((~sdram_max_time1)) begin
            sdram_time1 <= (sdram_time1 - 1'd1);
        end
    end
    if (sdram_choose_cmd_ce) begin
        case (sdram_choose_cmd_grant)
            1'd0: begin
                if (sdram_choose_cmd_request[1]) begin
                    sdram_choose_cmd_grant <= 1'd1;
                end else begin
                    if (sdram_choose_cmd_request[2]) begin
                        sdram_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (sdram_choose_cmd_request[3]) begin
                            sdram_choose_cmd_grant <= 2'd3;
                        end else begin
                            if (sdram_choose_cmd_request[4]) begin
                                sdram_choose_cmd_grant <= 3'd4;
                            end else begin
                                if (sdram_choose_cmd_request[5]) begin
                                    sdram_choose_cmd_grant <= 3'd5;
                                end else begin
                                    if (sdram_choose_cmd_request[6]) begin
                                        sdram_choose_cmd_grant <= 3'd6;
                                    end else begin
                                        if (sdram_choose_cmd_request[7]) begin
                                            sdram_choose_cmd_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (sdram_choose_cmd_request[2]) begin
                    sdram_choose_cmd_grant <= 2'd2;
                end else begin
                    if (sdram_choose_cmd_request[3]) begin
                        sdram_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (sdram_choose_cmd_request[4]) begin
                            sdram_choose_cmd_grant <= 3'd4;
                        end else begin
                            if (sdram_choose_cmd_request[5]) begin
                                sdram_choose_cmd_grant <= 3'd5;
                            end else begin
                                if (sdram_choose_cmd_request[6]) begin
                                    sdram_choose_cmd_grant <= 3'd6;
                                end else begin
                                    if (sdram_choose_cmd_request[7]) begin
                                        sdram_choose_cmd_grant <= 3'd7;
                                    end else begin
                                        if (sdram_choose_cmd_request[0]) begin
                                            sdram_choose_cmd_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (sdram_choose_cmd_request[3]) begin
                    sdram_choose_cmd_grant <= 2'd3;
                end else begin
                    if (sdram_choose_cmd_request[4]) begin
                        sdram_choose_cmd_grant <= 3'd4;
                    end else begin
                        if (sdram_choose_cmd_request[5]) begin
                            sdram_choose_cmd_grant <= 3'd5;
                        end else begin
                            if (sdram_choose_cmd_request[6]) begin
                                sdram_choose_cmd_grant <= 3'd6;
                            end else begin
                                if (sdram_choose_cmd_request[7]) begin
                                    sdram_choose_cmd_grant <= 3'd7;
                                end else begin
                                    if (sdram_choose_cmd_request[0]) begin
                                        sdram_choose_cmd_grant <= 1'd0;
                                    end else begin
                                        if (sdram_choose_cmd_request[1]) begin
                                            sdram_choose_cmd_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (sdram_choose_cmd_request[4]) begin
                    sdram_choose_cmd_grant <= 3'd4;
                end else begin
                    if (sdram_choose_cmd_request[5]) begin
                        sdram_choose_cmd_grant <= 3'd5;
                    end else begin
                        if (sdram_choose_cmd_request[6]) begin
                            sdram_choose_cmd_grant <= 3'd6;
                        end else begin
                            if (sdram_choose_cmd_request[7]) begin
                                sdram_choose_cmd_grant <= 3'd7;
                            end else begin
                                if (sdram_choose_cmd_request[0]) begin
                                    sdram_choose_cmd_grant <= 1'd0;
                                end else begin
                                    if (sdram_choose_cmd_request[1]) begin
                                        sdram_choose_cmd_grant <= 1'd1;
                                    end else begin
                                        if (sdram_choose_cmd_request[2]) begin
                                            sdram_choose_cmd_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (sdram_choose_cmd_request[5]) begin
                    sdram_choose_cmd_grant <= 3'd5;
                end else begin
                    if (sdram_choose_cmd_request[6]) begin
                        sdram_choose_cmd_grant <= 3'd6;
                    end else begin
                        if (sdram_choose_cmd_request[7]) begin
                            sdram_choose_cmd_grant <= 3'd7;
                        end else begin
                            if (sdram_choose_cmd_request[0]) begin
                                sdram_choose_cmd_grant <= 1'd0;
                            end else begin
                                if (sdram_choose_cmd_request[1]) begin
                                    sdram_choose_cmd_grant <= 1'd1;
                                end else begin
                                    if (sdram_choose_cmd_request[2]) begin
                                        sdram_choose_cmd_grant <= 2'd2;
                                    end else begin
                                        if (sdram_choose_cmd_request[3]) begin
                                            sdram_choose_cmd_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (sdram_choose_cmd_request[6]) begin
                    sdram_choose_cmd_grant <= 3'd6;
                end else begin
                    if (sdram_choose_cmd_request[7]) begin
                        sdram_choose_cmd_grant <= 3'd7;
                    end else begin
                        if (sdram_choose_cmd_request[0]) begin
                            sdram_choose_cmd_grant <= 1'd0;
                        end else begin
                            if (sdram_choose_cmd_request[1]) begin
                                sdram_choose_cmd_grant <= 1'd1;
                            end else begin
                                if (sdram_choose_cmd_request[2]) begin
                                    sdram_choose_cmd_grant <= 2'd2;
                                end else begin
                                    if (sdram_choose_cmd_request[3]) begin
                                        sdram_choose_cmd_grant <= 2'd3;
                                    end else begin
                                        if (sdram_choose_cmd_request[4]) begin
                                            sdram_choose_cmd_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (sdram_choose_cmd_request[7]) begin
                    sdram_choose_cmd_grant <= 3'd7;
                end else begin
                    if (sdram_choose_cmd_request[0]) begin
                        sdram_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (sdram_choose_cmd_request[1]) begin
                            sdram_choose_cmd_grant <= 1'd1;
                        end else begin
                            if (sdram_choose_cmd_request[2]) begin
                                sdram_choose_cmd_grant <= 2'd2;
                            end else begin
                                if (sdram_choose_cmd_request[3]) begin
                                    sdram_choose_cmd_grant <= 2'd3;
                                end else begin
                                    if (sdram_choose_cmd_request[4]) begin
                                        sdram_choose_cmd_grant <= 3'd4;
                                    end else begin
                                        if (sdram_choose_cmd_request[5]) begin
                                            sdram_choose_cmd_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (sdram_choose_cmd_request[0]) begin
                    sdram_choose_cmd_grant <= 1'd0;
                end else begin
                    if (sdram_choose_cmd_request[1]) begin
                        sdram_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (sdram_choose_cmd_request[2]) begin
                            sdram_choose_cmd_grant <= 2'd2;
                        end else begin
                            if (sdram_choose_cmd_request[3]) begin
                                sdram_choose_cmd_grant <= 2'd3;
                            end else begin
                                if (sdram_choose_cmd_request[4]) begin
                                    sdram_choose_cmd_grant <= 3'd4;
                                end else begin
                                    if (sdram_choose_cmd_request[5]) begin
                                        sdram_choose_cmd_grant <= 3'd5;
                                    end else begin
                                        if (sdram_choose_cmd_request[6]) begin
                                            sdram_choose_cmd_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    if (sdram_choose_req_ce) begin
        case (sdram_choose_req_grant)
            1'd0: begin
                if (sdram_choose_req_request[1]) begin
                    sdram_choose_req_grant <= 1'd1;
                end else begin
                    if (sdram_choose_req_request[2]) begin
                        sdram_choose_req_grant <= 2'd2;
                    end else begin
                        if (sdram_choose_req_request[3]) begin
                            sdram_choose_req_grant <= 2'd3;
                        end else begin
                            if (sdram_choose_req_request[4]) begin
                                sdram_choose_req_grant <= 3'd4;
                            end else begin
                                if (sdram_choose_req_request[5]) begin
                                    sdram_choose_req_grant <= 3'd5;
                                end else begin
                                    if (sdram_choose_req_request[6]) begin
                                        sdram_choose_req_grant <= 3'd6;
                                    end else begin
                                        if (sdram_choose_req_request[7]) begin
                                            sdram_choose_req_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (sdram_choose_req_request[2]) begin
                    sdram_choose_req_grant <= 2'd2;
                end else begin
                    if (sdram_choose_req_request[3]) begin
                        sdram_choose_req_grant <= 2'd3;
                    end else begin
                        if (sdram_choose_req_request[4]) begin
                            sdram_choose_req_grant <= 3'd4;
                        end else begin
                            if (sdram_choose_req_request[5]) begin
                                sdram_choose_req_grant <= 3'd5;
                            end else begin
                                if (sdram_choose_req_request[6]) begin
                                    sdram_choose_req_grant <= 3'd6;
                                end else begin
                                    if (sdram_choose_req_request[7]) begin
                                        sdram_choose_req_grant <= 3'd7;
                                    end else begin
                                        if (sdram_choose_req_request[0]) begin
                                            sdram_choose_req_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (sdram_choose_req_request[3]) begin
                    sdram_choose_req_grant <= 2'd3;
                end else begin
                    if (sdram_choose_req_request[4]) begin
                        sdram_choose_req_grant <= 3'd4;
                    end else begin
                        if (sdram_choose_req_request[5]) begin
                            sdram_choose_req_grant <= 3'd5;
                        end else begin
                            if (sdram_choose_req_request[6]) begin
                                sdram_choose_req_grant <= 3'd6;
                            end else begin
                                if (sdram_choose_req_request[7]) begin
                                    sdram_choose_req_grant <= 3'd7;
                                end else begin
                                    if (sdram_choose_req_request[0]) begin
                                        sdram_choose_req_grant <= 1'd0;
                                    end else begin
                                        if (sdram_choose_req_request[1]) begin
                                            sdram_choose_req_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (sdram_choose_req_request[4]) begin
                    sdram_choose_req_grant <= 3'd4;
                end else begin
                    if (sdram_choose_req_request[5]) begin
                        sdram_choose_req_grant <= 3'd5;
                    end else begin
                        if (sdram_choose_req_request[6]) begin
                            sdram_choose_req_grant <= 3'd6;
                        end else begin
                            if (sdram_choose_req_request[7]) begin
                                sdram_choose_req_grant <= 3'd7;
                            end else begin
                                if (sdram_choose_req_request[0]) begin
                                    sdram_choose_req_grant <= 1'd0;
                                end else begin
                                    if (sdram_choose_req_request[1]) begin
                                        sdram_choose_req_grant <= 1'd1;
                                    end else begin
                                        if (sdram_choose_req_request[2]) begin
                                            sdram_choose_req_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (sdram_choose_req_request[5]) begin
                    sdram_choose_req_grant <= 3'd5;
                end else begin
                    if (sdram_choose_req_request[6]) begin
                        sdram_choose_req_grant <= 3'd6;
                    end else begin
                        if (sdram_choose_req_request[7]) begin
                            sdram_choose_req_grant <= 3'd7;
                        end else begin
                            if (sdram_choose_req_request[0]) begin
                                sdram_choose_req_grant <= 1'd0;
                            end else begin
                                if (sdram_choose_req_request[1]) begin
                                    sdram_choose_req_grant <= 1'd1;
                                end else begin
                                    if (sdram_choose_req_request[2]) begin
                                        sdram_choose_req_grant <= 2'd2;
                                    end else begin
                                        if (sdram_choose_req_request[3]) begin
                                            sdram_choose_req_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (sdram_choose_req_request[6]) begin
                    sdram_choose_req_grant <= 3'd6;
                end else begin
                    if (sdram_choose_req_request[7]) begin
                        sdram_choose_req_grant <= 3'd7;
                    end else begin
                        if (sdram_choose_req_request[0]) begin
                            sdram_choose_req_grant <= 1'd0;
                        end else begin
                            if (sdram_choose_req_request[1]) begin
                                sdram_choose_req_grant <= 1'd1;
                            end else begin
                                if (sdram_choose_req_request[2]) begin
                                    sdram_choose_req_grant <= 2'd2;
                                end else begin
                                    if (sdram_choose_req_request[3]) begin
                                        sdram_choose_req_grant <= 2'd3;
                                    end else begin
                                        if (sdram_choose_req_request[4]) begin
                                            sdram_choose_req_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (sdram_choose_req_request[7]) begin
                    sdram_choose_req_grant <= 3'd7;
                end else begin
                    if (sdram_choose_req_request[0]) begin
                        sdram_choose_req_grant <= 1'd0;
                    end else begin
                        if (sdram_choose_req_request[1]) begin
                            sdram_choose_req_grant <= 1'd1;
                        end else begin
                            if (sdram_choose_req_request[2]) begin
                                sdram_choose_req_grant <= 2'd2;
                            end else begin
                                if (sdram_choose_req_request[3]) begin
                                    sdram_choose_req_grant <= 2'd3;
                                end else begin
                                    if (sdram_choose_req_request[4]) begin
                                        sdram_choose_req_grant <= 3'd4;
                                    end else begin
                                        if (sdram_choose_req_request[5]) begin
                                            sdram_choose_req_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (sdram_choose_req_request[0]) begin
                    sdram_choose_req_grant <= 1'd0;
                end else begin
                    if (sdram_choose_req_request[1]) begin
                        sdram_choose_req_grant <= 1'd1;
                    end else begin
                        if (sdram_choose_req_request[2]) begin
                            sdram_choose_req_grant <= 2'd2;
                        end else begin
                            if (sdram_choose_req_request[3]) begin
                                sdram_choose_req_grant <= 2'd3;
                            end else begin
                                if (sdram_choose_req_request[4]) begin
                                    sdram_choose_req_grant <= 3'd4;
                                end else begin
                                    if (sdram_choose_req_request[5]) begin
                                        sdram_choose_req_grant <= 3'd5;
                                    end else begin
                                        if (sdram_choose_req_request[6]) begin
                                            sdram_choose_req_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    sdram_dfi_p0_cs_n <= 1'd0;
    sdram_dfi_p0_bank <= array_muxed0;
    sdram_dfi_p0_address <= array_muxed1;
    sdram_dfi_p0_cas_n <= (~array_muxed2);
    sdram_dfi_p0_ras_n <= (~array_muxed3);
    sdram_dfi_p0_we_n <= (~array_muxed4);
    sdram_dfi_p0_rddata_en <= array_muxed5;
    sdram_dfi_p0_wrdata_en <= array_muxed6;
    sdram_dfi_p1_cs_n <= 1'd0;
    sdram_dfi_p1_bank <= array_muxed7;
    sdram_dfi_p1_address <= array_muxed8;
    sdram_dfi_p1_cas_n <= (~array_muxed9);
    sdram_dfi_p1_ras_n <= (~array_muxed10);
    sdram_dfi_p1_we_n <= (~array_muxed11);
    sdram_dfi_p1_rddata_en <= array_muxed12;
    sdram_dfi_p1_wrdata_en <= array_muxed13;
    if (sdram_trrdcon_valid) begin
        sdram_trrdcon_count <= 1'd1;
        if (1'd0) begin
            sdram_trrdcon_ready <= 1'd1;
        end else begin
            sdram_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_trrdcon_ready)) begin
            sdram_trrdcon_count <= (sdram_trrdcon_count - 1'd1);
            if ((sdram_trrdcon_count == 1'd1)) begin
                sdram_trrdcon_ready <= 1'd1;
            end
        end
    end
    sdram_tfawcon_window <= {sdram_tfawcon_window, sdram_tfawcon_valid};
    if ((sdram_tfawcon_count < 3'd4)) begin
        if ((sdram_tfawcon_count == 2'd3)) begin
            sdram_tfawcon_ready <= (~sdram_tfawcon_valid);
        end else begin
            sdram_tfawcon_ready <= 1'd1;
        end
    end
    if (sdram_tccdcon_valid) begin
        sdram_tccdcon_count <= 1'd1;
        if (1'd0) begin
            sdram_tccdcon_ready <= 1'd1;
        end else begin
            sdram_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_tccdcon_ready)) begin
            sdram_tccdcon_count <= (sdram_tccdcon_count - 1'd1);
            if ((sdram_tccdcon_count == 1'd1)) begin
                sdram_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (sdram_twtrcon_valid) begin
        sdram_twtrcon_count <= 3'd6;
        if (1'd0) begin
            sdram_twtrcon_ready <= 1'd1;
        end else begin
            sdram_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~sdram_twtrcon_ready)) begin
            sdram_twtrcon_count <= (sdram_twtrcon_count - 1'd1);
            if ((sdram_twtrcon_count == 1'd1)) begin
                sdram_twtrcon_ready <= 1'd1;
            end
        end
    end
    basesoc_litedramcore_multiplexer_state <= basesoc_litedramcore_multiplexer_next_state;
    basesoc_litedramcore_new_master_wdata_ready0 <= ((((((((1'd0 | ((basesoc_litedramcore_roundrobin0_grant == 1'd0) & sdram_interface_bank0_wdata_ready)) | ((basesoc_litedramcore_roundrobin1_grant == 1'd0) & sdram_interface_bank1_wdata_ready)) | ((basesoc_litedramcore_roundrobin2_grant == 1'd0) & sdram_interface_bank2_wdata_ready)) | ((basesoc_litedramcore_roundrobin3_grant == 1'd0) & sdram_interface_bank3_wdata_ready)) | ((basesoc_litedramcore_roundrobin4_grant == 1'd0) & sdram_interface_bank4_wdata_ready)) | ((basesoc_litedramcore_roundrobin5_grant == 1'd0) & sdram_interface_bank5_wdata_ready)) | ((basesoc_litedramcore_roundrobin6_grant == 1'd0) & sdram_interface_bank6_wdata_ready)) | ((basesoc_litedramcore_roundrobin7_grant == 1'd0) & sdram_interface_bank7_wdata_ready));
    basesoc_litedramcore_new_master_wdata_ready1 <= basesoc_litedramcore_new_master_wdata_ready0;
    basesoc_litedramcore_new_master_wdata_ready2 <= basesoc_litedramcore_new_master_wdata_ready1;
    basesoc_litedramcore_new_master_wdata_ready3 <= basesoc_litedramcore_new_master_wdata_ready2;
    basesoc_litedramcore_new_master_rdata_valid0 <= ((((((((1'd0 | ((basesoc_litedramcore_roundrobin0_grant == 1'd0) & sdram_interface_bank0_rdata_valid)) | ((basesoc_litedramcore_roundrobin1_grant == 1'd0) & sdram_interface_bank1_rdata_valid)) | ((basesoc_litedramcore_roundrobin2_grant == 1'd0) & sdram_interface_bank2_rdata_valid)) | ((basesoc_litedramcore_roundrobin3_grant == 1'd0) & sdram_interface_bank3_rdata_valid)) | ((basesoc_litedramcore_roundrobin4_grant == 1'd0) & sdram_interface_bank4_rdata_valid)) | ((basesoc_litedramcore_roundrobin5_grant == 1'd0) & sdram_interface_bank5_rdata_valid)) | ((basesoc_litedramcore_roundrobin6_grant == 1'd0) & sdram_interface_bank6_rdata_valid)) | ((basesoc_litedramcore_roundrobin7_grant == 1'd0) & sdram_interface_bank7_rdata_valid));
    basesoc_litedramcore_new_master_rdata_valid1 <= basesoc_litedramcore_new_master_rdata_valid0;
    basesoc_litedramcore_new_master_rdata_valid2 <= basesoc_litedramcore_new_master_rdata_valid1;
    basesoc_litedramcore_new_master_rdata_valid3 <= basesoc_litedramcore_new_master_rdata_valid2;
    basesoc_litedramcore_new_master_rdata_valid4 <= basesoc_litedramcore_new_master_rdata_valid3;
    basesoc_litedramcore_new_master_rdata_valid5 <= basesoc_litedramcore_new_master_rdata_valid4;
    basesoc_litedramcore_new_master_rdata_valid6 <= basesoc_litedramcore_new_master_rdata_valid5;
    basesoc_litedramcore_new_master_rdata_valid7 <= basesoc_litedramcore_new_master_rdata_valid6;
    basesoc_litedramcore_new_master_rdata_valid8 <= basesoc_litedramcore_new_master_rdata_valid7;
    basesoc_litedramcore_new_master_rdata_valid9 <= basesoc_litedramcore_new_master_rdata_valid8;
    basesoc_litedramcore_new_master_rdata_valid10 <= basesoc_litedramcore_new_master_rdata_valid9;
    basesoc_litedramcore_new_master_rdata_valid11 <= basesoc_litedramcore_new_master_rdata_valid10;
    basesoc_litedramcore_new_master_rdata_valid12 <= basesoc_litedramcore_new_master_rdata_valid11;
    basesoc_litedramcore_new_master_rdata_valid13 <= basesoc_litedramcore_new_master_rdata_valid12;
    basesoc_litedramwishbone2native_state <= basesoc_litedramwishbone2native_next_state;
    if (aborted_litedramwishbone2native_next_value_ce) begin
        aborted <= aborted_litedramwishbone2native_next_value;
    end
    basesoc_wishbone2csr_state <= basesoc_wishbone2csr_next_state;
    if (basesoc_dat_w_wishbone2csr_next_value_ce0) begin
        basesoc_dat_w <= basesoc_dat_w_wishbone2csr_next_value0;
    end
    if (basesoc_adr_wishbone2csr_next_value_ce1) begin
        basesoc_adr <= basesoc_adr_wishbone2csr_next_value1;
    end
    if (basesoc_we_wishbone2csr_next_value_ce2) begin
        basesoc_we <= basesoc_we_wishbone2csr_next_value2;
    end
    interface0_bank_bus_dat_r <= 1'd0;
    if (csrbank0_sel) begin
        case (interface0_bank_bus_adr[8:0])
            1'd0: begin
                interface0_bank_bus_dat_r <= csrbank0_reset0_w;
            end
            1'd1: begin
                interface0_bank_bus_dat_r <= csrbank0_scratch0_w;
            end
            2'd2: begin
                interface0_bank_bus_dat_r <= csrbank0_bus_errors_w;
            end
        endcase
    end
    interface1_bank_bus_dat_r <= 1'd0;
    if (csrbank1_sel) begin
        case (interface1_bank_bus_adr[8:0])
            1'd0: begin
                interface1_bank_bus_dat_r <= csrbank1_dly_sel0_w;
            end
            1'd1: begin
                interface1_bank_bus_dat_r <= ddrphy_rdly_dq_rst_w;
            end
            2'd2: begin
                interface1_bank_bus_dat_r <= ddrphy_rdly_dq_inc_w;
            end
            2'd3: begin
                interface1_bank_bus_dat_r <= ddrphy_rdly_dq_bitslip_rst_w;
            end
            3'd4: begin
                interface1_bank_bus_dat_r <= ddrphy_rdly_dq_bitslip_w;
            end
            3'd5: begin
                interface1_bank_bus_dat_r <= ddrphy_burstdet_clr_w;
            end
            3'd6: begin
                interface1_bank_bus_dat_r <= csrbank1_burstdet_seen_w;
            end
        endcase
    end
    if (csrbank1_dly_sel0_re) begin
        ddrphy_dly_sel_storage[1:0] <= csrbank1_dly_sel0_r;
    end
    ddrphy_dly_sel_re <= csrbank1_dly_sel0_re;
    ddrphy_burstdet_seen_re <= csrbank1_burstdet_seen_re;
    interface2_bank_bus_dat_r <= 1'd0;
    if (csrbank2_sel) begin
        case (interface2_bank_bus_adr[8:0])
            1'd0: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_control0_w;
            end
            1'd1: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_command0_w;
            end
            2'd2: begin
                interface2_bank_bus_dat_r <= sdram_phaseinjector0_command_issue_w;
            end
            2'd3: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_address0_w;
            end
            3'd4: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_wrdata1_w;
            end
            3'd6: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_wrdata0_w;
            end
            3'd7: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_rddata1_w;
            end
            4'd8: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi0_rddata0_w;
            end
            4'd9: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_command0_w;
            end
            4'd10: begin
                interface2_bank_bus_dat_r <= sdram_phaseinjector1_command_issue_w;
            end
            4'd11: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_address0_w;
            end
            4'd12: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_baddress0_w;
            end
            4'd13: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_wrdata1_w;
            end
            4'd14: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_wrdata0_w;
            end
            4'd15: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_rddata1_w;
            end
            5'd16: begin
                interface2_bank_bus_dat_r <= csrbank2_dfii_pi1_rddata0_w;
            end
        endcase
    end
    if (csrbank2_dfii_control0_re) begin
        sdram_storage[3:0] <= csrbank2_dfii_control0_r;
    end
    sdram_re <= csrbank2_dfii_control0_re;
    if (csrbank2_dfii_pi0_command0_re) begin
        sdram_phaseinjector0_command_storage[5:0] <= csrbank2_dfii_pi0_command0_r;
    end
    sdram_phaseinjector0_command_re <= csrbank2_dfii_pi0_command0_re;
    if (csrbank2_dfii_pi0_address0_re) begin
        sdram_phaseinjector0_address_storage[12:0] <= csrbank2_dfii_pi0_address0_r;
    end
    sdram_phaseinjector0_address_re <= csrbank2_dfii_pi0_address0_re;
    if (csrbank2_dfii_pi0_baddress0_re) begin
        sdram_phaseinjector0_baddress_storage[2:0] <= csrbank2_dfii_pi0_baddress0_r;
    end
    sdram_phaseinjector0_baddress_re <= csrbank2_dfii_pi0_baddress0_re;
    if (csrbank2_dfii_pi0_wrdata1_re) begin
        sdram_phaseinjector0_wrdata_storage[63:32] <= csrbank2_dfii_pi0_wrdata1_r;
    end
    if (csrbank2_dfii_pi0_wrdata0_re) begin
        sdram_phaseinjector0_wrdata_storage[31:0] <= csrbank2_dfii_pi0_wrdata0_r;
    end
    sdram_phaseinjector0_wrdata_re <= csrbank2_dfii_pi0_wrdata0_re;
    sdram_phaseinjector0_rddata_re <= csrbank2_dfii_pi0_rddata0_re;
    if (csrbank2_dfii_pi1_command0_re) begin
        sdram_phaseinjector1_command_storage[5:0] <= csrbank2_dfii_pi1_command0_r;
    end
    sdram_phaseinjector1_command_re <= csrbank2_dfii_pi1_command0_re;
    if (csrbank2_dfii_pi1_address0_re) begin
        sdram_phaseinjector1_address_storage[12:0] <= csrbank2_dfii_pi1_address0_r;
    end
    sdram_phaseinjector1_address_re <= csrbank2_dfii_pi1_address0_re;
    if (csrbank2_dfii_pi1_baddress0_re) begin
        sdram_phaseinjector1_baddress_storage[2:0] <= csrbank2_dfii_pi1_baddress0_r;
    end
    sdram_phaseinjector1_baddress_re <= csrbank2_dfii_pi1_baddress0_re;
    if (csrbank2_dfii_pi1_wrdata1_re) begin
        sdram_phaseinjector1_wrdata_storage[63:32] <= csrbank2_dfii_pi1_wrdata1_r;
    end
    if (csrbank2_dfii_pi1_wrdata0_re) begin
        sdram_phaseinjector1_wrdata_storage[31:0] <= csrbank2_dfii_pi1_wrdata0_r;
    end
    sdram_phaseinjector1_wrdata_re <= csrbank2_dfii_pi1_wrdata0_re;
    sdram_phaseinjector1_rddata_re <= csrbank2_dfii_pi1_rddata0_re;
    interface3_bank_bus_dat_r <= 1'd0;
    if (csrbank3_sel) begin
        case (interface3_bank_bus_adr[8:0])
            1'd0: begin
                interface3_bank_bus_dat_r <= csrbank3_load0_w;
            end
            1'd1: begin
                interface3_bank_bus_dat_r <= csrbank3_reload0_w;
            end
            2'd2: begin
                interface3_bank_bus_dat_r <= csrbank3_en0_w;
            end
            2'd3: begin
                interface3_bank_bus_dat_r <= csrbank3_update_value0_w;
            end
            3'd4: begin
                interface3_bank_bus_dat_r <= csrbank3_value_w;
            end
            3'd5: begin
                interface3_bank_bus_dat_r <= csrbank3_ev_status_w;
            end
            3'd6: begin
                interface3_bank_bus_dat_r <= csrbank3_ev_pending_w;
            end
            3'd7: begin
                interface3_bank_bus_dat_r <= csrbank3_ev_enable0_w;
            end
        endcase
    end
    if (csrbank3_load0_re) begin
        timer_load_storage[31:0] <= csrbank3_load0_r;
    end
    timer_load_re <= csrbank3_load0_re;
    if (csrbank3_reload0_re) begin
        timer_reload_storage[31:0] <= csrbank3_reload0_r;
    end
    timer_reload_re <= csrbank3_reload0_re;
    if (csrbank3_en0_re) begin
        timer_en_storage <= csrbank3_en0_r;
    end
    timer_en_re <= csrbank3_en0_re;
    if (csrbank3_update_value0_re) begin
        timer_update_value_storage <= csrbank3_update_value0_r;
    end
    timer_update_value_re <= csrbank3_update_value0_re;
    timer_value_re <= csrbank3_value_re;
    timer_status_re <= csrbank3_ev_status_re;
    if (csrbank3_ev_pending_re) begin
        timer_pending_r <= csrbank3_ev_pending_r;
    end
    timer_pending_re <= csrbank3_ev_pending_re;
    if (csrbank3_ev_enable0_re) begin
        timer_enable_storage <= csrbank3_ev_enable0_r;
    end
    timer_enable_re <= csrbank3_ev_enable0_re;
    interface4_bank_bus_dat_r <= 1'd0;
    if (csrbank4_sel) begin
        case (interface4_bank_bus_adr[8:0])
            1'd0: begin
                interface4_bank_bus_dat_r <= uart_rxtx_w;
            end
            1'd1: begin
                interface4_bank_bus_dat_r <= csrbank4_txfull_w;
            end
            2'd2: begin
                interface4_bank_bus_dat_r <= csrbank4_rxempty_w;
            end
            2'd3: begin
                interface4_bank_bus_dat_r <= csrbank4_ev_status_w;
            end
            3'd4: begin
                interface4_bank_bus_dat_r <= csrbank4_ev_pending_w;
            end
            3'd5: begin
                interface4_bank_bus_dat_r <= csrbank4_ev_enable0_w;
            end
            3'd6: begin
                interface4_bank_bus_dat_r <= csrbank4_txempty_w;
            end
            3'd7: begin
                interface4_bank_bus_dat_r <= csrbank4_rxfull_w;
            end
        endcase
    end
    uart_txfull_re <= csrbank4_txfull_re;
    uart_rxempty_re <= csrbank4_rxempty_re;
    uart_status_re <= csrbank4_ev_status_re;
    if (csrbank4_ev_pending_re) begin
        uart_pending_r[1:0] <= csrbank4_ev_pending_r;
    end
    uart_pending_re <= csrbank4_ev_pending_re;
    if (csrbank4_ev_enable0_re) begin
        uart_enable_storage[1:0] <= csrbank4_ev_enable0_r;
    end
    uart_enable_re <= csrbank4_ev_enable0_re;
    uart_txempty_re <= csrbank4_txempty_re;
    uart_rxfull_re <= csrbank4_rxfull_re;
    if (sys_rst) begin
        reset_storage <= 2'd0;
        reset_re <= 1'd0;
        scratch_storage <= 32'd305419896;
        scratch_re <= 1'd0;
        bus_errors_re <= 1'd0;
        bus_errors <= 32'd0;
        ram_bus_ack <= 1'd0;
        uart_txfull_re <= 1'd0;
        uart_rxempty_re <= 1'd0;
        uart_tx_pending <= 1'd0;
        uart_tx_trigger_d <= 1'd0;
        uart_rx_pending <= 1'd0;
        uart_rx_trigger_d <= 1'd0;
        uart_status_re <= 1'd0;
        uart_pending_re <= 1'd0;
        uart_pending_r <= 2'd0;
        uart_enable_storage <= 2'd0;
        uart_enable_re <= 1'd0;
        uart_txempty_re <= 1'd0;
        uart_rxfull_re <= 1'd0;
        timer_load_storage <= 32'd0;
        timer_load_re <= 1'd0;
        timer_reload_storage <= 32'd0;
        timer_reload_re <= 1'd0;
        timer_en_storage <= 1'd0;
        timer_en_re <= 1'd0;
        timer_update_value_storage <= 1'd0;
        timer_update_value_re <= 1'd0;
        timer_value_status <= 32'd0;
        timer_value_re <= 1'd0;
        timer_zero_pending <= 1'd0;
        timer_zero_trigger_d <= 1'd0;
        timer_status_re <= 1'd0;
        timer_pending_re <= 1'd0;
        timer_pending_r <= 1'd0;
        timer_enable_storage <= 1'd0;
        timer_enable_re <= 1'd0;
        timer_value <= 32'd0;
        ddrphy_dly_sel_storage <= 2'd0;
        ddrphy_dly_sel_re <= 1'd0;
        ddrphy_burstdet_seen_status <= 2'd0;
        ddrphy_burstdet_seen_re <= 1'd0;
        ddrphy_rdly0 <= 3'd0;
        ddrphy_burstdet_d0 <= 1'd0;
        ddrphy_dm_o_data_d0 <= 8'd0;
        ddrphy_dm_o_data_muxed0 <= 4'd0;
        ddrphy_dq_o_data_d0 <= 8'd0;
        ddrphy_dq_o_data_muxed0 <= 4'd0;
        ddrphy_bitslip0_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d0 <= 4'd0;
        ddrphy_dq_o_data_d1 <= 8'd0;
        ddrphy_dq_o_data_muxed1 <= 4'd0;
        ddrphy_bitslip1_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d1 <= 4'd0;
        ddrphy_dq_o_data_d2 <= 8'd0;
        ddrphy_dq_o_data_muxed2 <= 4'd0;
        ddrphy_bitslip2_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d2 <= 4'd0;
        ddrphy_dq_o_data_d3 <= 8'd0;
        ddrphy_dq_o_data_muxed3 <= 4'd0;
        ddrphy_bitslip3_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d3 <= 4'd0;
        ddrphy_dq_o_data_d4 <= 8'd0;
        ddrphy_dq_o_data_muxed4 <= 4'd0;
        ddrphy_bitslip4_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d4 <= 4'd0;
        ddrphy_dq_o_data_d5 <= 8'd0;
        ddrphy_dq_o_data_muxed5 <= 4'd0;
        ddrphy_bitslip5_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d5 <= 4'd0;
        ddrphy_dq_o_data_d6 <= 8'd0;
        ddrphy_dq_o_data_muxed6 <= 4'd0;
        ddrphy_bitslip6_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d6 <= 4'd0;
        ddrphy_dq_o_data_d7 <= 8'd0;
        ddrphy_dq_o_data_muxed7 <= 4'd0;
        ddrphy_bitslip7_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d7 <= 4'd0;
        ddrphy_rdly1 <= 3'd0;
        ddrphy_burstdet_d1 <= 1'd0;
        ddrphy_dm_o_data_d1 <= 8'd0;
        ddrphy_dm_o_data_muxed1 <= 4'd0;
        ddrphy_dq_o_data_d8 <= 8'd0;
        ddrphy_dq_o_data_muxed8 <= 4'd0;
        ddrphy_bitslip8_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d8 <= 4'd0;
        ddrphy_dq_o_data_d9 <= 8'd0;
        ddrphy_dq_o_data_muxed9 <= 4'd0;
        ddrphy_bitslip9_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d9 <= 4'd0;
        ddrphy_dq_o_data_d10 <= 8'd0;
        ddrphy_dq_o_data_muxed10 <= 4'd0;
        ddrphy_bitslip10_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d10 <= 4'd0;
        ddrphy_dq_o_data_d11 <= 8'd0;
        ddrphy_dq_o_data_muxed11 <= 4'd0;
        ddrphy_bitslip11_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d11 <= 4'd0;
        ddrphy_dq_o_data_d12 <= 8'd0;
        ddrphy_dq_o_data_muxed12 <= 4'd0;
        ddrphy_bitslip12_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d12 <= 4'd0;
        ddrphy_dq_o_data_d13 <= 8'd0;
        ddrphy_dq_o_data_muxed13 <= 4'd0;
        ddrphy_bitslip13_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d13 <= 4'd0;
        ddrphy_dq_o_data_d14 <= 8'd0;
        ddrphy_dq_o_data_muxed14 <= 4'd0;
        ddrphy_bitslip14_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d14 <= 4'd0;
        ddrphy_dq_o_data_d15 <= 8'd0;
        ddrphy_dq_o_data_muxed15 <= 4'd0;
        ddrphy_bitslip15_value <= 2'd0;
        ddrphy_dq_i_bitslip_o_d15 <= 4'd0;
        ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline8 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline9 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline10 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline11 <= 1'd0;
        ddrphy_rddata_en_tappeddelayline12 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline3 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline4 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline5 <= 1'd0;
        ddrphy_wrdata_en_tappeddelayline6 <= 1'd0;
        sdram_storage <= 4'd1;
        sdram_re <= 1'd0;
        sdram_phaseinjector0_command_storage <= 6'd0;
        sdram_phaseinjector0_command_re <= 1'd0;
        sdram_phaseinjector0_address_re <= 1'd0;
        sdram_phaseinjector0_baddress_re <= 1'd0;
        sdram_phaseinjector0_wrdata_re <= 1'd0;
        sdram_phaseinjector0_rddata_status <= 64'd0;
        sdram_phaseinjector0_rddata_re <= 1'd0;
        sdram_phaseinjector1_command_storage <= 6'd0;
        sdram_phaseinjector1_command_re <= 1'd0;
        sdram_phaseinjector1_address_re <= 1'd0;
        sdram_phaseinjector1_baddress_re <= 1'd0;
        sdram_phaseinjector1_wrdata_re <= 1'd0;
        sdram_phaseinjector1_rddata_status <= 64'd0;
        sdram_phaseinjector1_rddata_re <= 1'd0;
        sdram_dfi_p0_address <= 13'd0;
        sdram_dfi_p0_bank <= 3'd0;
        sdram_dfi_p0_cas_n <= 1'd1;
        sdram_dfi_p0_cs_n <= 1'd1;
        sdram_dfi_p0_ras_n <= 1'd1;
        sdram_dfi_p0_we_n <= 1'd1;
        sdram_dfi_p0_wrdata_en <= 1'd0;
        sdram_dfi_p0_rddata_en <= 1'd0;
        sdram_dfi_p1_address <= 13'd0;
        sdram_dfi_p1_bank <= 3'd0;
        sdram_dfi_p1_cas_n <= 1'd1;
        sdram_dfi_p1_cs_n <= 1'd1;
        sdram_dfi_p1_ras_n <= 1'd1;
        sdram_dfi_p1_we_n <= 1'd1;
        sdram_dfi_p1_wrdata_en <= 1'd0;
        sdram_dfi_p1_rddata_en <= 1'd0;
        sdram_cmd_payload_a <= 13'd0;
        sdram_cmd_payload_ba <= 3'd0;
        sdram_cmd_payload_cas <= 1'd0;
        sdram_cmd_payload_ras <= 1'd0;
        sdram_cmd_payload_we <= 1'd0;
        sdram_timer_count1 <= 9'd374;
        sdram_postponer_req_o <= 1'd0;
        sdram_postponer_count <= 1'd0;
        sdram_sequencer_done1 <= 1'd0;
        sdram_sequencer_counter <= 7'd0;
        sdram_sequencer_count <= 1'd0;
        sdram_zqcs_timer_count1 <= 26'd47999999;
        sdram_zqcs_executer_done <= 1'd0;
        sdram_zqcs_executer_counter <= 6'd0;
        sdram_bankmachine0_level <= 4'd0;
        sdram_bankmachine0_produce <= 3'd0;
        sdram_bankmachine0_consume <= 3'd0;
        sdram_bankmachine0_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine0_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine0_row <= 13'd0;
        sdram_bankmachine0_row_opened <= 1'd0;
        sdram_bankmachine0_twtpcon_ready <= 1'd0;
        sdram_bankmachine0_twtpcon_count <= 3'd0;
        sdram_bankmachine0_trccon_ready <= 1'd0;
        sdram_bankmachine0_trccon_count <= 2'd0;
        sdram_bankmachine0_trascon_ready <= 1'd0;
        sdram_bankmachine0_trascon_count <= 2'd0;
        sdram_bankmachine1_level <= 4'd0;
        sdram_bankmachine1_produce <= 3'd0;
        sdram_bankmachine1_consume <= 3'd0;
        sdram_bankmachine1_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine1_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine1_row <= 13'd0;
        sdram_bankmachine1_row_opened <= 1'd0;
        sdram_bankmachine1_twtpcon_ready <= 1'd0;
        sdram_bankmachine1_twtpcon_count <= 3'd0;
        sdram_bankmachine1_trccon_ready <= 1'd0;
        sdram_bankmachine1_trccon_count <= 2'd0;
        sdram_bankmachine1_trascon_ready <= 1'd0;
        sdram_bankmachine1_trascon_count <= 2'd0;
        sdram_bankmachine2_level <= 4'd0;
        sdram_bankmachine2_produce <= 3'd0;
        sdram_bankmachine2_consume <= 3'd0;
        sdram_bankmachine2_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine2_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine2_row <= 13'd0;
        sdram_bankmachine2_row_opened <= 1'd0;
        sdram_bankmachine2_twtpcon_ready <= 1'd0;
        sdram_bankmachine2_twtpcon_count <= 3'd0;
        sdram_bankmachine2_trccon_ready <= 1'd0;
        sdram_bankmachine2_trccon_count <= 2'd0;
        sdram_bankmachine2_trascon_ready <= 1'd0;
        sdram_bankmachine2_trascon_count <= 2'd0;
        sdram_bankmachine3_level <= 4'd0;
        sdram_bankmachine3_produce <= 3'd0;
        sdram_bankmachine3_consume <= 3'd0;
        sdram_bankmachine3_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine3_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine3_row <= 13'd0;
        sdram_bankmachine3_row_opened <= 1'd0;
        sdram_bankmachine3_twtpcon_ready <= 1'd0;
        sdram_bankmachine3_twtpcon_count <= 3'd0;
        sdram_bankmachine3_trccon_ready <= 1'd0;
        sdram_bankmachine3_trccon_count <= 2'd0;
        sdram_bankmachine3_trascon_ready <= 1'd0;
        sdram_bankmachine3_trascon_count <= 2'd0;
        sdram_bankmachine4_level <= 4'd0;
        sdram_bankmachine4_produce <= 3'd0;
        sdram_bankmachine4_consume <= 3'd0;
        sdram_bankmachine4_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine4_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine4_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine4_row <= 13'd0;
        sdram_bankmachine4_row_opened <= 1'd0;
        sdram_bankmachine4_twtpcon_ready <= 1'd0;
        sdram_bankmachine4_twtpcon_count <= 3'd0;
        sdram_bankmachine4_trccon_ready <= 1'd0;
        sdram_bankmachine4_trccon_count <= 2'd0;
        sdram_bankmachine4_trascon_ready <= 1'd0;
        sdram_bankmachine4_trascon_count <= 2'd0;
        sdram_bankmachine5_level <= 4'd0;
        sdram_bankmachine5_produce <= 3'd0;
        sdram_bankmachine5_consume <= 3'd0;
        sdram_bankmachine5_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine5_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine5_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine5_row <= 13'd0;
        sdram_bankmachine5_row_opened <= 1'd0;
        sdram_bankmachine5_twtpcon_ready <= 1'd0;
        sdram_bankmachine5_twtpcon_count <= 3'd0;
        sdram_bankmachine5_trccon_ready <= 1'd0;
        sdram_bankmachine5_trccon_count <= 2'd0;
        sdram_bankmachine5_trascon_ready <= 1'd0;
        sdram_bankmachine5_trascon_count <= 2'd0;
        sdram_bankmachine6_level <= 4'd0;
        sdram_bankmachine6_produce <= 3'd0;
        sdram_bankmachine6_consume <= 3'd0;
        sdram_bankmachine6_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine6_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine6_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine6_row <= 13'd0;
        sdram_bankmachine6_row_opened <= 1'd0;
        sdram_bankmachine6_twtpcon_ready <= 1'd0;
        sdram_bankmachine6_twtpcon_count <= 3'd0;
        sdram_bankmachine6_trccon_ready <= 1'd0;
        sdram_bankmachine6_trccon_count <= 2'd0;
        sdram_bankmachine6_trascon_ready <= 1'd0;
        sdram_bankmachine6_trascon_count <= 2'd0;
        sdram_bankmachine7_level <= 4'd0;
        sdram_bankmachine7_produce <= 3'd0;
        sdram_bankmachine7_consume <= 3'd0;
        sdram_bankmachine7_pipe_valid_source_valid <= 1'd0;
        sdram_bankmachine7_pipe_valid_source_payload_we <= 1'd0;
        sdram_bankmachine7_pipe_valid_source_payload_addr <= 20'd0;
        sdram_bankmachine7_row <= 13'd0;
        sdram_bankmachine7_row_opened <= 1'd0;
        sdram_bankmachine7_twtpcon_ready <= 1'd0;
        sdram_bankmachine7_twtpcon_count <= 3'd0;
        sdram_bankmachine7_trccon_ready <= 1'd0;
        sdram_bankmachine7_trccon_count <= 2'd0;
        sdram_bankmachine7_trascon_ready <= 1'd0;
        sdram_bankmachine7_trascon_count <= 2'd0;
        sdram_choose_cmd_grant <= 3'd0;
        sdram_choose_req_grant <= 3'd0;
        sdram_trrdcon_ready <= 1'd0;
        sdram_trrdcon_count <= 1'd0;
        sdram_tfawcon_ready <= 1'd1;
        sdram_tfawcon_window <= 3'd0;
        sdram_tccdcon_ready <= 1'd0;
        sdram_tccdcon_count <= 1'd0;
        sdram_twtrcon_ready <= 1'd0;
        sdram_twtrcon_count <= 3'd0;
        sdram_time0 <= 5'd0;
        sdram_time1 <= 4'd0;
        aborted <= 1'd0;
        basesoc_we <= 1'd0;
        slave_sel_r <= 3'd0;
        count <= 20'd1000000;
        basesoc_litedramcore_refresher_state <= 2'd0;
        basesoc_litedramcore_bankmachine0_state <= 3'd0;
        basesoc_litedramcore_bankmachine1_state <= 3'd0;
        basesoc_litedramcore_bankmachine2_state <= 3'd0;
        basesoc_litedramcore_bankmachine3_state <= 3'd0;
        basesoc_litedramcore_bankmachine4_state <= 3'd0;
        basesoc_litedramcore_bankmachine5_state <= 3'd0;
        basesoc_litedramcore_bankmachine6_state <= 3'd0;
        basesoc_litedramcore_bankmachine7_state <= 3'd0;
        basesoc_litedramcore_multiplexer_state <= 4'd0;
        basesoc_litedramcore_new_master_wdata_ready0 <= 1'd0;
        basesoc_litedramcore_new_master_wdata_ready1 <= 1'd0;
        basesoc_litedramcore_new_master_wdata_ready2 <= 1'd0;
        basesoc_litedramcore_new_master_wdata_ready3 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid0 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid1 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid2 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid3 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid4 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid5 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid6 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid7 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid8 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid9 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid10 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid11 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid12 <= 1'd0;
        basesoc_litedramcore_new_master_rdata_valid13 <= 1'd0;
        basesoc_litedramwishbone2native_state <= 2'd0;
        basesoc_wishbone2csr_state <= 2'd0;
    end
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

OSCG #(
	.DIV(3'd6)
) OSCG (
	.OSC(crg_osc_g)
);

ECLKBRIDGECS ECLKBRIDGECS(
	.CLK0(sys2x_i_clk),
	.SEL(1'd0),
	.ECSOUT(crg_sys2x_clk_ecsout)
);

ECLKSYNCB ECLKSYNCB(
	.ECLKI(crg_sys2x_clk_ecsout),
	.STOP(crg_stop),
	.ECLKO(sys2x_clk)
);

CLKDIVF #(
	.DIV("2.0")
) CLKDIVF (
	.ALIGNWD(1'd0),
	.CLKI(sys2x_clk),
	.RST(crg_reset0),
	.CDIVX(sys_clk)
);

//------------------------------------------------------------------------------
// Memory sram: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:2047];
initial begin
	$readmemh("gsd_orangecrab_sram.init", sram);
end
reg [10:0] sram_adr0;
always @(posedge sys_clk) begin
	if (we[0])
		sram[adr][7:0] <= dat_w[7:0];
	if (we[1])
		sram[adr][15:8] <= dat_w[15:8];
	if (we[2])
		sram[adr][23:16] <= dat_w[23:16];
	if (we[3])
		sram[adr][31:24] <= dat_w[31:24];
	sram_adr0 <= adr;
end
assign dat_r = sram[sram_adr0];


DDRDLLA DDRDLLA(
	.CLK(sys2x_clk),
	.FREEZE(ddrphy_freeze),
	.RST(init_rst),
	.UDDCNTLN((~ddrphy_update)),
	.DDRDEL(ddrphy_delay1),
	.LOCK(ddrphy_lock0)
);

ODDRX2F ODDRX2F(
	.D0(1'd0),
	.D1(1'd1),
	.D2(1'd0),
	.D3(1'd1),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f0)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG (
	.A(ddrphy_pad_oddrx2f0),
	.Z(ddram_clk_p)
);

ODDRX2F ODDRX2F_1(
	.D0(ddrphy_dfi_p0_reset_n),
	.D1(ddrphy_dfi_p0_reset_n),
	.D2(ddrphy_dfi_p1_reset_n),
	.D3(ddrphy_dfi_p1_reset_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f1)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_1 (
	.A(ddrphy_pad_oddrx2f1),
	.Z(ddram_reset_n)
);

ODDRX2F ODDRX2F_2(
	.D0(ddrphy_dfi_p0_cs_n),
	.D1(ddrphy_dfi_p0_cs_n),
	.D2(ddrphy_dfi_p1_cs_n),
	.D3(ddrphy_dfi_p1_cs_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f2)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_2 (
	.A(ddrphy_pad_oddrx2f2),
	.Z(ddram_cs_n)
);

ODDRX2F ODDRX2F_3(
	.D0(ddrphy_dfi_p0_address[0]),
	.D1(ddrphy_dfi_p0_address[0]),
	.D2(ddrphy_dfi_p1_address[0]),
	.D3(ddrphy_dfi_p1_address[0]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f3)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_3 (
	.A(ddrphy_pad_oddrx2f3),
	.Z(ddram_a[0])
);

ODDRX2F ODDRX2F_4(
	.D0(ddrphy_dfi_p0_address[1]),
	.D1(ddrphy_dfi_p0_address[1]),
	.D2(ddrphy_dfi_p1_address[1]),
	.D3(ddrphy_dfi_p1_address[1]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f4)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_4 (
	.A(ddrphy_pad_oddrx2f4),
	.Z(ddram_a[1])
);

ODDRX2F ODDRX2F_5(
	.D0(ddrphy_dfi_p0_address[2]),
	.D1(ddrphy_dfi_p0_address[2]),
	.D2(ddrphy_dfi_p1_address[2]),
	.D3(ddrphy_dfi_p1_address[2]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f5)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_5 (
	.A(ddrphy_pad_oddrx2f5),
	.Z(ddram_a[2])
);

ODDRX2F ODDRX2F_6(
	.D0(ddrphy_dfi_p0_address[3]),
	.D1(ddrphy_dfi_p0_address[3]),
	.D2(ddrphy_dfi_p1_address[3]),
	.D3(ddrphy_dfi_p1_address[3]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f6)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_6 (
	.A(ddrphy_pad_oddrx2f6),
	.Z(ddram_a[3])
);

ODDRX2F ODDRX2F_7(
	.D0(ddrphy_dfi_p0_address[4]),
	.D1(ddrphy_dfi_p0_address[4]),
	.D2(ddrphy_dfi_p1_address[4]),
	.D3(ddrphy_dfi_p1_address[4]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f7)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_7 (
	.A(ddrphy_pad_oddrx2f7),
	.Z(ddram_a[4])
);

ODDRX2F ODDRX2F_8(
	.D0(ddrphy_dfi_p0_address[5]),
	.D1(ddrphy_dfi_p0_address[5]),
	.D2(ddrphy_dfi_p1_address[5]),
	.D3(ddrphy_dfi_p1_address[5]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f8)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_8 (
	.A(ddrphy_pad_oddrx2f8),
	.Z(ddram_a[5])
);

ODDRX2F ODDRX2F_9(
	.D0(ddrphy_dfi_p0_address[6]),
	.D1(ddrphy_dfi_p0_address[6]),
	.D2(ddrphy_dfi_p1_address[6]),
	.D3(ddrphy_dfi_p1_address[6]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f9)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_9 (
	.A(ddrphy_pad_oddrx2f9),
	.Z(ddram_a[6])
);

ODDRX2F ODDRX2F_10(
	.D0(ddrphy_dfi_p0_address[7]),
	.D1(ddrphy_dfi_p0_address[7]),
	.D2(ddrphy_dfi_p1_address[7]),
	.D3(ddrphy_dfi_p1_address[7]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f10)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_10 (
	.A(ddrphy_pad_oddrx2f10),
	.Z(ddram_a[7])
);

ODDRX2F ODDRX2F_11(
	.D0(ddrphy_dfi_p0_address[8]),
	.D1(ddrphy_dfi_p0_address[8]),
	.D2(ddrphy_dfi_p1_address[8]),
	.D3(ddrphy_dfi_p1_address[8]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f11)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_11 (
	.A(ddrphy_pad_oddrx2f11),
	.Z(ddram_a[8])
);

ODDRX2F ODDRX2F_12(
	.D0(ddrphy_dfi_p0_address[9]),
	.D1(ddrphy_dfi_p0_address[9]),
	.D2(ddrphy_dfi_p1_address[9]),
	.D3(ddrphy_dfi_p1_address[9]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f12)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_12 (
	.A(ddrphy_pad_oddrx2f12),
	.Z(ddram_a[9])
);

ODDRX2F ODDRX2F_13(
	.D0(ddrphy_dfi_p0_address[10]),
	.D1(ddrphy_dfi_p0_address[10]),
	.D2(ddrphy_dfi_p1_address[10]),
	.D3(ddrphy_dfi_p1_address[10]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f13)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_13 (
	.A(ddrphy_pad_oddrx2f13),
	.Z(ddram_a[10])
);

ODDRX2F ODDRX2F_14(
	.D0(ddrphy_dfi_p0_address[11]),
	.D1(ddrphy_dfi_p0_address[11]),
	.D2(ddrphy_dfi_p1_address[11]),
	.D3(ddrphy_dfi_p1_address[11]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f14)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_14 (
	.A(ddrphy_pad_oddrx2f14),
	.Z(ddram_a[11])
);

ODDRX2F ODDRX2F_15(
	.D0(ddrphy_dfi_p0_address[12]),
	.D1(ddrphy_dfi_p0_address[12]),
	.D2(ddrphy_dfi_p1_address[12]),
	.D3(ddrphy_dfi_p1_address[12]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f15)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_15 (
	.A(ddrphy_pad_oddrx2f15),
	.Z(ddram_a[12])
);

ODDRX2F ODDRX2F_16(
	.D0(ddrphy_dfi_p0_address[13]),
	.D1(ddrphy_dfi_p0_address[13]),
	.D2(ddrphy_dfi_p1_address[13]),
	.D3(ddrphy_dfi_p1_address[13]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f16)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_16 (
	.A(ddrphy_pad_oddrx2f16),
	.Z(ddram_a[13])
);

ODDRX2F ODDRX2F_17(
	.D0(ddrphy_dfi_p0_address[14]),
	.D1(ddrphy_dfi_p0_address[14]),
	.D2(ddrphy_dfi_p1_address[14]),
	.D3(ddrphy_dfi_p1_address[14]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f17)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_17 (
	.A(ddrphy_pad_oddrx2f17),
	.Z(ddram_a[14])
);

ODDRX2F ODDRX2F_18(
	.D0(ddrphy_dfi_p0_address[15]),
	.D1(ddrphy_dfi_p0_address[15]),
	.D2(ddrphy_dfi_p1_address[15]),
	.D3(ddrphy_dfi_p1_address[15]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f18)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_18 (
	.A(ddrphy_pad_oddrx2f18),
	.Z(ddram_a[15])
);

ODDRX2F ODDRX2F_19(
	.D0(ddrphy_dfi_p0_bank[0]),
	.D1(ddrphy_dfi_p0_bank[0]),
	.D2(ddrphy_dfi_p1_bank[0]),
	.D3(ddrphy_dfi_p1_bank[0]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f19)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_19 (
	.A(ddrphy_pad_oddrx2f19),
	.Z(ddram_ba[0])
);

ODDRX2F ODDRX2F_20(
	.D0(ddrphy_dfi_p0_bank[1]),
	.D1(ddrphy_dfi_p0_bank[1]),
	.D2(ddrphy_dfi_p1_bank[1]),
	.D3(ddrphy_dfi_p1_bank[1]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f20)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_20 (
	.A(ddrphy_pad_oddrx2f20),
	.Z(ddram_ba[1])
);

ODDRX2F ODDRX2F_21(
	.D0(ddrphy_dfi_p0_bank[2]),
	.D1(ddrphy_dfi_p0_bank[2]),
	.D2(ddrphy_dfi_p1_bank[2]),
	.D3(ddrphy_dfi_p1_bank[2]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f21)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_21 (
	.A(ddrphy_pad_oddrx2f21),
	.Z(ddram_ba[2])
);

ODDRX2F ODDRX2F_22(
	.D0(ddrphy_dfi_p0_ras_n),
	.D1(ddrphy_dfi_p0_ras_n),
	.D2(ddrphy_dfi_p1_ras_n),
	.D3(ddrphy_dfi_p1_ras_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f22)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_22 (
	.A(ddrphy_pad_oddrx2f22),
	.Z(ddram_ras_n)
);

ODDRX2F ODDRX2F_23(
	.D0(ddrphy_dfi_p0_cas_n),
	.D1(ddrphy_dfi_p0_cas_n),
	.D2(ddrphy_dfi_p1_cas_n),
	.D3(ddrphy_dfi_p1_cas_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f23)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_23 (
	.A(ddrphy_pad_oddrx2f23),
	.Z(ddram_cas_n)
);

ODDRX2F ODDRX2F_24(
	.D0(ddrphy_dfi_p0_we_n),
	.D1(ddrphy_dfi_p0_we_n),
	.D2(ddrphy_dfi_p1_we_n),
	.D3(ddrphy_dfi_p1_we_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f24)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_24 (
	.A(ddrphy_pad_oddrx2f24),
	.Z(ddram_we_n)
);

ODDRX2F ODDRX2F_25(
	.D0(ddrphy_dfi_p0_cke),
	.D1(ddrphy_dfi_p0_cke),
	.D2(ddrphy_dfi_p1_cke),
	.D3(ddrphy_dfi_p1_cke),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f25)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_25 (
	.A(ddrphy_pad_oddrx2f25),
	.Z(ddram_cke)
);

ODDRX2F ODDRX2F_26(
	.D0(ddrphy_dfi_p0_odt),
	.D1(ddrphy_dfi_p0_odt),
	.D2(ddrphy_dfi_p1_odt),
	.D3(ddrphy_dfi_p1_odt),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_pad_oddrx2f26)
);

DELAYG #(
	.DEL_VALUE(1'd0)
) DELAYG_26 (
	.A(ddrphy_pad_oddrx2f26),
	.Z(ddram_odt)
);

DQSBUFM #(
	.DQS_LI_DEL_ADJ("MINUS"),
	.DQS_LI_DEL_VAL(1'd1),
	.DQS_LO_DEL_ADJ("MINUS"),
	.DQS_LO_DEL_VAL(3'd4)
) DQSBUFM (
	.DDRDEL(ddrphy_delay0),
	.DQSI(ddrphy_dqs_i0),
	.ECLK(sys2x_clk),
	.PAUSE((ddrphy_pause0 | ddrphy_dly_sel_storage[0])),
	.RDDIRECTION(1'd1),
	.RDLOADN(1'd0),
	.RDMOVE(1'd0),
	.READ0(ddrphy_dqs_re),
	.READ1(ddrphy_dqs_re),
	.READCLKSEL0(ddrphy_rdly0[0]),
	.READCLKSEL1(ddrphy_rdly0[1]),
	.READCLKSEL2(ddrphy_rdly0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRDIRECTION(1'd1),
	.WRLOADN(1'd0),
	.WRMOVE(1'd0),
	.BURSTDET(ddrphy_burstdet0),
	.DATAVALID(ddrphy_datavalid[0]),
	.DQSR90(ddrphy_dqsr900),
	.DQSW(ddrphy_dqsw0),
	.DQSW270(ddrphy_dqsw2700),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2])
);

ODDRX2DQSB ODDRX2DQSB(
	.D0(1'd0),
	.D1(1'd1),
	.D2(1'd0),
	.D3(1'd1),
	.DQSW(ddrphy_dqsw0),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dqs0)
);

TSHX2DQSA TSHX2DQSA(
	.DQSW(ddrphy_dqsw0),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~(ddrphy_dqs_oe | ddrphy_dqs_postamble))),
	.T1((~(ddrphy_dqs_oe | ddrphy_dqs_preamble))),
	.Q(ddrphy_dqs_oe_n0)
);

ODDRX2DQA ODDRX2DQA(
	.D0(ddrphy_dm_o_data_muxed0[0]),
	.D1(ddrphy_dm_o_data_muxed0[1]),
	.D2(ddrphy_dm_o_data_muxed0[2]),
	.D3(ddrphy_dm_o_data_muxed0[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_dm[0])
);

ODDRX2DQA ODDRX2DQA_1(
	.D0(ddrphy_dq_o_data_muxed0[0]),
	.D1(ddrphy_dq_o_data_muxed0[1]),
	.D2(ddrphy_dq_o_data_muxed0[2]),
	.D3(ddrphy_dq_o_data_muxed0[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o0)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_27 (
	.A(ddrphy_dq_i0),
	.Z(ddrphy_dq_i_delayed0)
);

IDDRX2DQA IDDRX2DQA(
	.D(ddrphy_dq_i_delayed0),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip0_i[0]),
	.Q1(ddrphy_bitslip0_i[1]),
	.Q2(ddrphy_bitslip0_i[2]),
	.Q3(ddrphy_bitslip0_i[3])
);

TSHX2DQA TSHX2DQA(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n0)
);

ODDRX2DQA ODDRX2DQA_2(
	.D0(ddrphy_dq_o_data_muxed1[0]),
	.D1(ddrphy_dq_o_data_muxed1[1]),
	.D2(ddrphy_dq_o_data_muxed1[2]),
	.D3(ddrphy_dq_o_data_muxed1[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o1)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_28 (
	.A(ddrphy_dq_i1),
	.Z(ddrphy_dq_i_delayed1)
);

IDDRX2DQA IDDRX2DQA_1(
	.D(ddrphy_dq_i_delayed1),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip1_i[0]),
	.Q1(ddrphy_bitslip1_i[1]),
	.Q2(ddrphy_bitslip1_i[2]),
	.Q3(ddrphy_bitslip1_i[3])
);

TSHX2DQA TSHX2DQA_1(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n1)
);

ODDRX2DQA ODDRX2DQA_3(
	.D0(ddrphy_dq_o_data_muxed2[0]),
	.D1(ddrphy_dq_o_data_muxed2[1]),
	.D2(ddrphy_dq_o_data_muxed2[2]),
	.D3(ddrphy_dq_o_data_muxed2[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o2)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_29 (
	.A(ddrphy_dq_i2),
	.Z(ddrphy_dq_i_delayed2)
);

IDDRX2DQA IDDRX2DQA_2(
	.D(ddrphy_dq_i_delayed2),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip2_i[0]),
	.Q1(ddrphy_bitslip2_i[1]),
	.Q2(ddrphy_bitslip2_i[2]),
	.Q3(ddrphy_bitslip2_i[3])
);

TSHX2DQA TSHX2DQA_2(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n2)
);

ODDRX2DQA ODDRX2DQA_4(
	.D0(ddrphy_dq_o_data_muxed3[0]),
	.D1(ddrphy_dq_o_data_muxed3[1]),
	.D2(ddrphy_dq_o_data_muxed3[2]),
	.D3(ddrphy_dq_o_data_muxed3[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o3)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_30 (
	.A(ddrphy_dq_i3),
	.Z(ddrphy_dq_i_delayed3)
);

IDDRX2DQA IDDRX2DQA_3(
	.D(ddrphy_dq_i_delayed3),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip3_i[0]),
	.Q1(ddrphy_bitslip3_i[1]),
	.Q2(ddrphy_bitslip3_i[2]),
	.Q3(ddrphy_bitslip3_i[3])
);

TSHX2DQA TSHX2DQA_3(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n3)
);

ODDRX2DQA ODDRX2DQA_5(
	.D0(ddrphy_dq_o_data_muxed4[0]),
	.D1(ddrphy_dq_o_data_muxed4[1]),
	.D2(ddrphy_dq_o_data_muxed4[2]),
	.D3(ddrphy_dq_o_data_muxed4[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o4)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_31 (
	.A(ddrphy_dq_i4),
	.Z(ddrphy_dq_i_delayed4)
);

IDDRX2DQA IDDRX2DQA_4(
	.D(ddrphy_dq_i_delayed4),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip4_i[0]),
	.Q1(ddrphy_bitslip4_i[1]),
	.Q2(ddrphy_bitslip4_i[2]),
	.Q3(ddrphy_bitslip4_i[3])
);

TSHX2DQA TSHX2DQA_4(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n4)
);

ODDRX2DQA ODDRX2DQA_6(
	.D0(ddrphy_dq_o_data_muxed5[0]),
	.D1(ddrphy_dq_o_data_muxed5[1]),
	.D2(ddrphy_dq_o_data_muxed5[2]),
	.D3(ddrphy_dq_o_data_muxed5[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o5)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_32 (
	.A(ddrphy_dq_i5),
	.Z(ddrphy_dq_i_delayed5)
);

IDDRX2DQA IDDRX2DQA_5(
	.D(ddrphy_dq_i_delayed5),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip5_i[0]),
	.Q1(ddrphy_bitslip5_i[1]),
	.Q2(ddrphy_bitslip5_i[2]),
	.Q3(ddrphy_bitslip5_i[3])
);

TSHX2DQA TSHX2DQA_5(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n5)
);

ODDRX2DQA ODDRX2DQA_7(
	.D0(ddrphy_dq_o_data_muxed6[0]),
	.D1(ddrphy_dq_o_data_muxed6[1]),
	.D2(ddrphy_dq_o_data_muxed6[2]),
	.D3(ddrphy_dq_o_data_muxed6[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o6)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_33 (
	.A(ddrphy_dq_i6),
	.Z(ddrphy_dq_i_delayed6)
);

IDDRX2DQA IDDRX2DQA_6(
	.D(ddrphy_dq_i_delayed6),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip6_i[0]),
	.Q1(ddrphy_bitslip6_i[1]),
	.Q2(ddrphy_bitslip6_i[2]),
	.Q3(ddrphy_bitslip6_i[3])
);

TSHX2DQA TSHX2DQA_6(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n6)
);

ODDRX2DQA ODDRX2DQA_8(
	.D0(ddrphy_dq_o_data_muxed7[0]),
	.D1(ddrphy_dq_o_data_muxed7[1]),
	.D2(ddrphy_dq_o_data_muxed7[2]),
	.D3(ddrphy_dq_o_data_muxed7[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o7)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_34 (
	.A(ddrphy_dq_i7),
	.Z(ddrphy_dq_i_delayed7)
);

IDDRX2DQA IDDRX2DQA_7(
	.D(ddrphy_dq_i_delayed7),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip7_i[0]),
	.Q1(ddrphy_bitslip7_i[1]),
	.Q2(ddrphy_bitslip7_i[2]),
	.Q3(ddrphy_bitslip7_i[3])
);

TSHX2DQA TSHX2DQA_7(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n7)
);

DQSBUFM #(
	.DQS_LI_DEL_ADJ("MINUS"),
	.DQS_LI_DEL_VAL(1'd1),
	.DQS_LO_DEL_ADJ("MINUS"),
	.DQS_LO_DEL_VAL(3'd4)
) DQSBUFM_1 (
	.DDRDEL(ddrphy_delay0),
	.DQSI(ddrphy_dqs_i1),
	.ECLK(sys2x_clk),
	.PAUSE((ddrphy_pause0 | ddrphy_dly_sel_storage[1])),
	.RDDIRECTION(1'd1),
	.RDLOADN(1'd0),
	.RDMOVE(1'd0),
	.READ0(ddrphy_dqs_re),
	.READ1(ddrphy_dqs_re),
	.READCLKSEL0(ddrphy_rdly1[0]),
	.READCLKSEL1(ddrphy_rdly1[1]),
	.READCLKSEL2(ddrphy_rdly1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRDIRECTION(1'd1),
	.WRLOADN(1'd0),
	.WRMOVE(1'd0),
	.BURSTDET(ddrphy_burstdet1),
	.DATAVALID(ddrphy_datavalid[1]),
	.DQSR90(ddrphy_dqsr901),
	.DQSW(ddrphy_dqsw1),
	.DQSW270(ddrphy_dqsw2701),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2])
);

ODDRX2DQSB ODDRX2DQSB_1(
	.D0(1'd0),
	.D1(1'd1),
	.D2(1'd0),
	.D3(1'd1),
	.DQSW(ddrphy_dqsw1),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dqs1)
);

TSHX2DQSA TSHX2DQSA_1(
	.DQSW(ddrphy_dqsw1),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~(ddrphy_dqs_oe | ddrphy_dqs_postamble))),
	.T1((~(ddrphy_dqs_oe | ddrphy_dqs_preamble))),
	.Q(ddrphy_dqs_oe_n1)
);

ODDRX2DQA ODDRX2DQA_9(
	.D0(ddrphy_dm_o_data_muxed1[0]),
	.D1(ddrphy_dm_o_data_muxed1[1]),
	.D2(ddrphy_dm_o_data_muxed1[2]),
	.D3(ddrphy_dm_o_data_muxed1[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_dm[1])
);

ODDRX2DQA ODDRX2DQA_10(
	.D0(ddrphy_dq_o_data_muxed8[0]),
	.D1(ddrphy_dq_o_data_muxed8[1]),
	.D2(ddrphy_dq_o_data_muxed8[2]),
	.D3(ddrphy_dq_o_data_muxed8[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o8)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_35 (
	.A(ddrphy_dq_i8),
	.Z(ddrphy_dq_i_delayed8)
);

IDDRX2DQA IDDRX2DQA_8(
	.D(ddrphy_dq_i_delayed8),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip8_i[0]),
	.Q1(ddrphy_bitslip8_i[1]),
	.Q2(ddrphy_bitslip8_i[2]),
	.Q3(ddrphy_bitslip8_i[3])
);

TSHX2DQA TSHX2DQA_8(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n8)
);

ODDRX2DQA ODDRX2DQA_11(
	.D0(ddrphy_dq_o_data_muxed9[0]),
	.D1(ddrphy_dq_o_data_muxed9[1]),
	.D2(ddrphy_dq_o_data_muxed9[2]),
	.D3(ddrphy_dq_o_data_muxed9[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o9)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_36 (
	.A(ddrphy_dq_i9),
	.Z(ddrphy_dq_i_delayed9)
);

IDDRX2DQA IDDRX2DQA_9(
	.D(ddrphy_dq_i_delayed9),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip9_i[0]),
	.Q1(ddrphy_bitslip9_i[1]),
	.Q2(ddrphy_bitslip9_i[2]),
	.Q3(ddrphy_bitslip9_i[3])
);

TSHX2DQA TSHX2DQA_9(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n9)
);

ODDRX2DQA ODDRX2DQA_12(
	.D0(ddrphy_dq_o_data_muxed10[0]),
	.D1(ddrphy_dq_o_data_muxed10[1]),
	.D2(ddrphy_dq_o_data_muxed10[2]),
	.D3(ddrphy_dq_o_data_muxed10[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o10)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_37 (
	.A(ddrphy_dq_i10),
	.Z(ddrphy_dq_i_delayed10)
);

IDDRX2DQA IDDRX2DQA_10(
	.D(ddrphy_dq_i_delayed10),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip10_i[0]),
	.Q1(ddrphy_bitslip10_i[1]),
	.Q2(ddrphy_bitslip10_i[2]),
	.Q3(ddrphy_bitslip10_i[3])
);

TSHX2DQA TSHX2DQA_10(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n10)
);

ODDRX2DQA ODDRX2DQA_13(
	.D0(ddrphy_dq_o_data_muxed11[0]),
	.D1(ddrphy_dq_o_data_muxed11[1]),
	.D2(ddrphy_dq_o_data_muxed11[2]),
	.D3(ddrphy_dq_o_data_muxed11[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o11)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_38 (
	.A(ddrphy_dq_i11),
	.Z(ddrphy_dq_i_delayed11)
);

IDDRX2DQA IDDRX2DQA_11(
	.D(ddrphy_dq_i_delayed11),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip11_i[0]),
	.Q1(ddrphy_bitslip11_i[1]),
	.Q2(ddrphy_bitslip11_i[2]),
	.Q3(ddrphy_bitslip11_i[3])
);

TSHX2DQA TSHX2DQA_11(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n11)
);

ODDRX2DQA ODDRX2DQA_14(
	.D0(ddrphy_dq_o_data_muxed12[0]),
	.D1(ddrphy_dq_o_data_muxed12[1]),
	.D2(ddrphy_dq_o_data_muxed12[2]),
	.D3(ddrphy_dq_o_data_muxed12[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o12)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_39 (
	.A(ddrphy_dq_i12),
	.Z(ddrphy_dq_i_delayed12)
);

IDDRX2DQA IDDRX2DQA_12(
	.D(ddrphy_dq_i_delayed12),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip12_i[0]),
	.Q1(ddrphy_bitslip12_i[1]),
	.Q2(ddrphy_bitslip12_i[2]),
	.Q3(ddrphy_bitslip12_i[3])
);

TSHX2DQA TSHX2DQA_12(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n12)
);

ODDRX2DQA ODDRX2DQA_15(
	.D0(ddrphy_dq_o_data_muxed13[0]),
	.D1(ddrphy_dq_o_data_muxed13[1]),
	.D2(ddrphy_dq_o_data_muxed13[2]),
	.D3(ddrphy_dq_o_data_muxed13[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o13)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_40 (
	.A(ddrphy_dq_i13),
	.Z(ddrphy_dq_i_delayed13)
);

IDDRX2DQA IDDRX2DQA_13(
	.D(ddrphy_dq_i_delayed13),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip13_i[0]),
	.Q1(ddrphy_bitslip13_i[1]),
	.Q2(ddrphy_bitslip13_i[2]),
	.Q3(ddrphy_bitslip13_i[3])
);

TSHX2DQA TSHX2DQA_13(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n13)
);

ODDRX2DQA ODDRX2DQA_16(
	.D0(ddrphy_dq_o_data_muxed14[0]),
	.D1(ddrphy_dq_o_data_muxed14[1]),
	.D2(ddrphy_dq_o_data_muxed14[2]),
	.D3(ddrphy_dq_o_data_muxed14[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o14)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_41 (
	.A(ddrphy_dq_i14),
	.Z(ddrphy_dq_i_delayed14)
);

IDDRX2DQA IDDRX2DQA_14(
	.D(ddrphy_dq_i_delayed14),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip14_i[0]),
	.Q1(ddrphy_bitslip14_i[1]),
	.Q2(ddrphy_bitslip14_i[2]),
	.Q3(ddrphy_bitslip14_i[3])
);

TSHX2DQA TSHX2DQA_14(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n14)
);

ODDRX2DQA ODDRX2DQA_17(
	.D0(ddrphy_dq_o_data_muxed15[0]),
	.D1(ddrphy_dq_o_data_muxed15[1]),
	.D2(ddrphy_dq_o_data_muxed15[2]),
	.D3(ddrphy_dq_o_data_muxed15[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o15)
);

DELAYG #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYG_42 (
	.A(ddrphy_dq_i15),
	.Z(ddrphy_dq_i_delayed15)
);

IDDRX2DQA IDDRX2DQA_15(
	.D(ddrphy_dq_i_delayed15),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip15_i[0]),
	.Q1(ddrphy_bitslip15_i[1]),
	.Q2(ddrphy_bitslip15_i[2]),
	.Q3(ddrphy_bitslip15_i[3])
);

TSHX2DQA TSHX2DQA_15(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n15)
);

//------------------------------------------------------------------------------
// Memory storage: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage[0:7];
reg [22:0] storage_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine0_wrport_we)
		storage[sdram_bankmachine0_wrport_adr] <= sdram_bankmachine0_wrport_dat_w;
	storage_dat0 <= storage[sdram_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine0_wrport_dat_r = storage_dat0;
assign sdram_bankmachine0_rdport_dat_r = storage[sdram_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_1: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_1[0:7];
reg [22:0] storage_1_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine1_wrport_we)
		storage_1[sdram_bankmachine1_wrport_adr] <= sdram_bankmachine1_wrport_dat_w;
	storage_1_dat0 <= storage_1[sdram_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine1_wrport_dat_r = storage_1_dat0;
assign sdram_bankmachine1_rdport_dat_r = storage_1[sdram_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_2[0:7];
reg [22:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine2_wrport_we)
		storage_2[sdram_bankmachine2_wrport_adr] <= sdram_bankmachine2_wrport_dat_w;
	storage_2_dat0 <= storage_2[sdram_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine2_wrport_dat_r = storage_2_dat0;
assign sdram_bankmachine2_rdport_dat_r = storage_2[sdram_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_3[0:7];
reg [22:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine3_wrport_we)
		storage_3[sdram_bankmachine3_wrport_adr] <= sdram_bankmachine3_wrport_dat_w;
	storage_3_dat0 <= storage_3[sdram_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine3_wrport_dat_r = storage_3_dat0;
assign sdram_bankmachine3_rdport_dat_r = storage_3[sdram_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_4[0:7];
reg [22:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine4_wrport_we)
		storage_4[sdram_bankmachine4_wrport_adr] <= sdram_bankmachine4_wrport_dat_w;
	storage_4_dat0 <= storage_4[sdram_bankmachine4_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine4_wrport_dat_r = storage_4_dat0;
assign sdram_bankmachine4_rdport_dat_r = storage_4[sdram_bankmachine4_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_5[0:7];
reg [22:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine5_wrport_we)
		storage_5[sdram_bankmachine5_wrport_adr] <= sdram_bankmachine5_wrport_dat_w;
	storage_5_dat0 <= storage_5[sdram_bankmachine5_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine5_wrport_dat_r = storage_5_dat0;
assign sdram_bankmachine5_rdport_dat_r = storage_5[sdram_bankmachine5_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_6[0:7];
reg [22:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine6_wrport_we)
		storage_6[sdram_bankmachine6_wrport_adr] <= sdram_bankmachine6_wrport_dat_w;
	storage_6_dat0 <= storage_6[sdram_bankmachine6_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine6_wrport_dat_r = storage_6_dat0;
assign sdram_bankmachine6_rdport_dat_r = storage_6[sdram_bankmachine6_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_7[0:7];
reg [22:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (sdram_bankmachine7_wrport_we)
		storage_7[sdram_bankmachine7_wrport_adr] <= sdram_bankmachine7_wrport_dat_w;
	storage_7_dat0 <= storage_7[sdram_bankmachine7_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdram_bankmachine7_wrport_dat_r = storage_7_dat0;
assign sdram_bankmachine7_rdport_dat_r = storage_7[sdram_bankmachine7_rdport_adr];


(* FREQUENCY_PIN_CLKI = "48.0", FREQUENCY_PIN_CLKOP = "96.0", ICP_CURRENT = "6", LPF_RESISTOR = "16", MFG_ENABLE_FILTEROPAMP = "1", MFG_GMCREF_SEL = "2" *)
EHXPLLL #(
	.CLKFB_DIV(4'd10),
	.CLKI_DIV(1'd1),
	.CLKOP_CPHASE(3'd4),
	.CLKOP_DIV(3'd5),
	.CLKOP_ENABLE("ENABLED"),
	.CLKOP_FPHASE(1'd0),
	.CLKOS_CPHASE(1'd0),
	.CLKOS_DIV(1'd1),
	.CLKOS_ENABLE("ENABLED"),
	.CLKOS_FPHASE(1'd0),
	.FEEDBK_PATH("INT_OS")
) EHXPLLL (
	.CLKI(crg_clkin),
	.RST(crg_reset1),
	.STDBY(crg_stdby),
	.CLKOP(crg_clkout),
	.CLKOS(basesoc_crg_ecp5pll),
	.LOCK(basesoc_crg_locked)
);

FD1S3BX FD1S3BX(
	.CK(sys2x_i_clk),
	.D(1'd0),
	.PD((~crg_locked)),
	.Q(rst10)
);

FD1S3BX FD1S3BX_1(
	.CK(sys2x_i_clk),
	.D(rst10),
	.PD((~crg_locked)),
	.Q(sys2x_i_rst)
);

FD1S3BX FD1S3BX_2(
	.CK(sys2x_i_clk),
	.D(1'd0),
	.PD((~crg_locked)),
	.Q(rst11)
);

FD1S3BX FD1S3BX_3(
	.CK(sys2x_i_clk),
	.D(rst11),
	.PD((~crg_locked)),
	.Q(sys2x_i_rst)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO (
	.B(ddram_dqs_p[0]),
	.I(ddrphy_dqs0),
	.T((~(~ddrphy_dqs_oe_n0))),
	.O(ddrphy_dqs_i0)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_1 (
	.B(ddram_dq[0]),
	.I(ddrphy_dq_o0),
	.T((~(~ddrphy_dq_oe_n0))),
	.O(ddrphy_dq_i0)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_2 (
	.B(ddram_dq[1]),
	.I(ddrphy_dq_o1),
	.T((~(~ddrphy_dq_oe_n1))),
	.O(ddrphy_dq_i1)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_3 (
	.B(ddram_dq[2]),
	.I(ddrphy_dq_o2),
	.T((~(~ddrphy_dq_oe_n2))),
	.O(ddrphy_dq_i2)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_4 (
	.B(ddram_dq[3]),
	.I(ddrphy_dq_o3),
	.T((~(~ddrphy_dq_oe_n3))),
	.O(ddrphy_dq_i3)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_5 (
	.B(ddram_dq[4]),
	.I(ddrphy_dq_o4),
	.T((~(~ddrphy_dq_oe_n4))),
	.O(ddrphy_dq_i4)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_6 (
	.B(ddram_dq[5]),
	.I(ddrphy_dq_o5),
	.T((~(~ddrphy_dq_oe_n5))),
	.O(ddrphy_dq_i5)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_7 (
	.B(ddram_dq[6]),
	.I(ddrphy_dq_o6),
	.T((~(~ddrphy_dq_oe_n6))),
	.O(ddrphy_dq_i6)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_8 (
	.B(ddram_dq[7]),
	.I(ddrphy_dq_o7),
	.T((~(~ddrphy_dq_oe_n7))),
	.O(ddrphy_dq_i7)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_9 (
	.B(ddram_dqs_p[1]),
	.I(ddrphy_dqs1),
	.T((~(~ddrphy_dqs_oe_n1))),
	.O(ddrphy_dqs_i1)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_10 (
	.B(ddram_dq[8]),
	.I(ddrphy_dq_o8),
	.T((~(~ddrphy_dq_oe_n8))),
	.O(ddrphy_dq_i8)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_11 (
	.B(ddram_dq[9]),
	.I(ddrphy_dq_o9),
	.T((~(~ddrphy_dq_oe_n9))),
	.O(ddrphy_dq_i9)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_12 (
	.B(ddram_dq[10]),
	.I(ddrphy_dq_o10),
	.T((~(~ddrphy_dq_oe_n10))),
	.O(ddrphy_dq_i10)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_13 (
	.B(ddram_dq[11]),
	.I(ddrphy_dq_o11),
	.T((~(~ddrphy_dq_oe_n11))),
	.O(ddrphy_dq_i11)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_14 (
	.B(ddram_dq[12]),
	.I(ddrphy_dq_o12),
	.T((~(~ddrphy_dq_oe_n12))),
	.O(ddrphy_dq_i12)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_15 (
	.B(ddram_dq[13]),
	.I(ddrphy_dq_o13),
	.T((~(~ddrphy_dq_oe_n13))),
	.O(ddrphy_dq_i13)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_16 (
	.B(ddram_dq[14]),
	.I(ddrphy_dq_o14),
	.T((~(~ddrphy_dq_oe_n14))),
	.O(ddrphy_dq_i14)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_17 (
	.B(ddram_dq[15]),
	.I(ddrphy_dq_o15),
	.T((~(~ddrphy_dq_oe_n15))),
	.O(ddrphy_dq_i15)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2023-05-03 00:10:22.
//------------------------------------------------------------------------------
